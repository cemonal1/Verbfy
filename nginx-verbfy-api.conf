# Verbfy API Nginx Configuration with WebSocket Support
# This file should be placed in /etc/nginx/sites-available/verbfy-api
# and symlinked to /etc/nginx/sites-enabled/

# WebSocket connection upgrade map
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

# WebSocket upgrade handling
map $http_upgrade $ws_upgrade {
    websocket upgrade;
    default '';
}

server {
    listen 80;
    server_name api.verbfy.com;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name api.verbfy.com;
    
    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/api.verbfy.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.verbfy.com/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security Headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Permissions Policy Headers for Microphone Access
    add_header Permissions-Policy "microphone=*, camera=*, geolocation=*" always;
    add_header Feature-Policy "microphone *; camera *; geolocation *" always;
    
    # CORS Headers - Dynamic origin handling
    set $cors_origin "";
    if ($http_origin ~* "^https://(verbfy\.com|www\.verbfy\.com)$") {
        set $cors_origin $http_origin;
    }
    
    # REMOVED: Access-Control-Allow-Origin on non-OPTIONS requests to avoid duplication
    # add_header Access-Control-Allow-Origin $cors_origin always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, PATCH, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With, Upgrade, Connection, Sec-WebSocket-Key, Sec-WebSocket-Version, Sec-WebSocket-Protocol" always;
    add_header Access-Control-Allow-Credentials "true" always;
    add_header Access-Control-Expose-Headers "set-cookie, X-CSRF-Token" always;
    
    # Handle preflight requests
    if ($request_method = 'OPTIONS') {
        add_header Access-Control-Allow-Origin $cors_origin always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, PATCH, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With, Upgrade, Connection, Sec-WebSocket-Key, Sec-WebSocket-Version, Sec-WebSocket-Protocol" always;
        add_header Access-Control-Allow-Credentials "true" always;
        add_header Access-Control-Max-Age "86400" always;
        return 204;
    }
    
    # Client max body size for file uploads
    client_max_body_size 100M;
    
    # Proxy settings
    proxy_http_version 1.1;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    
    # WebSocket specific headers
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Sec-WebSocket-Key $http_sec_websocket_key;
    proxy_set_header Sec-WebSocket-Version $http_sec_websocket_version;
    proxy_set_header Sec-WebSocket-Protocol $http_sec_websocket_protocol;
    
    # WebSocket timeout settings
    proxy_read_timeout 86400;
    proxy_send_timeout 86400;
    proxy_connect_timeout 60;
    
    # API Routes
    location / {
        proxy_pass http://127.0.0.1:5000;
        
        # WebSocket upgrade handling
        if ($http_upgrade = "websocket") {
            proxy_pass http://127.0.0.1:5000;
        }
    }
    
    # Socket.IO specific handling
    location /socket.io/ {
        proxy_pass http://127.0.0.1:5000;
        
        # WebSocket upgrade for Socket.IO
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Socket.IO specific headers
        proxy_set_header Sec-WebSocket-Key $http_sec_websocket_key;
        proxy_set_header Sec-WebSocket-Version $http_sec_websocket_version;
        proxy_set_header Sec-WebSocket-Protocol $http_sec_websocket_protocol;
        
        # Additional WebSocket headers for better compatibility
        proxy_set_header Sec-WebSocket-Extensions $http_sec_websocket_extensions;
        proxy_set_header Sec-WebSocket-Accept $http_sec_websocket_accept;
        
        # WebSocket timeouts
        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
        proxy_connect_timeout 60;
        
        # Buffer settings for real-time communication
        proxy_buffering off;
        proxy_cache off;
        
        # Disable proxy buffering for WebSocket
        proxy_request_buffering off;
        
        # Handle WebSocket upgrade more gracefully
        if ($http_upgrade = "websocket") {
            proxy_pass http://127.0.0.1:5000;
        }
    }
    
    # VerbfyTalk P2P Audio Server
    location /verbfy-talk/ {
        proxy_pass http://127.0.0.1:5000;
        
        # WebSocket upgrade for VerbfyTalk
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket specific headers
        proxy_set_header Sec-WebSocket-Key $http_sec_websocket_key;
        proxy_set_header Sec-WebSocket-Version $http_sec_websocket_version;
        proxy_set_header Sec-WebSocket-Protocol $http_sec_websocket_protocol;
        
        # WebSocket timeouts
        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
        proxy_connect_timeout 60;
        
        # Buffer settings for real-time communication
        proxy_buffering off;
        proxy_cache off;
        
        # Permissions policy for microphone access
        add_header Permissions-Policy "microphone=(self), camera=(self)" always;
        add_header Feature-Policy "microphone self; camera self" always;
    }
    
    # Voice Chat Server
    location /voice-chat/ {
        proxy_pass http://127.0.0.1:5000;
        
        # WebSocket upgrade for Voice Chat
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket specific headers
        proxy_set_header Sec-WebSocket-Key $http_sec_websocket_key;
        proxy_set_header Sec-WebSocket-Version $http_sec_websocket_version;
        proxy_set_header Sec-WebSocket-Protocol $http_sec_websocket_protocol;
        
        # WebSocket timeouts
        proxy_read_timeout 86400;
        proxy_send_timeout 86400;
        proxy_connect_timeout 60;
        
        # Buffer settings for real-time communication
        proxy_buffering off;
        proxy_cache off;
    }
    
    # Health check endpoint
    location /health {
        proxy_pass http://127.0.0.1:5000/api/health;
        access_log off;
    }
    
    # CORS test endpoint
    location /cors-test {
        proxy_pass http://127.0.0.1:5000/api/cors-test;
    }
    
    # Logging
    access_log /var/log/nginx/verbfy-api-access.log;
    error_log /var/log/nginx/verbfy-api-error.log;
}
