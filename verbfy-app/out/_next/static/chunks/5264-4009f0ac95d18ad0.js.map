{"version":3,"file":"static/chunks/5264-4009f0ac95d18ad0.js","mappings":"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","sources":["webpack://_N_E/./src/components/performance/PerformanceDashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { PerformanceDashboard as PerformanceDashboardType, PerformanceAlert } from '@/types/performance';\nimport api from '@/lib/api';\n\ninterface PerformanceDashboardProps {\n  organizationId?: string;\n}\n\nexport default function PerformanceDashboard({ organizationId }: PerformanceDashboardProps) {\n  const [dashboard, setDashboard] = useState<PerformanceDashboardType | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [selectedAlert, setSelectedAlert] = useState<PerformanceAlert | null>(null);\n  const [timeRange, setTimeRange] = useState<'1h' | '6h' | '24h' | '7d' | '30d'>('24h');\n  const [autoRefresh, setAutoRefresh] = useState(true);\n\n  useEffect(() => {\n    fetchPerformanceData();\n    \n    if (autoRefresh) {\n      const interval = setInterval(fetchPerformanceData, 30000); // Refresh every 30 seconds\n      return () => clearInterval(interval);\n    }\n  }, [organizationId, timeRange, autoRefresh]);\n\n  const fetchPerformanceData = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await api.get('/api/performance/dashboard', {\n        params: { organizationId, timeRange }\n      });\n      setDashboard(response.data.data);\n    } catch (err: any) {\n      setError(err.response?.data?.message || 'Failed to fetch performance data');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAcknowledgeAlert = async (alertId: string) => {\n    try {\n      await api.put(`/api/performance/alerts/${alertId}/acknowledge`);\n      fetchPerformanceData(); // Refresh data\n    } catch (err: any) {\n      console.error('Failed to acknowledge alert:', err);\n    }\n  };\n\n  const handleResolveAlert = async (alertId: string) => {\n    try {\n      await api.put(`/api/performance/alerts/${alertId}/resolve`);\n      fetchPerformanceData(); // Refresh data\n    } catch (err: any) {\n      console.error('Failed to resolve alert:', err);\n    }\n  };\n\n  const getHealthColor = (health: string) => {\n    switch (health) {\n      case 'healthy':\n        return 'text-green-600 bg-green-100';\n      case 'degraded':\n        return 'text-yellow-600 bg-yellow-100';\n      case 'critical':\n        return 'text-red-600 bg-red-100';\n      default:\n        return 'text-gray-600 bg-gray-100';\n    }\n  };\n\n  const getSeverityColor = (severity: string) => {\n    switch (severity) {\n      case 'critical':\n        return 'bg-red-100 text-red-800 border-red-200';\n      case 'warning':\n        return 'bg-yellow-100 text-yellow-800 border-yellow-200';\n      case 'info':\n        return 'bg-blue-100 text-blue-800 border-blue-200';\n      default:\n        return 'bg-gray-100 text-gray-800 border-gray-200';\n    }\n  };\n\n  const formatBytes = (bytes: number) => {\n    if (bytes === 0) return '0 B';\n    const k = 1024;\n    const sizes = ['B', 'KB', 'MB', 'GB', 'TB'];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n  };\n\n  const formatPercentage = (value: number) => {\n    return `${value.toFixed(1)}%`;\n  };\n\n  const formatDuration = (seconds: number) => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n    return `${hours}h ${minutes}m`;\n  };\n\n  if (loading && !dashboard) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"bg-red-50 border border-red-200 rounded-md p-4\">\n        <div className=\"flex\">\n          <div className=\"flex-shrink-0\">\n            <svg className=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n            </svg>\n          </div>\n          <div className=\"ml-3\">\n            <h3 className=\"text-sm font-medium text-red-800\">Error</h3>\n            <div className=\"mt-2 text-sm text-red-700\">{error}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (!dashboard) {\n    return (\n      <div className=\"text-center py-12\">\n        <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No Performance Data</h3>\n        <p className=\"text-gray-500\">Performance monitoring data is not available.</p>\n      </div>\n    );\n  }\n\n  const { currentMetrics, summary, alerts } = dashboard;\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h2 className=\"text-2xl font-bold text-gray-900\">Performance Dashboard</h2>\n          <p className=\"text-gray-600\">Real-time system performance monitoring</p>\n        </div>\n        <div className=\"flex items-center space-x-4\">\n          <div className=\"flex items-center space-x-2\">\n            <label className=\"text-sm font-medium text-gray-700\">Time Range:</label>\n            <select\n              value={timeRange}\n              onChange={(e) => setTimeRange(e.target.value as any)}\n              className=\"px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            >\n              <option value=\"1h\">Last Hour</option>\n              <option value=\"6h\">Last 6 Hours</option>\n              <option value=\"24h\">Last 24 Hours</option>\n              <option value=\"7d\">Last 7 Days</option>\n              <option value=\"30d\">Last 30 Days</option>\n            </select>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <input\n              type=\"checkbox\"\n              id=\"autoRefresh\"\n              checked={autoRefresh}\n              onChange={(e) => setAutoRefresh(e.target.checked)}\n              className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n            />\n            <label htmlFor=\"autoRefresh\" className=\"text-sm font-medium text-gray-700\">\n              Auto Refresh\n            </label>\n          </div>\n        </div>\n      </div>\n\n      {/* Overall Health Status */}\n      <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4\">\n        <div className=\"bg-white rounded-lg shadow p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0\">\n              <div className=\"w-8 h-8 bg-blue-100 rounded-md flex items-center justify-center\">\n                <svg className=\"w-5 h-5 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                </svg>\n              </div>\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Overall Health</p>\n              <p className={`text-lg font-semibold ${getHealthColor(summary.overallHealth)} px-2 py-1 rounded`}>\n                {summary.overallHealth}\n              </p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0\">\n              <div className=\"w-8 h-8 bg-green-100 rounded-md flex items-center justify-center\">\n                <svg className=\"w-5 h-5 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 12h14M5 12a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v4a2 2 0 01-2 2M5 12a2 2 0 00-2 2v4a2 2 0 002 2h14a2 2 0 002-2v-4a2 2 0 00-2-2m-2-4h.01M17 16h.01\" />\n                </svg>\n              </div>\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">System</p>\n              <p className={`text-lg font-semibold ${getHealthColor(summary.systemHealth)} px-2 py-1 rounded`}>\n                {summary.systemHealth}\n              </p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0\">\n              <div className=\"w-8 h-8 bg-purple-100 rounded-md flex items-center justify-center\">\n                <svg className=\"w-5 h-5 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10 20l4-16m4 4l4 4-4 4M6 16l-4-4 4-4\" />\n                </svg>\n              </div>\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Application</p>\n              <p className={`text-lg font-semibold ${getHealthColor(summary.applicationHealth)} px-2 py-1 rounded`}>\n                {summary.applicationHealth}\n              </p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0\">\n              <div className=\"w-8 h-8 bg-yellow-100 rounded-md flex items-center justify-center\">\n                <svg className=\"w-5 h-5 text-yellow-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 7v10c0 2.21 3.582 4 8 4s8-1.79 8-4V7M4 7c0 2.21 3.582 4 8 4s8-1.79 8-4M4 7c0-2.21 3.582-4 8-4s8 1.79 8 4\" />\n                </svg>\n              </div>\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">Database</p>\n              <p className={`text-lg font-semibold ${getHealthColor(summary.databaseHealth)} px-2 py-1 rounded`}>\n                {summary.databaseHealth}\n              </p>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"bg-white rounded-lg shadow p-6\">\n          <div className=\"flex items-center\">\n            <div className=\"flex-shrink-0\">\n              <div className=\"w-8 h-8 bg-indigo-100 rounded-md flex items-center justify-center\">\n                <svg className=\"w-5 h-5 text-indigo-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8.111 16.404a5.5 5.5 0 017.778 0M12 20h.01m-7.08-7.071c3.904-3.905 10.236-3.905 14.141 0M1.394 9.393c5.857-5.857 15.355-5.857 21.213 0\" />\n                </svg>\n              </div>\n            </div>\n            <div className=\"ml-4\">\n              <p className=\"text-sm font-medium text-gray-500\">API</p>\n              <p className={`text-lg font-semibold ${getHealthColor(summary.apiHealth)} px-2 py-1 rounded`}>\n                {summary.apiHealth}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* System Metrics */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* CPU and Memory */}\n        <div className=\"bg-white rounded-lg shadow p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">System Resources</h3>\n          <div className=\"space-y-4\">\n            <div>\n              <div className=\"flex justify-between text-sm text-gray-600 mb-1\">\n                <span>CPU Usage</span>\n                <span>{formatPercentage(currentMetrics.system.cpu.usage)}</span>\n              </div>\n              <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                <div \n                  className={`h-2 rounded-full ${\n                    currentMetrics.system.cpu.usage > 80 ? 'bg-red-500' :\n                    currentMetrics.system.cpu.usage > 60 ? 'bg-yellow-500' : 'bg-green-500'\n                  }`}\n                  style={{ width: `${currentMetrics.system.cpu.usage}%` }}\n                ></div>\n              </div>\n              <p className=\"text-xs text-gray-500 mt-1\">\n                Load: {currentMetrics.system.cpu.load.toFixed(2)} | Cores: {currentMetrics.system.cpu.cores}\n              </p>\n            </div>\n\n            <div>\n              <div className=\"flex justify-between text-sm text-gray-600 mb-1\">\n                <span>Memory Usage</span>\n                <span>{formatPercentage(currentMetrics.system.memory.usage)}</span>\n              </div>\n              <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                <div \n                  className={`h-2 rounded-full ${\n                    currentMetrics.system.memory.usage > 80 ? 'bg-red-500' :\n                    currentMetrics.system.memory.usage > 60 ? 'bg-yellow-500' : 'bg-green-500'\n                  }`}\n                  style={{ width: `${currentMetrics.system.memory.usage}%` }}\n                ></div>\n              </div>\n              <p className=\"text-xs text-gray-500 mt-1\">\n                {formatBytes(currentMetrics.system.memory.used)} / {formatBytes(currentMetrics.system.memory.total)}\n              </p>\n            </div>\n\n            <div>\n              <div className=\"flex justify-between text-sm text-gray-600 mb-1\">\n                <span>Disk Usage</span>\n                <span>{formatPercentage(currentMetrics.system.disk.usage)}</span>\n              </div>\n              <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                <div \n                  className={`h-2 rounded-full ${\n                    currentMetrics.system.disk.usage > 80 ? 'bg-red-500' :\n                    currentMetrics.system.disk.usage > 60 ? 'bg-yellow-500' : 'bg-green-500'\n                  }`}\n                  style={{ width: `${currentMetrics.system.disk.usage}%` }}\n                ></div>\n              </div>\n              <p className=\"text-xs text-gray-500 mt-1\">\n                {formatBytes(currentMetrics.system.disk.used)} / {formatBytes(currentMetrics.system.disk.total)}\n              </p>\n            </div>\n          </div>\n        </div>\n\n        {/* Application Performance */}\n        <div className=\"bg-white rounded-lg shadow p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Application Performance</h3>\n          <div className=\"space-y-4\">\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-500\">Response Time</p>\n                <p className=\"text-2xl font-semibold text-gray-900\">\n                  {currentMetrics.application.responseTime.average.toFixed(0)}ms\n                </p>\n                <p className=\"text-xs text-gray-500\">\n                  P95: {currentMetrics.application.responseTime.p95.toFixed(0)}ms\n                </p>\n              </div>\n              <div>\n                <p className=\"text-sm font-medium text-gray-500\">Throughput</p>\n                <p className=\"text-2xl font-semibold text-gray-900\">\n                  {currentMetrics.application.throughput.requestsPerSecond.toFixed(1)}/s\n                </p>\n                <p className=\"text-xs text-gray-500\">\n                  Success: {formatPercentage(currentMetrics.application.throughput.successRate)}\n                </p>\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-500\">Uptime</p>\n                <p className=\"text-2xl font-semibold text-gray-900\">\n                  {formatDuration(currentMetrics.application.uptime)}\n                </p>\n              </div>\n              <div>\n                <p className=\"text-sm font-medium text-gray-500\">Active Connections</p>\n                <p className=\"text-2xl font-semibold text-gray-900\">\n                  {currentMetrics.application.activeConnections}\n                </p>\n              </div>\n            </div>\n\n            <div>\n              <p className=\"text-sm font-medium text-gray-500 mb-1\">Memory Usage</p>\n              <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                <div \n                  className=\"h-2 rounded-full bg-blue-500\"\n                  style={{ width: `${(currentMetrics.application.memory.heapUsed / currentMetrics.application.memory.heapTotal) * 100}%` }}\n                ></div>\n              </div>\n              <p className=\"text-xs text-gray-500 mt-1\">\n                {formatBytes(currentMetrics.application.memory.heapUsed)} / {formatBytes(currentMetrics.application.memory.heapTotal)}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Database and API Metrics */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Database Performance */}\n        <div className=\"bg-white rounded-lg shadow p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Database Performance</h3>\n          <div className=\"space-y-4\">\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-500\">Connections</p>\n                <p className=\"text-2xl font-semibold text-gray-900\">\n                  {currentMetrics.database.connections.active}/{currentMetrics.database.connections.max}\n                </p>\n                <p className=\"text-xs text-gray-500\">\n                  Usage: {formatPercentage(currentMetrics.database.connections.usage)}\n                </p>\n              </div>\n              <div>\n                <p className=\"text-sm font-medium text-gray-500\">Query Time</p>\n                <p className=\"text-2xl font-semibold text-gray-900\">\n                  {currentMetrics.database.queries.averageTime.toFixed(0)}ms\n                </p>\n                <p className=\"text-xs text-gray-500\">\n                  {currentMetrics.database.queries.slow} slow queries\n                </p>\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-500\">Cache Hit Ratio</p>\n                <p className=\"text-2xl font-semibold text-gray-900\">\n                  {formatPercentage(currentMetrics.database.performance.cacheHitRatio)}\n                </p>\n              </div>\n              <div>\n                <p className=\"text-sm font-medium text-gray-500\">Index Hit Ratio</p>\n                <p className=\"text-2xl font-semibold text-gray-900\">\n                  {formatPercentage(currentMetrics.database.performance.indexHitRatio)}\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* API Performance */}\n        <div className=\"bg-white rounded-lg shadow p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">API Performance</h3>\n          <div className=\"space-y-4\">\n            <div className=\"grid grid-cols-2 gap-4\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-500\">Request Rate</p>\n                <p className=\"text-2xl font-semibold text-gray-900\">\n                  {currentMetrics.api.requests.rate.toFixed(1)}/s\n                </p>\n                <p className=\"text-xs text-gray-500\">\n                  Total: {currentMetrics.api.requests.total.toLocaleString()}\n                </p>\n              </div>\n              <div>\n                <p className=\"text-sm font-medium text-gray-500\">Latency</p>\n                <p className=\"text-2xl font-semibold text-gray-900\">\n                  {currentMetrics.api.latency.average.toFixed(0)}ms\n                </p>\n                <p className=\"text-xs text-gray-500\">\n                  P95: {currentMetrics.api.latency.p95.toFixed(0)}ms\n                </p>\n              </div>\n            </div>\n\n            <div>\n              <p className=\"text-sm font-medium text-gray-500 mb-2\">Response Codes</p>\n              <div className=\"grid grid-cols-4 gap-2\">\n                <div className=\"text-center\">\n                  <p className=\"text-lg font-semibold text-green-600\">{currentMetrics.api.responseCodes['2xx']}</p>\n                  <p className=\"text-xs text-gray-500\">2xx</p>\n                </div>\n                <div className=\"text-center\">\n                  <p className=\"text-lg font-semibold text-blue-600\">{currentMetrics.api.responseCodes['3xx']}</p>\n                  <p className=\"text-xs text-gray-500\">3xx</p>\n                </div>\n                <div className=\"text-center\">\n                  <p className=\"text-lg font-semibold text-yellow-600\">{currentMetrics.api.responseCodes['4xx']}</p>\n                  <p className=\"text-xs text-gray-500\">4xx</p>\n                </div>\n                <div className=\"text-center\">\n                  <p className=\"text-lg font-semibold text-red-600\">{currentMetrics.api.responseCodes['5xx']}</p>\n                  <p className=\"text-xs text-gray-500\">5xx</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Alerts */}\n      <div className=\"bg-white rounded-lg shadow\">\n        <div className=\"px-6 py-4 border-b border-gray-200\">\n          <h3 className=\"text-lg font-semibold text-gray-900\">Active Alerts</h3>\n        </div>\n        <div className=\"p-6\">\n          {alerts.length === 0 ? (\n            <div className=\"text-center py-8\">\n              <svg className=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n              </svg>\n              <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No Active Alerts</h3>\n              <p className=\"mt-1 text-sm text-gray-500\">All systems are running normally.</p>\n            </div>\n          ) : (\n            <div className=\"space-y-4\">\n              {alerts.map((alert) => (\n                <div\n                  key={alert._id}\n                  className={`border rounded-lg p-4 ${getSeverityColor(alert.severity)}`}\n                >\n                  <div className=\"flex items-start justify-between\">\n                    <div className=\"flex-1\">\n                      <div className=\"flex items-center space-x-2\">\n                        <h4 className=\"text-sm font-medium\">{alert.title}</h4>\n                        <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getSeverityColor(alert.severity)}`}>\n                          {alert.severity}\n                        </span>\n                      </div>\n                      <p className=\"text-sm mt-1\">{alert.description}</p>\n                      <p className=\"text-xs mt-2\">\n                        Metric: {alert.metric} | Current: {alert.currentValue} | Threshold: {alert.threshold}\n                      </p>\n                      <p className=\"text-xs text-gray-500 mt-1\">\n                        {new Date(alert.createdAt).toLocaleString()}\n                      </p>\n                    </div>\n                    <div className=\"flex space-x-2\">\n                      {alert.status === 'active' && (\n                        <>\n                          <button\n                            onClick={() => handleAcknowledgeAlert(alert._id)}\n                            className=\"px-3 py-1 text-xs bg-blue-600 text-white rounded hover:bg-blue-700\"\n                          >\n                            Acknowledge\n                          </button>\n                          <button\n                            onClick={() => handleResolveAlert(alert._id)}\n                            className=\"px-3 py-1 text-xs bg-green-600 text-white rounded hover:bg-green-700\"\n                          >\n                            Resolve\n                          </button>\n                        </>\n                      )}\n                      {alert.status === 'acknowledged' && (\n                        <button\n                          onClick={() => handleResolveAlert(alert._id)}\n                          className=\"px-3 py-1 text-xs bg-green-600 text-white rounded hover:bg-green-700\"\n                        >\n                          Resolve\n                        </button>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n} "],"names":["PerformanceDashboard","param","seconds","organizationId","dashboard","setDashboard","useState","loading","setLoading","error","setError","selectedAlert","setSelectedAlert","timeRange","setTimeRange","autoRefresh","setAutoRefresh","useEffect","fetchPerformanceData","interval","setInterval","clearInterval","response","api","get","params","data","err","message","handleAcknowledgeAlert","alertId","put","concat","console","handleResolveAlert","getHealthColor","health","getSeverityColor","severity","formatBytes","bytes","i","Math","floor","log","parseFloat","pow","toFixed","sizes","formatPercentage","value","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","div","className","jsxs","svg","viewBox","fill","path","fillRule","d","clipRule","h3","p","currentMetrics","summary","alerts","h2","label","select","onChange","e","target","option","input","type","id","checked","htmlFor","stroke","strokeLinecap","strokeLinejoin","strokeWidth","overallHealth","systemHealth","applicationHealth","databaseHealth","apiHealth","span","system","cpu","usage","style","width","load","cores","memory","used","total","disk","application","responseTime","average","p95","throughput","requestsPerSecond","successRate","uptime","minutes","activeConnections","heapUsed","heapTotal","database","connections","active","max","queries","averageTime","slow","performance","cacheHitRatio","indexHitRatio","requests","rate","toLocaleString","latency","responseCodes","length","map","alert","h4","title","description","metric","currentValue","threshold","Date","createdAt","status","Fragment","button","onClick","_id"],"sourceRoot":""}