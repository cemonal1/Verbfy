"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[3822],{13822:function(e,t,n){n.d(t,{t:function(){return s}});var r=n(67294),o=n(17734),a=n(36197),c=n(5704);let i=(0,n(97679).hu)("VerbfyTalk"),s=()=>{let{user:e}=(0,a.aC)(),t=c.tokenStorage.getToken(),[n,s]=(0,r.useState)(!1),[l,u]=(0,r.useState)(null),[d,f]=(0,r.useState)([]),[m,g]=(0,r.useState)([]),[p,v]=(0,r.useState)(!1),[w,h]=(0,r.useState)(null),[k,b]=(0,r.useState)(!1),[C]=(0,r.useState)(!1),[T,R]=(0,r.useState)(null),[y,S]=(0,r.useState)({}),E=(0,r.useRef)(null),_=(0,r.useRef)(null),I=(0,r.useRef)(new Map),O=(0,r.useRef)({}),N=(0,r.useMemo)(()=>({iceServers:[{urls:"stun:stun.l.google.com:19302"},{urls:"stun:stun1.l.google.com:19302"}]}),[]),j=(0,r.useCallback)(async e=>{try{var t;let n=new RTCPeerConnection(N);I.current.set(e,n),O.current[e]=n,_.current&&_.current.getTracks().forEach(e=>{n.addTrack(e,_.current)}),n.onicecandidate=t=>{var n;t.candidate&&(null===(n=E.current)||void 0===n?void 0:n.connected)&&E.current.emit("webrtc:ice-candidate",{to:e,candidate:t.candidate})},n.ontrack=t=>{i.info("Remote audio stream received",{participantId:e});let[n]=t.streams;S(t=>({...t,[e]:n}))};let r=await n.createOffer();await n.setLocalDescription(r),(null===(t=E.current)||void 0===t?void 0:t.connected)&&E.current.emit("webrtc:offer",{to:e,offer:r})}catch(e){i.error("Failed to create peer connection:",e)}},[N]),A=(0,r.useCallback)(async e=>j(e),[j]),D=(0,r.useCallback)(async(e,t)=>{try{var n;let r=new RTCPeerConnection(N);I.current.set(e,r),O.current[e]=r,_.current&&_.current.getTracks().forEach(e=>{r.addTrack(e,_.current)}),r.onicecandidate=t=>{var n;t.candidate&&(null===(n=E.current)||void 0===n?void 0:n.connected)&&E.current.emit("webrtc:ice-candidate",{to:e,candidate:t.candidate})},r.ontrack=t=>{i.info("Remote audio stream received",{participantId:e});let[n]=t.streams;S(t=>({...t,[e]:n}))},await r.setRemoteDescription(t);let o=await r.createAnswer();await r.setLocalDescription(o),(null===(n=E.current)||void 0===n?void 0:n.connected)&&E.current.emit("webrtc:answer",{to:e,answer:o})}catch(e){i.error("Failed to handle offer:",e)}},[N]),P=(0,r.useCallback)(async(e,t)=>{try{let n=I.current.get(e);n&&await n.setRemoteDescription(t)}catch(e){i.error("Failed to handle answer:",e)}},[]),L=(0,r.useCallback)(async(e,t)=>{try{let n=I.current.get(e);n&&n.remoteDescription&&await n.addIceCandidate(t)}catch(e){i.error("Failed to handle ICE candidate:",e)}},[]);(0,r.useEffect)(()=>{if(!e||!t){i.warn("No user or token available");return}let n="http://localhost:5000";i.info("Attempting to connect",{backendUrl:n}),i.debug("User info",{name:null==e?void 0:e.name,hasToken:!!t});let r=(0,o.io)(n,{auth:{token:t},transports:["polling"],upgrade:!0,rememberUpgrade:!0,timeout:2e4,forceNew:!0,reconnection:!0,reconnectionAttempts:5,reconnectionDelay:1e3,reconnectionDelayMax:5e3,autoConnect:!0,withCredentials:!0});return E.current=r,r.on("connect",()=>{i.info("Connected to server successfully"),i.debug("Socket ID",{socketId:r.id}),s(!0),R(null)}),r.on("disconnect",e=>{i.warn("Disconnected from server",{reason:e}),s(!1),u(null),f([]),S({}),Object.values(O.current).forEach(e=>e.close()),O.current={},I.current.clear()}),r.on("reconnect",e=>{i.info("Reconnected after attempts",{attemptNumber:e}),s(!0),R(null)}),r.on("reconnect_attempt",e=>{i.debug("Reconnection attempt",{attemptNumber:e})}),r.on("reconnect_error",e=>{i.error("Reconnection error:",e)}),r.on("reconnect_failed",()=>{i.error("Reconnection failed after all attempts")}),r.on("room:joined",t=>{i.info("Joined room",{roomName:t.name}),u(t),f(t.participants.map(e=>({id:e.userId._id,name:e.userId.name,isSpeaking:!1,isMuted:!1,isSpeaker:!1}))),g([]),t.participants&&t.participants.length>0&&(i.info("Initializing WebRTC connections",{participantCount:t.participants.length}),t.participants.forEach(t=>{t.userId._id!==(null==e?void 0:e.id)&&j(t.userId._id)}))}),r.on("participant:joined",t=>{i.info("Participant joined",{name:t.name});let n={id:t.id,name:t.name,isSpeaking:!1,isMuted:!1,isSpeaker:!1};f(e=>[...e,n]),t.id!==(null==e?void 0:e.id)&&j(t.id)}),r.on("participant:left",e=>{if(i.info("Participant left",{participantId:e}),f(t=>t.filter(t=>t.id!==e)),O.current[e]&&(i.debug("Closing peer connection",{participantId:e}),O.current[e].close(),delete O.current[e]),I.current.has(e)){var t;null===(t=I.current.get(e))||void 0===t||t.close(),I.current.delete(e)}}),r.on("message:received",e=>{i.debug("Message received",{message:e.message}),g(t=>[...t,e])}),r.on("webrtc:offer",async e=>{await D(e.from,e.offer)}),r.on("webrtc:answer",async e=>{await P(e.from,e.answer)}),r.on("webrtc:ice-candidate",async e=>{await L(e.from,e.candidate)}),()=>{r.disconnect(),E.current=null}},[e,t,j,D,P,L]);let M=(0,r.useCallback)(async(e,n)=>{var r;if(!(null===(r=E.current)||void 0===r?void 0:r.connected))return h("Not connected to server"),!1;try{v(!0),h(null);let r=await fetch("/api/verbfy-talk/".concat(e,"/join"),{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer ".concat(t)},credentials:"include",body:JSON.stringify({password:n})});if(!r.ok){let e=await r.json();throw Error(e.message||"Failed to join room")}let o=await r.json();return i.info("HTTP API join successful",{roomName:o.data.name}),o.data}catch(e){throw i.error("Failed to join room via HTTP API",{error:e instanceof Error?e.message:"Unknown error"}),e}finally{v(!1)}},[t]),F=(0,r.useCallback)(e=>{_.current=e,i.info("Microphone stream set in useVerbfyTalk"),Object.values(O.current).forEach(t=>{let n=t.getSenders().find(e=>{var t;return(null===(t=e.track)||void 0===t?void 0:t.kind)==="audio"});n&&e.getAudioTracks()[0]?n.replaceTrack(e.getAudioTracks()[0]):e.getAudioTracks()[0]&&t.addTrack(e.getAudioTracks()[0],e)})},[]),U=(0,r.useCallback)(()=>{var e;(null===(e=E.current)||void 0===e?void 0:e.connected)&&l&&E.current.emit("room:leave",{roomId:l._id}),u(null),f([]),g([]),_.current&&(_.current.getTracks().forEach(e=>e.stop()),_.current=null),I.current.forEach(e=>e.close()),I.current.clear(),Object.values(O.current).forEach(e=>e.close()),O.current={}},[l]),B=(0,r.useCallback)(e=>{var t;(null===(t=E.current)||void 0===t?void 0:t.connected)&&l&&(i.debug("Sending message",{roomId:l._id,message:e.trim()}),E.current.emit("message:send",{roomId:l._id,message:e.trim()}))},[l]);return{isConnected:n,isLoading:p,error:w,connectionError:T,currentRoom:l,participants:d,messages:m,isMuted:k,isSpeaking:C,remoteStreams:y,joinRoom:M,leaveRoom:U,sendMessage:B,toggleMute:(0,r.useCallback)(()=>{if(_.current){let e=_.current.getAudioTracks()[0];e&&(e.enabled=!e.enabled,b(!e.enabled))}},[]),createPeerConnection:A,setMicrophoneStream:F,setError:h}}},97679:function(e,t,n){n.d(t,{hu:function(){return i}});var r=n(83454);let o={ERROR:"error",WARN:"warn",INFO:"info",DEBUG:"debug"};class a{shouldLog(e){let t=["error","warn","info","debug"],n=t.indexOf(this.logLevel);return t.indexOf(e)<=n}formatMessage(e,t,n,r){let o=new Date().toISOString(),a="[".concat(o,"] [").concat(e.toUpperCase(),"] [").concat(t,"] ").concat(n);return r&&"object"==typeof r?"".concat(a," ").concat(JSON.stringify(r)):a}logToConsole(e,t,n,r){this.shouldLog(e)&&((this.formatMessage(e,t,n,r),this.isProduction)?(new Date().toISOString(),window.gtag&&window.gtag("event","log",{custom_parameter_level:e,custom_parameter_context:t,custom_parameter_message:n})):(o.ERROR,o.WARN,o.INFO,o.DEBUG))}error(e,t,n){this.logToConsole(o.ERROR,e,t,n)}warn(e,t,n){this.logToConsole(o.WARN,e,t,n)}info(e,t,n){this.logToConsole(o.INFO,e,t,n)}debug(e,t,n){this.logToConsole(o.DEBUG,e,t,n)}constructor(){this.isProduction=!0,this.logLevel=r.env.NEXT_PUBLIC_LOG_LEVEL||(this.isProduction?"info":"debug")}}let c=new a,i=e=>({error:(t,n)=>c.error(e,t,n),warn:(t,n)=>c.warn(e,t,n),info:(t,n)=>c.info(e,t,n),debug:(t,n)=>c.debug(e,t,n)})}}]);