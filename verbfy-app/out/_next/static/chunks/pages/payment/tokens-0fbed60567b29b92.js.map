{"version":3,"file":"static/chunks/pages/payment/tokens-0fbed60567b29b92.js","mappings":"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","sources":["webpack://_N_E/?e7d6","webpack://_N_E/./pages/payment/tokens.tsx","webpack://_N_E/./src/types/payment.ts","webpack://_N_E/./src/components/payment/ProductCard.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/payment/tokens\",\n      function () {\n        return require(\"private-next-pages/payment/tokens.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/payment/tokens\"])\n      });\n    }\n  ","import React, { useState, useEffect } from 'react';\nimport { useAuth } from '@/context/AuthContext';\nimport DashboardLayout from '@/components/layout/DashboardLayout';\nimport ProductCard from '@/components/payment/ProductCard';\nimport { Product, PRODUCTS } from '@/types/payment';\nimport { paymentAPI } from '@/lib/api';\nimport { toast } from 'react-hot-toast';\nimport { \n  CreditCardIcon,\n  ClockIcon,\n  AcademicCapIcon,\n  CheckCircleIcon\n} from '@heroicons/react/24/outline';\n\nexport default function TokensPage() {\n  const { user } = useAuth();\n  const [products, setProducts] = useState<Product[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [userTokens, setUserTokens] = useState(0);\n\n  useEffect(() => {\n    loadProducts();\n    checkUserTokens();\n  }, []);\n\n  const loadProducts = async () => {\n    // Payments disabled: hide products\n    setProducts([]);\n    setLoading(false);\n  };\n\n  const checkUserTokens = () => {\n    if (user) {\n      setUserTokens(user.lessonTokens || 0);\n    }\n  };\n\n  const handlePurchase = () => {};\n\n  if (loading) {\n    return (\n      <DashboardLayout>\n        <div className=\"animate-pulse\">\n          <div className=\"h-8 bg-gray-200 rounded w-1/4 mb-8\"></div>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n            {[...Array(3)].map((_, i) => (\n              <div key={i} className=\"bg-white p-6 rounded-lg shadow\">\n                <div className=\"h-4 bg-gray-200 rounded w-1/2 mb-4\"></div>\n                <div className=\"h-8 bg-gray-200 rounded w-1/3\"></div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </DashboardLayout>\n    );\n  }\n\n  return (\n    <DashboardLayout>\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Header */}\n        <div className=\"text-center mb-12\">\n          <div className=\"flex justify-center mb-4\">\n            <CreditCardIcon className=\"h-12 w-12 text-blue-600\" />\n          </div>\n          <h1 className=\"text-4xl font-bold text-gray-900 mb-4\">Payments Unavailable</h1>\n          <p className=\"text-xl text-gray-600 max-w-2xl mx-auto\">Payments are currently unavailable in your region.</p>\n        </div>\n\n        {/* Current token balance */}\n        <div className=\"mb-8\">\n          <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-6\">\n            <div className=\"flex items-center justify-center\">\n              <div className=\"text-center\">\n                <div className=\"flex items-center justify-center mb-2\">\n                  <ClockIcon className=\"h-6 w-6 text-blue-600 mr-2\" />\n                  <span className=\"text-lg font-semibold text-blue-900\">\n                    Current Balance\n                  </span>\n                </div>\n                <div className=\"text-3xl font-bold text-blue-600 mb-2\">\n                  {userTokens} Tokens\n                </div>\n                <p className=\"text-sm text-blue-700\">\n                  {userTokens === 0 \n                    ? 'You have no lesson tokens. Purchase a package to get started!'\n                    : `You can book ${userTokens} lesson${userTokens !== 1 ? 's' : ''} with this balance.`\n                  }\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Token packages hidden while disabled */}\n        {products.length > 0 && (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-12\">\n            {products.map((product) => (\n              <ProductCard\n                key={product.id}\n                product={product}\n                onPurchase={handlePurchase}\n                className=\"h-full\"\n              />\n            ))}\n          </div>\n        )}\n\n        {/* How it works */}\n        <div className=\"bg-white rounded-lg shadow-lg p-8 mb-8\">\n          <h2 className=\"text-2xl font-bold text-gray-900 mb-6 text-center\">\n            How Lesson Tokens Work\n          </h2>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8\">\n            <div className=\"text-center\">\n              <div className=\"bg-blue-100 rounded-full p-4 w-16 h-16 mx-auto mb-4 flex items-center justify-center\">\n                <span className=\"text-2xl font-bold text-blue-600\">1</span>\n              </div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n                Purchase Tokens\n              </h3>\n              <p className=\"text-gray-600\">\n                Choose a token package that fits your learning needs and budget\n              </p>\n            </div>\n            \n            <div className=\"text-center\">\n              <div className=\"bg-green-100 rounded-full p-4 w-16 h-16 mx-auto mb-4 flex items-center justify-center\">\n                <span className=\"text-2xl font-bold text-green-600\">2</span>\n              </div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n                Book Lessons\n              </h3>\n              <p className=\"text-gray-600\">\n                Use your tokens to book individual lessons with any available teacher\n              </p>\n            </div>\n            \n            <div className=\"text-center\">\n              <div className=\"bg-purple-100 rounded-full p-4 w-16 h-16 mx-auto mb-4 flex items-center justify-center\">\n                <span className=\"text-2xl font-bold text-purple-600\">3</span>\n              </div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n                Learn & Improve\n              </h3>\n              <p className=\"text-gray-600\">\n                Attend your lessons and track your progress with detailed feedback\n              </p>\n            </div>\n          </div>\n        </div>\n\n        {/* Benefits */}\n        <div className=\"bg-gray-50 rounded-lg p-8 mb-8\">\n          <h2 className=\"text-2xl font-bold text-gray-900 mb-6 text-center\">\n            Benefits of Lesson Tokens\n          </h2>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n            <div className=\"flex items-start\">\n              <CheckCircleIcon className=\"h-6 w-6 text-green-600 mr-3 mt-1 flex-shrink-0\" />\n              <div>\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n                  Flexibility\n                </h3>\n                <p className=\"text-gray-600\">\n                  Book lessons whenever you want, with any available teacher, without committing to a subscription.\n                </p>\n              </div>\n            </div>\n            \n            <div className=\"flex items-start\">\n              <CheckCircleIcon className=\"h-6 w-6 text-green-600 mr-3 mt-1 flex-shrink-0\" />\n              <div>\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n                  Cost Effective\n                </h3>\n                <p className=\"text-gray-600\">\n                  Save money with bulk token packages. The more tokens you buy, the better the value.\n                </p>\n              </div>\n            </div>\n            \n            <div className=\"flex items-start\">\n              <CheckCircleIcon className=\"h-6 w-6 text-green-600 mr-3 mt-1 flex-shrink-0\" />\n              <div>\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n                  No Expiration\n                </h3>\n                <p className=\"text-gray-600\">\n                  Tokens are valid for 6 months, giving you plenty of time to use them at your own pace.\n                </p>\n              </div>\n            </div>\n            \n            <div className=\"flex items-start\">\n              <CheckCircleIcon className=\"h-6 w-6 text-green-600 mr-3 mt-1 flex-shrink-0\" />\n              <div>\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n                  All Lesson Types\n                </h3>\n                <p className=\"text-gray-600\">\n                  Use tokens for any type of lesson: speaking, listening, reading, writing, grammar, or exam prep.\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* FAQ */}\n        <div className=\"bg-white rounded-lg shadow-lg p-8\">\n          <h2 className=\"text-2xl font-bold text-gray-900 mb-6 text-center\">\n            Frequently Asked Questions\n          </h2>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n            <div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n                How long are tokens valid?\n              </h3>\n              <p className=\"text-gray-600\">\n                Lesson tokens are valid for 6 months from the date of purchase. You'll receive a reminder when they're about to expire.\n              </p>\n            </div>\n            \n            <div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n                Can I use tokens for any lesson type?\n              </h3>\n              <p className=\"text-gray-600\">\n                Yes! Tokens can be used for any lesson type: speaking, listening, reading, writing, grammar, or exam preparation.\n              </p>\n            </div>\n            \n            <div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n                What if I don't use all my tokens?\n              </h3>\n              <p className=\"text-gray-600\">\n                Unused tokens expire after 6 months. We recommend using them regularly to maximize your learning progress.\n              </p>\n            </div>\n            \n            <div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n                Can I gift tokens to someone else?\n              </h3>\n              <p className=\"text-gray-600\">\n                Currently, tokens are tied to your account. We're working on a gifting feature for future releases.\n              </p>\n            </div>\n          </div>\n        </div>\n\n        {/* Payments disabled notice */}\n        <div className=\"text-center mt-8 text-sm text-gray-500\">Payments are disabled.</div>\n      </div>\n    </DashboardLayout>\n  );\n} ","// Payment types\nexport type PaymentType = 'subscription' | 'lesson_tokens' | 'one_time';\nexport type PaymentStatus = 'pending' | 'completed' | 'failed' | 'cancelled' | 'refunded';\n\n// Product interface\nexport interface Product {\n  id: string;\n  name: string;\n  description: string;\n  price: number; // in cents\n  currency: string;\n  type: PaymentType;\n  quantity?: number; // For lesson tokens\n  duration?: number; // For subscriptions (in days)\n  features: string[];\n}\n\n// Payment interface\nexport interface Payment {\n  _id: string;\n  user: string;\n  type: PaymentType;\n  amount: number;\n  currency: string;\n  status: PaymentStatus;\n  stripeSessionId: string;\n  stripePaymentIntentId?: string;\n  product: {\n    id: string;\n    name: string;\n    description?: string;\n    quantity?: number;\n    duration?: number;\n  };\n  metadata?: {\n    lessonTokens?: number;\n    subscriptionExpiry?: string;\n    couponCode?: string;\n    discountAmount?: number;\n  };\n  refundedAt?: string;\n  refundedBy?: string;\n  refundReason?: string;\n  createdAt: string;\n  updatedAt: string;\n  formattedAmount?: string;\n  age?: string;\n}\n\n// Payment statistics\nexport interface PaymentStats {\n  totalPayments: number;\n  totalAmount: number;\n  completedPayments: number;\n  completedAmount: number;\n  failedPayments: number;\n  refundedPayments: number;\n}\n\n// API Response types\nexport interface ProductsResponse {\n  success: boolean;\n  data: Product[];\n  message: string;\n}\n\nexport interface PaymentHistoryResponse {\n  success: boolean;\n  data: {\n    payments: Payment[];\n    pagination: {\n      page: number;\n      limit: number;\n      total: number;\n      pages: number;\n    };\n  };\n  message: string;\n}\n\nexport interface PaymentStatsResponse {\n  success: boolean;\n  data: PaymentStats;\n  message: string;\n}\n\nexport interface CheckoutSessionResponse {\n  success: boolean;\n  data: {\n    sessionId: string;\n    url: string;\n  };\n  message: string;\n}\n\n// Request types\nexport interface CreateCheckoutSessionRequest {\n  productId: string;\n  couponCode?: string;\n}\n\nexport interface RefundPaymentRequest {\n  reason?: string;\n}\n\n// Utility functions\nexport const formatCurrency = (amount: number, currency: string = 'usd'): string => {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: currency.toUpperCase()\n  }).format(amount / 100); // Stripe amounts are in cents\n};\n\nexport const formatDate = (date: string): string => {\n  return new Date(date).toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n};\n\nexport const getStatusColor = (status: PaymentStatus): string => {\n  switch (status) {\n    case 'completed':\n      return 'text-green-600 bg-green-100';\n    case 'pending':\n      return 'text-yellow-600 bg-yellow-100';\n    case 'failed':\n    case 'cancelled':\n      return 'text-red-600 bg-red-100';\n    case 'refunded':\n      return 'text-gray-600 bg-gray-100';\n    default:\n      return 'text-gray-600 bg-gray-100';\n  }\n};\n\nexport const getStatusIcon = (status: PaymentStatus): string => {\n  switch (status) {\n    case 'completed':\n      return '✅';\n    case 'pending':\n      return '⏳';\n    case 'failed':\n      return '❌';\n    case 'cancelled':\n      return '🚫';\n    case 'refunded':\n      return '↩️';\n    default:\n      return '❓';\n  }\n};\n\n// Product configurations (matching backend)\nexport const PRODUCTS: Record<string, Product> = {\n  SUBSCRIPTION_MONTHLY: {\n    id: 'sub_monthly',\n    name: 'Monthly Subscription',\n    description: 'Access to all premium features for 1 month',\n    price: 2999, // $29.99 in cents\n    currency: 'usd',\n    type: 'subscription',\n    duration: 30, // days\n    features: [\n      'Unlimited lesson materials',\n      'Priority booking',\n      'Advanced analytics',\n      'Premium support'\n    ]\n  },\n  SUBSCRIPTION_QUARTERLY: {\n    id: 'sub_quarterly',\n    name: 'Quarterly Subscription',\n    description: 'Access to all premium features for 3 months',\n    price: 7999, // $79.99 in cents\n    currency: 'usd',\n    type: 'subscription',\n    duration: 90, // days\n    features: [\n      'Unlimited lesson materials',\n      'Priority booking',\n      'Advanced analytics',\n      'Premium support',\n      'Save 20% compared to monthly'\n    ]\n  },\n  TOKENS_5: {\n    id: 'tokens_5',\n    name: '5 Lesson Tokens',\n    description: '5 individual lesson credits',\n    price: 4999, // $49.99 in cents\n    currency: 'usd',\n    type: 'lesson_tokens',\n    quantity: 5,\n    features: [\n      '5 individual lessons',\n      'Valid for 6 months',\n      'Any lesson type'\n    ]\n  },\n  TOKENS_10: {\n    id: 'tokens_10',\n    name: '10 Lesson Tokens',\n    description: '10 individual lesson credits',\n    price: 8999, // $89.99 in cents\n    currency: 'usd',\n    type: 'lesson_tokens',\n    quantity: 10,\n    features: [\n      '10 individual lessons',\n      'Valid for 6 months',\n      'Any lesson type',\n      'Save 10% compared to 5-pack'\n    ]\n  },\n  TOKENS_25: {\n    id: 'tokens_25',\n    name: '25 Lesson Tokens',\n    description: '25 individual lesson credits',\n    price: 19999, // $199.99 in cents\n    currency: 'usd',\n    type: 'lesson_tokens',\n    quantity: 25,\n    features: [\n      '25 individual lessons',\n      'Valid for 6 months',\n      'Any lesson type',\n      'Save 20% compared to 5-pack'\n    ]\n  }\n}; ","import React, { useState } from 'react';\nimport { Product, formatCurrency } from '../../types/payment';\nimport { paymentAPI } from '../../lib/api';\nimport { toast } from 'react-hot-toast';\nimport { \n  CheckIcon, \n  StarIcon,\n  CreditCardIcon,\n  SparklesIcon\n} from '@heroicons/react/24/outline';\n\ninterface ProductCardProps {\n  product: Product;\n  onPurchase?: () => void;\n  className?: string;\n}\n\nconst ProductCard: React.FC<ProductCardProps> = ({ \n  product, \n  onPurchase, \n  className = '' \n}) => {\n  const [isLoading] = useState(false);\n\n  const handlePurchase = async () => {\n    toast.error('Payments are currently unavailable in your region.');\n  };\n\n  const isSubscription = product.type === 'subscription';\n  const isPopular = product.id === 'sub_quarterly' || product.id === 'tokens_10';\n\n  return (\n    <div className={`relative bg-white rounded-xl shadow-lg border-2 transition-all duration-200 hover:shadow-xl ${\n      isPopular ? 'border-blue-500' : 'border-gray-200'\n    } ${className}`}>\n      {/* Popular badge */}\n      {isPopular && (\n        <div className=\"absolute -top-3 left-1/2 transform -translate-x-1/2\">\n          <div className=\"bg-blue-500 text-white px-4 py-1 rounded-full text-sm font-semibold flex items-center\">\n            <StarIcon className=\"h-4 w-4 mr-1\" />\n            Most Popular\n          </div>\n        </div>\n      )}\n\n      <div className=\"p-6\">\n        {/* Header */}\n        <div className=\"text-center mb-6\">\n          <div className=\"flex justify-center mb-2\">\n            {isSubscription ? (\n              <SparklesIcon className=\"h-8 w-8 text-purple-600\" />\n            ) : (\n              <CreditCardIcon className=\"h-8 w-8 text-blue-600\" />\n            )}\n          </div>\n          <h3 className=\"text-xl font-bold text-gray-900 mb-2\">{product.name}</h3>\n          <p className=\"text-gray-600 text-sm\">{product.description}</p>\n        </div>\n\n        {/* Price */}\n        <div className=\"text-center mb-6\">\n          <div className=\"text-3xl font-bold text-gray-900\">\n            {formatCurrency(product.price, product.currency)}\n          </div>\n          {product.type === 'subscription' && (\n            <div className=\"text-sm text-gray-500 mt-1\">\n              per {product.duration === 30 ? 'month' : 'quarter'}\n            </div>\n          )}\n          {product.type === 'lesson_tokens' && (\n            <div className=\"text-sm text-gray-500 mt-1\">\n              {product.quantity} lessons\n            </div>\n          )}\n        </div>\n\n        {/* Features */}\n        <div className=\"mb-6\">\n          <ul className=\"space-y-3\">\n            {product.features.map((feature, index) => (\n              <li key={index} className=\"flex items-start\">\n                <CheckIcon className=\"h-5 w-5 text-green-500 mr-3 mt-0.5 flex-shrink-0\" />\n                <span className=\"text-gray-700 text-sm\">{feature}</span>\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        {/* Payments disabled notice */}\n        <div className=\"mb-6\">\n          <div className=\"text-sm text-amber-700 bg-amber-50 border border-amber-200 rounded-md p-3\">\n            Payments are currently unavailable in your region.\n          </div>\n        </div>\n\n        {/* Purchase button */}\n        <button\n          onClick={handlePurchase}\n          disabled={isLoading}\n          className={`w-full py-3 px-4 rounded-lg font-semibold text-white transition-colors duration-200 ${\n            isLoading\n              ? 'bg-gray-400 cursor-not-allowed'\n              : isSubscription\n              ? 'bg-purple-600 hover:bg-purple-700'\n              : 'bg-blue-600 hover:bg-blue-700'\n          }`}\n        >\n          {isLoading ? (\n            <div className=\"flex items-center justify-center\">\n              <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-white mr-2\"></div>\n              Processing...\n            </div>\n          ) : (\n            `Buy ${product.name}`\n          )}\n        </button>\n\n        {/* Security notice */}\n        <div className=\"mt-4 text-center\">\n          <p className=\"text-xs text-gray-500\">Payments are disabled.</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductCard; "],"names":["window","__NEXT_P","push","__webpack_require__","TokensPage","user","useAuth","products","setProducts","useState","loading","setLoading","userTokens","setUserTokens","useEffect","loadProducts","checkUserTokens","lessonTokens","handlePurchase","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","DashboardLayout","jsxs","div","className","map","_","i","CreditCardIcon","h1","p","ClockIcon","span","concat","length","ProductCard","product","onPurchase","id","h2","h3","CheckCircleIcon","formatCurrency","amount","currency","Intl","NumberFormat","style","toUpperCase","format","payment_ProductCard","param","isLoading","toast","error","isSubscription","type","isPopular","jsx_runtime","StarIcon","SparklesIcon","name","description","price","duration","quantity","ul","features","feature","index","li","CheckIcon","button","onClick","disabled"],"sourceRoot":""}