{"version":3,"file":"static/chunks/pages/payment/subscribe-f595d3200df46808.js","mappings":"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","sources":["webpack://_N_E/?4391","webpack://_N_E/./pages/payment/subscribe.tsx","webpack://_N_E/./src/types/payment.ts","webpack://_N_E/./src/components/payment/ProductCard.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/payment/subscribe\",\n      function () {\n        return require(\"private-next-pages/payment/subscribe.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/payment/subscribe\"])\n      });\n    }\n  ","import React, { useState, useEffect } from 'react';\r\nimport { useAuth } from '@/context/AuthContext';\r\nimport DashboardLayout from '@/components/layout/DashboardLayout';\r\nimport ProductCard from '@/components/payment/ProductCard';\r\nimport { Product, PRODUCTS } from '@/types/payment';\r\nimport { \r\n  SparklesIcon,\r\n  CheckCircleIcon,\r\n  ExclamationTriangleIcon\r\n} from '@heroicons/react/24/outline';\r\n\r\nexport default function SubscribePage() {\r\n  const { user } = useAuth();\r\n  const [products, setProducts] = useState<Product[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [userSubscription, setUserSubscription] = useState<any>(null);\r\n\r\n  useEffect(() => {\r\n    loadProducts();\r\n    checkUserSubscription();\r\n  }, []);\r\n\r\n  const loadProducts = async () => {\r\n    // Payments disabled: show empty products state\r\n    setProducts([]);\r\n    setLoading(false);\r\n  };\r\n\r\n  const checkUserSubscription = () => {\r\n    if (user) {\r\n      setUserSubscription({\r\n        status: user.subscriptionStatus,\r\n        type: user.subscriptionType,\r\n        expiry: user.subscriptionExpiry\r\n      });\r\n    }\r\n  };\r\n\r\n  const handlePurchase = () => {};\r\n\r\n  if (loading) {\r\n    return (\r\n      <DashboardLayout>\r\n        <div className=\"animate-pulse\">\r\n          <div className=\"h-8 bg-gray-200 rounded w-1/4 mb-8\"></div>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n            {[...Array(3)].map((_, i) => (\r\n              <div key={i} className=\"bg-white p-6 rounded-lg shadow\">\r\n                <div className=\"h-4 bg-gray-200 rounded w-1/2 mb-4\"></div>\r\n                <div className=\"h-8 bg-gray-200 rounded w-1/3\"></div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </DashboardLayout>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <DashboardLayout>\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        {/* Header */}\r\n        <div className=\"text-center mb-12\">\r\n          <div className=\"flex justify-center mb-4\">\r\n            <SparklesIcon className=\"h-12 w-12 text-purple-600\" />\r\n          </div>\r\n          <h1 className=\"text-4xl font-bold text-gray-900 mb-4\">Subscriptions Unavailable</h1>\r\n          <p className=\"text-xl text-gray-600 max-w-2xl mx-auto\">\r\n            Payments are currently unavailable in your region.\r\n          </p>\r\n        </div>\r\n\r\n        {/* Current subscription status */}\r\n        {userSubscription && userSubscription.status === 'active' && (\r\n          <div className=\"mb-8\">\r\n            <div className=\"bg-green-50 border border-green-200 rounded-lg p-4\">\r\n              <div className=\"flex items-center\">\r\n                <CheckCircleIcon className=\"h-5 w-5 text-green-600 mr-2\" />\r\n                <div>\r\n                  <h3 className=\"text-sm font-medium text-green-800\">\r\n                    Active Subscription\r\n                  </h3>\r\n                  <p className=\"text-sm text-green-700\">\r\n                    You currently have an active {userSubscription.type} subscription\r\n                    {userSubscription.expiry && (\r\n                      <span> until {new Date(userSubscription.expiry).toLocaleDateString()}</span>\r\n                    )}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Subscription plans (hidden when payments disabled) */}\r\n        {products.length > 0 && (\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mb-12\">\r\n            {products.map((product) => (\r\n              <ProductCard\r\n                key={product.id}\r\n                product={product}\r\n                onPurchase={handlePurchase}\r\n                className=\"h-full\"\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        {/* Features comparison (optional) */}\r\n\r\n        {/* FAQ */}\r\n        <div className=\"bg-gray-50 rounded-lg p-8\">\r\n          <h2 className=\"text-2xl font-bold text-gray-900 mb-6 text-center\">\r\n            Frequently Asked Questions\r\n          </h2>\r\n          \r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\r\n            <div>\r\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\r\n                Can I cancel my subscription?\r\n              </h3>\r\n              <p className=\"text-gray-600\">\r\n                Yes, you can cancel your subscription at any time. You'll continue to have access until the end of your current billing period.\r\n              </p>\r\n            </div>\r\n            \r\n            <div>\r\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\r\n                Is there a free trial?\r\n              </h3>\r\n              <p className=\"text-gray-600\">\r\n                We offer a 7-day free trial for new subscribers. You can cancel anytime during the trial period.\r\n              </p>\r\n            </div>\r\n            \r\n            <div>\r\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\r\n                What payment methods do you accept?\r\n              </h3>\r\n              <p className=\"text-gray-600\">\r\n                We accept all major credit cards, debit cards, and digital wallets through our secure Stripe payment system.\r\n              </p>\r\n            </div>\r\n            \r\n            <div>\r\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\r\n                Can I upgrade or downgrade my plan?\r\n              </h3>\r\n              <p className=\"text-gray-600\">\r\n                Yes, you can change your subscription plan at any time. Changes will take effect at the start of your next billing cycle.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Security notice */}\r\n        <div className=\"text-center mt-8\">\r\n          <p className=\"text-sm text-gray-500\">\r\n            🔒 All payments are processed securely by Stripe. Your payment information is never stored on our servers.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </DashboardLayout>\r\n  );\r\n} ","// Payment types\r\nexport type PaymentType = 'subscription' | 'lesson_tokens' | 'one_time';\r\nexport type PaymentStatus = 'pending' | 'completed' | 'failed' | 'cancelled' | 'refunded';\r\n\r\n// Product interface\r\nexport interface Product {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  price: number; // in cents\r\n  currency: string;\r\n  type: PaymentType;\r\n  quantity?: number; // For lesson tokens\r\n  duration?: number; // For subscriptions (in days)\r\n  features: string[];\r\n}\r\n\r\n// Payment interface\r\nexport interface Payment {\r\n  _id: string;\r\n  user: string;\r\n  type: PaymentType;\r\n  amount: number;\r\n  currency: string;\r\n  status: PaymentStatus;\r\n  stripeSessionId: string;\r\n  stripePaymentIntentId?: string;\r\n  product: {\r\n    id: string;\r\n    name: string;\r\n    description?: string;\r\n    quantity?: number;\r\n    duration?: number;\r\n  };\r\n  metadata?: {\r\n    lessonTokens?: number;\r\n    subscriptionExpiry?: string;\r\n    couponCode?: string;\r\n    discountAmount?: number;\r\n  };\r\n  refundedAt?: string;\r\n  refundedBy?: string;\r\n  refundReason?: string;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n  formattedAmount?: string;\r\n  age?: string;\r\n}\r\n\r\n// Payment statistics\r\nexport interface PaymentStats {\r\n  totalPayments: number;\r\n  totalAmount: number;\r\n  completedPayments: number;\r\n  completedAmount: number;\r\n  failedPayments: number;\r\n  refundedPayments: number;\r\n}\r\n\r\n// API Response types\r\nexport interface ProductsResponse {\r\n  success: boolean;\r\n  data: Product[];\r\n  message: string;\r\n}\r\n\r\nexport interface PaymentHistoryResponse {\r\n  success: boolean;\r\n  data: {\r\n    payments: Payment[];\r\n    pagination: {\r\n      page: number;\r\n      limit: number;\r\n      total: number;\r\n      pages: number;\r\n    };\r\n  };\r\n  message: string;\r\n}\r\n\r\nexport interface PaymentStatsResponse {\r\n  success: boolean;\r\n  data: PaymentStats;\r\n  message: string;\r\n}\r\n\r\nexport interface CheckoutSessionResponse {\r\n  success: boolean;\r\n  data: {\r\n    sessionId: string;\r\n    url: string;\r\n  };\r\n  message: string;\r\n}\r\n\r\n// Request types\r\nexport interface CreateCheckoutSessionRequest {\r\n  productId: string;\r\n  couponCode?: string;\r\n}\r\n\r\nexport interface RefundPaymentRequest {\r\n  reason?: string;\r\n}\r\n\r\n// Utility functions\r\nexport const formatCurrency = (amount: number, currency: string = 'usd'): string => {\r\n  return new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: currency.toUpperCase()\r\n  }).format(amount / 100); // Stripe amounts are in cents\r\n};\r\n\r\nexport const formatDate = (date: string): string => {\r\n  return new Date(date).toLocaleDateString('en-US', {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    hour: '2-digit',\r\n    minute: '2-digit'\r\n  });\r\n};\r\n\r\nexport const getStatusColor = (status: PaymentStatus): string => {\r\n  switch (status) {\r\n    case 'completed':\r\n      return 'text-green-600 bg-green-100';\r\n    case 'pending':\r\n      return 'text-yellow-600 bg-yellow-100';\r\n    case 'failed':\r\n    case 'cancelled':\r\n      return 'text-red-600 bg-red-100';\r\n    case 'refunded':\r\n      return 'text-gray-600 bg-gray-100';\r\n    default:\r\n      return 'text-gray-600 bg-gray-100';\r\n  }\r\n};\r\n\r\nexport const getStatusIcon = (status: PaymentStatus): string => {\r\n  switch (status) {\r\n    case 'completed':\r\n      return '✅';\r\n    case 'pending':\r\n      return '⏳';\r\n    case 'failed':\r\n      return '❌';\r\n    case 'cancelled':\r\n      return '🚫';\r\n    case 'refunded':\r\n      return '↩️';\r\n    default:\r\n      return '❓';\r\n  }\r\n};\r\n\r\n// Product configurations (matching backend)\r\nexport const PRODUCTS: Record<string, Product> = {\r\n  SUBSCRIPTION_MONTHLY: {\r\n    id: 'sub_monthly',\r\n    name: 'Monthly Subscription',\r\n    description: 'Access to all premium features for 1 month',\r\n    price: 2999, // $29.99 in cents\r\n    currency: 'usd',\r\n    type: 'subscription',\r\n    duration: 30, // days\r\n    features: [\r\n      'Unlimited lesson materials',\r\n      'Priority booking',\r\n      'Advanced analytics',\r\n      'Premium support'\r\n    ]\r\n  },\r\n  SUBSCRIPTION_QUARTERLY: {\r\n    id: 'sub_quarterly',\r\n    name: 'Quarterly Subscription',\r\n    description: 'Access to all premium features for 3 months',\r\n    price: 7999, // $79.99 in cents\r\n    currency: 'usd',\r\n    type: 'subscription',\r\n    duration: 90, // days\r\n    features: [\r\n      'Unlimited lesson materials',\r\n      'Priority booking',\r\n      'Advanced analytics',\r\n      'Premium support',\r\n      'Save 20% compared to monthly'\r\n    ]\r\n  },\r\n  TOKENS_5: {\r\n    id: 'tokens_5',\r\n    name: '5 Lesson Tokens',\r\n    description: '5 individual lesson credits',\r\n    price: 4999, // $49.99 in cents\r\n    currency: 'usd',\r\n    type: 'lesson_tokens',\r\n    quantity: 5,\r\n    features: [\r\n      '5 individual lessons',\r\n      'Valid for 6 months',\r\n      'Any lesson type'\r\n    ]\r\n  },\r\n  TOKENS_10: {\r\n    id: 'tokens_10',\r\n    name: '10 Lesson Tokens',\r\n    description: '10 individual lesson credits',\r\n    price: 8999, // $89.99 in cents\r\n    currency: 'usd',\r\n    type: 'lesson_tokens',\r\n    quantity: 10,\r\n    features: [\r\n      '10 individual lessons',\r\n      'Valid for 6 months',\r\n      'Any lesson type',\r\n      'Save 10% compared to 5-pack'\r\n    ]\r\n  },\r\n  TOKENS_25: {\r\n    id: 'tokens_25',\r\n    name: '25 Lesson Tokens',\r\n    description: '25 individual lesson credits',\r\n    price: 19999, // $199.99 in cents\r\n    currency: 'usd',\r\n    type: 'lesson_tokens',\r\n    quantity: 25,\r\n    features: [\r\n      '25 individual lessons',\r\n      'Valid for 6 months',\r\n      'Any lesson type',\r\n      'Save 20% compared to 5-pack'\r\n    ]\r\n  }\r\n}; ","import React, { useState } from 'react';\r\nimport { Product, formatCurrency } from '../../types/payment';\r\nimport { paymentAPI } from '../../lib/api';\r\nimport { toast } from 'react-hot-toast';\r\nimport { \r\n  CheckIcon, \r\n  StarIcon,\r\n  CreditCardIcon,\r\n  SparklesIcon\r\n} from '@heroicons/react/24/outline';\r\n\r\ninterface ProductCardProps {\r\n  product: Product;\r\n  onPurchase?: () => void;\r\n  className?: string;\r\n}\r\n\r\nconst ProductCard: React.FC<ProductCardProps> = ({ \r\n  product, \r\n  onPurchase, \r\n  className = '' \r\n}) => {\r\n  const [isLoading] = useState(false);\r\n\r\n  const handlePurchase = async () => {\r\n    toast.error('Payments are currently unavailable in your region.');\r\n  };\r\n\r\n  const isSubscription = product.type === 'subscription';\r\n  const isPopular = product.id === 'sub_quarterly' || product.id === 'tokens_10';\r\n\r\n  return (\r\n    <div className={`relative bg-white rounded-xl shadow-lg border-2 transition-all duration-200 hover:shadow-xl ${\r\n      isPopular ? 'border-blue-500' : 'border-gray-200'\r\n    } ${className}`}>\r\n      {/* Popular badge */}\r\n      {isPopular && (\r\n        <div className=\"absolute -top-3 left-1/2 transform -translate-x-1/2\">\r\n          <div className=\"bg-blue-500 text-white px-4 py-1 rounded-full text-sm font-semibold flex items-center\">\r\n            <StarIcon className=\"h-4 w-4 mr-1\" />\r\n            Most Popular\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"p-6\">\r\n        {/* Header */}\r\n        <div className=\"text-center mb-6\">\r\n          <div className=\"flex justify-center mb-2\">\r\n            {isSubscription ? (\r\n              <SparklesIcon className=\"h-8 w-8 text-purple-600\" />\r\n            ) : (\r\n              <CreditCardIcon className=\"h-8 w-8 text-blue-600\" />\r\n            )}\r\n          </div>\r\n          <h3 className=\"text-xl font-bold text-gray-900 mb-2\">{product.name}</h3>\r\n          <p className=\"text-gray-600 text-sm\">{product.description}</p>\r\n        </div>\r\n\r\n        {/* Price */}\r\n        <div className=\"text-center mb-6\">\r\n          <div className=\"text-3xl font-bold text-gray-900\">\r\n            {formatCurrency(product.price, product.currency)}\r\n          </div>\r\n          {product.type === 'subscription' && (\r\n            <div className=\"text-sm text-gray-500 mt-1\">\r\n              per {product.duration === 30 ? 'month' : 'quarter'}\r\n            </div>\r\n          )}\r\n          {product.type === 'lesson_tokens' && (\r\n            <div className=\"text-sm text-gray-500 mt-1\">\r\n              {product.quantity} lessons\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Features */}\r\n        <div className=\"mb-6\">\r\n          <ul className=\"space-y-3\">\r\n            {product.features.map((feature, index) => (\r\n              <li key={index} className=\"flex items-start\">\r\n                <CheckIcon className=\"h-5 w-5 text-green-500 mr-3 mt-0.5 flex-shrink-0\" />\r\n                <span className=\"text-gray-700 text-sm\">{feature}</span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n\r\n        {/* Payments disabled notice */}\r\n        <div className=\"mb-6\">\r\n          <div className=\"text-sm text-amber-700 bg-amber-50 border border-amber-200 rounded-md p-3\">\r\n            Payments are currently unavailable in your region.\r\n          </div>\r\n        </div>\r\n\r\n        {/* Purchase button */}\r\n        <button\r\n          onClick={handlePurchase}\r\n          disabled={isLoading}\r\n          className={`w-full py-3 px-4 rounded-lg font-semibold text-white transition-colors duration-200 ${\r\n            isLoading\r\n              ? 'bg-gray-400 cursor-not-allowed'\r\n              : isSubscription\r\n              ? 'bg-purple-600 hover:bg-purple-700'\r\n              : 'bg-blue-600 hover:bg-blue-700'\r\n          }`}\r\n        >\r\n          {isLoading ? (\r\n            <div className=\"flex items-center justify-center\">\r\n              <div className=\"animate-spin rounded-full h-5 w-5 border-b-2 border-white mr-2\"></div>\r\n              Processing...\r\n            </div>\r\n          ) : (\r\n            `Buy ${product.name}`\r\n          )}\r\n        </button>\r\n\r\n        {/* Security notice */}\r\n        <div className=\"mt-4 text-center\">\r\n          <p className=\"text-xs text-gray-500\">Payments are disabled.</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductCard; "],"names":["window","__NEXT_P","push","__webpack_require__","SubscribePage","user","useAuth","products","setProducts","useState","loading","setLoading","userSubscription","setUserSubscription","useEffect","loadProducts","checkUserSubscription","status","subscriptionStatus","type","subscriptionType","expiry","subscriptionExpiry","handlePurchase","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","DashboardLayout","jsxs","div","className","map","_","i","SparklesIcon","h1","p","CheckCircleIcon","h3","span","Date","toLocaleDateString","length","ProductCard","product","onPurchase","id","h2","formatCurrency","amount","currency","Intl","NumberFormat","style","toUpperCase","format","payment_ProductCard","param","isLoading","toast","error","isSubscription","isPopular","jsx_runtime","concat","StarIcon","CreditCardIcon","name","description","price","duration","quantity","ul","features","feature","index","li","CheckIcon","button","onClick","disabled"],"sourceRoot":""}