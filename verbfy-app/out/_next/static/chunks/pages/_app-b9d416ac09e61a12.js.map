{"version":3,"file":"static/chunks/pages/_app-b9d416ac09e61a12.js","mappings":"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","sources":["webpack://_N_E/?adc8","webpack://_N_E/./sentry.client.config.ts","webpack://_N_E/./pages/_app.tsx","webpack://_N_E/./src/components/common/Toast.tsx","webpack://_N_E/./src/context/AdminContext.tsx","webpack://_N_E/./src/context/AuthContext.tsx","webpack://_N_E/./src/context/ChatContext.tsx","webpack://_N_E/./src/context/NotificationContext.tsx","webpack://_N_E/./src/lib/api.ts","webpack://_N_E/./src/lib/i18n.tsx","webpack://_N_E/./src/utils/secureStorage.ts","webpack://_N_E/./src/styles/globals.css"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/_app\",\n      function () {\n        return require(\"private-next-pages/_app.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/_app\"])\n      });\n    }\n  ","var _sentryCollisionFreeGlobalObject = typeof window != \"undefined\" ? window : typeof global != \"undefined\" ? global : typeof self != \"undefined\" ? self : {};\n_sentryCollisionFreeGlobalObject[\"__sentryRewritesTunnelPath__\"] = undefined;\n_sentryCollisionFreeGlobalObject[\"SENTRY_RELEASE\"] = {\"id\":\"5MrQFQEEQRnGoHYTDqF7R\"};\n_sentryCollisionFreeGlobalObject[\"__sentryBasePath\"] = undefined;\n_sentryCollisionFreeGlobalObject[\"__rewriteFramesAssetPrefixPath__\"] = \"\";\n\nimport * as Sentry from '@sentry/nextjs';\n\nSentry.init({\n  dsn: process.env.NEXT_PUBLIC_SENTRY_DSN || undefined,\n  tracesSampleRate: 0.0,\n  replaysOnErrorSampleRate: 0.0,\n  replaysSessionSampleRate: 0.0,\n});\n\n\n","import type { AppProps } from 'next/app';\nimport { AuthProvider } from '@/context/AuthContext';\nimport { ToastProvider, setToastContext } from '@/components/common/Toast';\nimport { ChatProvider } from '@/context/ChatContext';\nimport { NotificationProvider } from '@/context/NotificationContext';\nimport { AdminProvider } from '@/context/AdminContext';\nimport '@/styles/globals.css';\nimport { I18nProvider } from '@/lib/i18n';\n\nexport default function App({ Component, pageProps }: AppProps) {\n  return (\n    <I18nProvider>\n      <AuthProvider>\n        <ToastProvider>\n          <ChatProvider>\n            <NotificationProvider>\n              <AdminProvider>\n                <Component {...pageProps} />\n              </AdminProvider>\n            </NotificationProvider>\n          </ChatProvider>\n        </ToastProvider>\n      </AuthProvider>\n    </I18nProvider>\n  );\n} ","import React, { createContext, useContext, useState, ReactNode } from 'react';\n\n// Toast types\nexport type ToastType = 'success' | 'error' | 'warning' | 'info';\n\n// Toast interface\ninterface Toast {\n  id: string;\n  type: ToastType;\n  message: string;\n  duration?: number;\n}\n\n// Toast context interface\ninterface ToastContextType {\n  toasts: Toast[];\n  showToast: (type: ToastType, message: string, duration?: number) => void;\n  removeToast: (id: string) => void;\n  success: (message: string, duration?: number) => void;\n  error: (message: string, duration?: number) => void;\n  warning: (message: string, duration?: number) => void;\n  info: (message: string, duration?: number) => void;\n}\n\n// Create context\nconst ToastContext = createContext<ToastContextType | undefined>(undefined);\n\n// Provider component\ninterface ToastProviderProps {\n  children: ReactNode;\n}\n\nexport function ToastProvider({ children }: ToastProviderProps) {\n  const [toasts, setToasts] = useState<Toast[]>([]);\n\n  // Show toast\n  const showToast = (type: ToastType, message: string, duration = 5000) => {\n    const id = Math.random().toString(36).substring(2, 9);\n    const newToast: Toast = { id, type, message, duration };\n    \n    setToasts(prev => [...prev, newToast]);\n\n    // Auto remove after duration\n    if (duration > 0) {\n      setTimeout(() => {\n        removeToast(id);\n      }, duration);\n    }\n  };\n\n  // Remove toast\n  const removeToast = (id: string) => {\n    setToasts(prev => prev.filter(toast => toast.id !== id));\n  };\n\n  // Convenience methods\n  const success = (message: string, duration?: number) => showToast('success', message, duration);\n  const error = (message: string, duration?: number) => showToast('error', message, duration);\n  const warning = (message: string, duration?: number) => showToast('warning', message, duration);\n  const info = (message: string, duration?: number) => showToast('info', message, duration);\n\n  const value: ToastContextType = {\n    toasts,\n    showToast,\n    removeToast,\n    success,\n    error,\n    warning,\n    info,\n  };\n\n  return (\n    <ToastContext.Provider value={value}>\n      {children}\n      <ToastContainer />\n    </ToastContext.Provider>\n  );\n}\n\n// Custom hook to use toast context\nexport function useToast() {\n  const context = useContext(ToastContext);\n  \n  if (context === undefined) {\n    throw new Error('useToast must be used within a ToastProvider');\n  }\n  \n  return context;\n}\n\n// Toast container component\nfunction ToastContainer() {\n  const { toasts, removeToast } = useToast();\n\n  if (toasts.length === 0) return null;\n\n  return (\n    <div className=\"fixed top-4 right-4 z-50 space-y-2\">\n      {toasts.map((toast) => (\n        <ToastItem key={toast.id} toast={toast} onRemove={removeToast} />\n      ))}\n    </div>\n  );\n}\n\n// Individual toast item component\ninterface ToastItemProps {\n  toast: Toast;\n  onRemove: (id: string) => void;\n}\n\nfunction ToastItem({ toast, onRemove }: ToastItemProps) {\n  const { type, message, id } = toast;\n\n  // Get icon and colors based on type\n  const getToastStyles = (type: ToastType) => {\n    switch (type) {\n      case 'success':\n        return {\n          icon: '✅',\n          bgColor: 'bg-green-50 dark:bg-green-900/20',\n          borderColor: 'border-green-200 dark:border-green-800',\n          textColor: 'text-green-800 dark:text-green-200',\n          iconColor: 'text-green-400',\n        };\n      case 'error':\n        return {\n          icon: '❌',\n          bgColor: 'bg-red-50 dark:bg-red-900/20',\n          borderColor: 'border-red-200 dark:border-red-800',\n          textColor: 'text-red-800 dark:text-red-200',\n          iconColor: 'text-red-400',\n        };\n      case 'warning':\n        return {\n          icon: '⚠️',\n          bgColor: 'bg-yellow-50 dark:bg-yellow-900/20',\n          borderColor: 'border-yellow-200 dark:border-yellow-800',\n          textColor: 'text-yellow-800 dark:text-yellow-200',\n          iconColor: 'text-yellow-400',\n        };\n      case 'info':\n        return {\n          icon: 'ℹ️',\n          bgColor: 'bg-blue-50 dark:bg-blue-900/20',\n          borderColor: 'border-blue-200 dark:border-blue-800',\n          textColor: 'text-blue-800 dark:text-blue-200',\n          iconColor: 'text-blue-400',\n        };\n      default:\n        return {\n          icon: '📢',\n          bgColor: 'bg-gray-50 dark:bg-gray-900/20',\n          borderColor: 'border-gray-200 dark:border-gray-800',\n          textColor: 'text-gray-800 dark:text-gray-200',\n          iconColor: 'text-gray-400',\n        };\n    }\n  };\n\n  const styles = getToastStyles(type);\n\n  return (\n    <div\n      className={`\n        max-w-sm w-full ${styles.bgColor} border ${styles.borderColor} rounded-lg shadow-lg\n        p-4 flex items-start space-x-3 transform transition-all duration-300 ease-in-out\n        hover:scale-105\n      `}\n      role=\"alert\"\n      aria-live=\"assertive\"\n    >\n      {/* Icon */}\n      <div className={`flex-shrink-0 text-lg ${styles.iconColor}`}>\n        {styles.icon}\n      </div>\n\n      {/* Message */}\n      <div className=\"flex-1 min-w-0\">\n        <p className={`text-sm font-medium ${styles.textColor}`}>\n          {message}\n        </p>\n      </div>\n\n      {/* Close button */}\n      <button\n        onClick={() => onRemove(id)}\n        className={`\n          flex-shrink-0 ml-2 p-1 rounded-md ${styles.textColor} hover:bg-black/10\n          focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-transparent\n          focus:ring-current transition-colors duration-200\n        `}\n        aria-label=\"Close notification\"\n      >\n        <svg className=\"w-4 h-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n        </svg>\n      </button>\n    </div>\n  );\n}\n\n// Global toast functions (for use outside of React components)\nlet toastContext: ToastContextType | null = null;\n\nexport const setToastContext = (context: ToastContextType) => {\n  toastContext = context;\n};\n\nexport const toast = {\n  success: (message: string, duration?: number) => {\n    if (toastContext) {\n      toastContext.success(message, duration);\n    } else {\n      console.warn('Toast context not available');\n    }\n  },\n  error: (message: string, duration?: number) => {\n    if (toastContext) {\n      toastContext.error(message, duration);\n    } else {\n      console.warn('Toast context not available');\n    }\n  },\n  warning: (message: string, duration?: number) => {\n    if (toastContext) {\n      toastContext.warning(message, duration);\n    } else {\n      console.warn('Toast context not available');\n    }\n  },\n  info: (message: string, duration?: number) => {\n    if (toastContext) {\n      toastContext.info(message, duration);\n    } else {\n      console.warn('Toast context not available');\n    }\n  },\n}; ","import React, { createContext, useContext, useReducer, ReactNode } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { adminAPI } from '../lib/api';\nimport {\n  AdminUser,\n  AdminMaterial,\n  AdminPayment,\n  AdminLog,\n  AdminOverview,\n  UserFilters,\n  MaterialFilters,\n  PaymentFilters,\n  LogFilters,\n  UpdateUserRoleData,\n  UpdateUserStatusData,\n  ApproveMaterialData,\n  RefundPaymentData\n} from '../types/admin';\n\n// State interface\ninterface AdminState {\n  // Overview data\n  overview: AdminOverview | null;\n  overviewLoading: boolean;\n  \n  // Users\n  users: AdminUser[];\n  usersLoading: boolean;\n  usersPagination: {\n    page: number;\n    limit: number;\n    total: number;\n    pages: number;\n  } | null;\n  selectedUser: AdminUser | null;\n  \n  // Materials\n  materials: AdminMaterial[];\n  materialsLoading: boolean;\n  materialsPagination: {\n    page: number;\n    limit: number;\n    total: number;\n    pages: number;\n  } | null;\n  selectedMaterial: AdminMaterial | null;\n  \n  // Payments\n  payments: AdminPayment[];\n  paymentsLoading: boolean;\n  paymentsPagination: {\n    page: number;\n    limit: number;\n    total: number;\n    pages: number;\n  } | null;\n  selectedPayment: AdminPayment | null;\n  \n  // Logs\n  logs: AdminLog[];\n  logsLoading: boolean;\n  logsPagination: {\n    page: number;\n    limit: number;\n    total: number;\n    pages: number;\n  } | null;\n  \n  // Filters\n  userFilters: UserFilters;\n  materialFilters: MaterialFilters;\n  paymentFilters: PaymentFilters;\n  logFilters: LogFilters;\n}\n\n// Action types\ntype AdminAction =\n  | { type: 'SET_OVERVIEW'; payload: AdminOverview }\n  | { type: 'SET_OVERVIEW_LOADING'; payload: boolean }\n  | { type: 'SET_USERS'; payload: { users: AdminUser[]; pagination: any } }\n  | { type: 'SET_USERS_LOADING'; payload: boolean }\n  | { type: 'SET_SELECTED_USER'; payload: AdminUser | null }\n  | { type: 'SET_MATERIALS'; payload: { materials: AdminMaterial[]; pagination: any } }\n  | { type: 'SET_MATERIALS_LOADING'; payload: boolean }\n  | { type: 'SET_SELECTED_MATERIAL'; payload: AdminMaterial | null }\n  | { type: 'SET_PAYMENTS'; payload: { payments: AdminPayment[]; pagination: any } }\n  | { type: 'SET_PAYMENTS_LOADING'; payload: boolean }\n  | { type: 'SET_SELECTED_PAYMENT'; payload: AdminPayment | null }\n  | { type: 'SET_LOGS'; payload: { logs: AdminLog[]; pagination: any } }\n  | { type: 'SET_LOGS_LOADING'; payload: boolean }\n  | { type: 'SET_USER_FILTERS'; payload: UserFilters }\n  | { type: 'SET_MATERIAL_FILTERS'; payload: MaterialFilters }\n  | { type: 'SET_PAYMENT_FILTERS'; payload: PaymentFilters }\n  | { type: 'SET_LOG_FILTERS'; payload: LogFilters }\n  | { type: 'UPDATE_USER'; payload: AdminUser }\n  | { type: 'UPDATE_MATERIAL'; payload: AdminMaterial }\n  | { type: 'UPDATE_PAYMENT'; payload: AdminPayment }\n  | { type: 'REMOVE_USER'; payload: string }\n  | { type: 'REMOVE_MATERIAL'; payload: string };\n\n// Initial state\nconst initialState: AdminState = {\n  overview: null,\n  overviewLoading: false,\n  users: [],\n  usersLoading: false,\n  usersPagination: null,\n  selectedUser: null,\n  materials: [],\n  materialsLoading: false,\n  materialsPagination: null,\n  selectedMaterial: null,\n  payments: [],\n  paymentsLoading: false,\n  paymentsPagination: null,\n  selectedPayment: null,\n  logs: [],\n  logsLoading: false,\n  logsPagination: null,\n  userFilters: {},\n  materialFilters: {},\n  paymentFilters: {},\n  logFilters: {}\n};\n\n// Reducer\nfunction adminReducer(state: AdminState, action: AdminAction): AdminState {\n  switch (action.type) {\n    case 'SET_OVERVIEW':\n      return { ...state, overview: action.payload };\n    case 'SET_OVERVIEW_LOADING':\n      return { ...state, overviewLoading: action.payload };\n    case 'SET_USERS':\n      return { \n        ...state, \n        users: action.payload.users, \n        usersPagination: action.payload.pagination \n      };\n    case 'SET_USERS_LOADING':\n      return { ...state, usersLoading: action.payload };\n    case 'SET_SELECTED_USER':\n      return { ...state, selectedUser: action.payload };\n    case 'SET_MATERIALS':\n      return { \n        ...state, \n        materials: action.payload.materials, \n        materialsPagination: action.payload.pagination \n      };\n    case 'SET_MATERIALS_LOADING':\n      return { ...state, materialsLoading: action.payload };\n    case 'SET_SELECTED_MATERIAL':\n      return { ...state, selectedMaterial: action.payload };\n    case 'SET_PAYMENTS':\n      return { \n        ...state, \n        payments: action.payload.payments, \n        paymentsPagination: action.payload.pagination \n      };\n    case 'SET_PAYMENTS_LOADING':\n      return { ...state, paymentsLoading: action.payload };\n    case 'SET_SELECTED_PAYMENT':\n      return { ...state, selectedPayment: action.payload };\n    case 'SET_LOGS':\n      return { \n        ...state, \n        logs: action.payload.logs, \n        logsPagination: action.payload.pagination \n      };\n    case 'SET_LOGS_LOADING':\n      return { ...state, logsLoading: action.payload };\n    case 'SET_USER_FILTERS':\n      return { ...state, userFilters: action.payload };\n    case 'SET_MATERIAL_FILTERS':\n      return { ...state, materialFilters: action.payload };\n    case 'SET_PAYMENT_FILTERS':\n      return { ...state, paymentFilters: action.payload };\n    case 'SET_LOG_FILTERS':\n      return { ...state, logFilters: action.payload };\n    case 'UPDATE_USER':\n      return {\n        ...state,\n        users: state.users.map(user => \n          user._id === action.payload._id ? action.payload : user\n        ),\n        selectedUser: state.selectedUser?._id === action.payload._id \n          ? action.payload \n          : state.selectedUser\n      };\n    case 'UPDATE_MATERIAL':\n      return {\n        ...state,\n        materials: state.materials.map(material => \n          material._id === action.payload._id ? action.payload : material\n        ),\n        selectedMaterial: state.selectedMaterial?._id === action.payload._id \n          ? action.payload \n          : state.selectedMaterial\n      };\n    case 'UPDATE_PAYMENT':\n      return {\n        ...state,\n        payments: state.payments.map(payment => \n          payment._id === action.payload._id ? action.payload : payment\n        ),\n        selectedPayment: state.selectedPayment?._id === action.payload._id \n          ? action.payload \n          : state.selectedPayment\n      };\n    case 'REMOVE_USER':\n      return {\n        ...state,\n        users: state.users.filter(user => user._id !== action.payload),\n        selectedUser: state.selectedUser?._id === action.payload ? null : state.selectedUser\n      };\n    case 'REMOVE_MATERIAL':\n      return {\n        ...state,\n        materials: state.materials.filter(material => material._id !== action.payload),\n        selectedMaterial: state.selectedMaterial?._id === action.payload ? null : state.selectedMaterial\n      };\n    default:\n      return state;\n  }\n}\n\n// Context interface\ninterface AdminContextType {\n  state: AdminState;\n  \n  // Overview actions\n  loadOverview: () => Promise<void>;\n  \n  // User actions\n  loadUsers: (page?: number, filters?: UserFilters) => Promise<void>;\n  loadUserById: (id: string) => Promise<AdminUser | null>;\n  updateUserRole: (id: string, data: UpdateUserRoleData) => Promise<void>;\n  updateUserStatus: (id: string, data: UpdateUserStatusData) => Promise<void>;\n  deleteUser: (id: string) => Promise<void>;\n  setSelectedUser: (user: AdminUser | null) => void;\n  setUserFilters: (filters: UserFilters) => void;\n  \n  // Material actions\n  loadMaterials: (page?: number, filters?: MaterialFilters) => Promise<void>;\n  approveMaterial: (id: string, data: ApproveMaterialData) => Promise<void>;\n  deleteMaterial: (id: string) => Promise<void>;\n  setSelectedMaterial: (material: AdminMaterial | null) => void;\n  setMaterialFilters: (filters: MaterialFilters) => void;\n  \n  // Payment actions\n  loadPayments: (page?: number, filters?: PaymentFilters) => Promise<void>;\n  refundPayment: (id: string, data: RefundPaymentData) => Promise<void>;\n  setSelectedPayment: (payment: AdminPayment | null) => void;\n  setPaymentFilters: (filters: PaymentFilters) => void;\n  \n  // Log actions\n  loadLogs: (page?: number, filters?: LogFilters) => Promise<void>;\n  setLogFilters: (filters: LogFilters) => void;\n}\n\n// Create context\nconst AdminContext = createContext<AdminContextType | undefined>(undefined);\n\n// Provider component\ninterface AdminProviderProps {\n  children: ReactNode;\n}\n\nexport const AdminProvider: React.FC<AdminProviderProps> = ({ children }) => {\n  const [state, dispatch] = useReducer(adminReducer, initialState);\n\n  // Overview actions\n  const loadOverview = async () => {\n    try {\n      dispatch({ type: 'SET_OVERVIEW_LOADING', payload: true });\n      const response = await adminAPI.getOverview();\n      if (response.data.success) {\n        dispatch({ type: 'SET_OVERVIEW', payload: response.data.data });\n      }\n    } catch (error) {\n      console.error('Error loading overview:', error);\n      toast.error('Failed to load overview data');\n    } finally {\n      dispatch({ type: 'SET_OVERVIEW_LOADING', payload: false });\n    }\n  };\n\n  // User actions\n  const loadUsers = async (page = 1, filters = {}) => {\n    try {\n      dispatch({ type: 'SET_USERS_LOADING', payload: true });\n      const params = { page, limit: 20, ...filters };\n      const response = await adminAPI.getUsers(params);\n      if (response.data.success) {\n        dispatch({ \n          type: 'SET_USERS', \n          payload: { \n            users: response.data.data.users, \n            pagination: response.data.data.pagination \n          } \n        });\n      }\n    } catch (error) {\n      console.error('Error loading users:', error);\n      toast.error('Failed to load users');\n    } finally {\n      dispatch({ type: 'SET_USERS_LOADING', payload: false });\n    }\n  };\n\n  const loadUserById = async (id: string): Promise<AdminUser | null> => {\n    try {\n      const response = await adminAPI.getUserById(id);\n      if (response.data.success) {\n        return response.data.data;\n      }\n      return null;\n    } catch (error) {\n      console.error('Error loading user:', error);\n      toast.error('Failed to load user details');\n      return null;\n    }\n  };\n\n  const updateUserRole = async (id: string, data: UpdateUserRoleData) => {\n    try {\n      const response = await adminAPI.updateUserRole(id, data.role);\n      if (response.data.success) {\n        dispatch({ type: 'UPDATE_USER', payload: response.data.data });\n        toast.success('User role updated successfully');\n      }\n    } catch (error) {\n      console.error('Error updating user role:', error);\n      toast.error('Failed to update user role');\n    }\n  };\n\n  const updateUserStatus = async (id: string, data: UpdateUserStatusData) => {\n    try {\n      const response = await adminAPI.updateUserStatus(id, data.status);\n      if (response.data.success) {\n        dispatch({ type: 'UPDATE_USER', payload: response.data.data });\n        toast.success('User status updated successfully');\n      }\n    } catch (error) {\n      console.error('Error updating user status:', error);\n      toast.error('Failed to update user status');\n    }\n  };\n\n  const deleteUser = async (id: string) => {\n    try {\n      const response = await adminAPI.deleteUser(id);\n      if (response.data.success) {\n        dispatch({ type: 'REMOVE_USER', payload: id });\n        toast.success('User deleted successfully');\n      }\n    } catch (error) {\n      console.error('Error deleting user:', error);\n      toast.error('Failed to delete user');\n    }\n  };\n\n  const setSelectedUser = (user: AdminUser | null) => {\n    dispatch({ type: 'SET_SELECTED_USER', payload: user });\n  };\n\n  const setUserFilters = (filters: UserFilters) => {\n    dispatch({ type: 'SET_USER_FILTERS', payload: filters });\n  };\n\n  // Material actions\n  const loadMaterials = async (page = 1, filters = {}) => {\n    try {\n      dispatch({ type: 'SET_MATERIALS_LOADING', payload: true });\n      const params = { page, limit: 20, ...filters };\n      const response = await adminAPI.getMaterials(params);\n      if (response.data.success) {\n        dispatch({ \n          type: 'SET_MATERIALS', \n          payload: { \n            materials: response.data.data.materials, \n            pagination: response.data.data.pagination \n          } \n        });\n      }\n    } catch (error) {\n      console.error('Error loading materials:', error);\n      toast.error('Failed to load materials');\n    } finally {\n      dispatch({ type: 'SET_MATERIALS_LOADING', payload: false });\n    }\n  };\n\n  const approveMaterial = async (id: string, data: ApproveMaterialData) => {\n    try {\n      const response = await adminAPI.approveMaterial(id, data);\n      if (response.data.success) {\n        dispatch({ type: 'UPDATE_MATERIAL', payload: response.data.data });\n        toast.success(`Material ${data.approved ? 'approved' : 'rejected'} successfully`);\n      }\n    } catch (error) {\n      console.error('Error approving material:', error);\n      toast.error('Failed to update material status');\n    }\n  };\n\n  const deleteMaterial = async (id: string) => {\n    try {\n      const response = await adminAPI.deleteMaterial(id);\n      if (response.data.success) {\n        dispatch({ type: 'REMOVE_MATERIAL', payload: id });\n        toast.success('Material deleted successfully');\n      }\n    } catch (error) {\n      console.error('Error deleting material:', error);\n      toast.error('Failed to delete material');\n    }\n  };\n\n  const setSelectedMaterial = (material: AdminMaterial | null) => {\n    dispatch({ type: 'SET_SELECTED_MATERIAL', payload: material });\n  };\n\n  const setMaterialFilters = (filters: MaterialFilters) => {\n    dispatch({ type: 'SET_MATERIAL_FILTERS', payload: filters });\n  };\n\n  // Payment actions\n  const loadPayments = async (page = 1, filters = {}) => {\n    try {\n      dispatch({ type: 'SET_PAYMENTS_LOADING', payload: true });\n      const params = { page, limit: 20, ...filters };\n      const response = await adminAPI.getPayments(params);\n      if (response.data.success) {\n        dispatch({ \n          type: 'SET_PAYMENTS', \n          payload: { \n            payments: response.data.data.payments, \n            pagination: response.data.data.pagination \n          } \n        });\n      }\n    } catch (error) {\n      console.error('Error loading payments:', error);\n      toast.error('Failed to load payments');\n    } finally {\n      dispatch({ type: 'SET_PAYMENTS_LOADING', payload: false });\n    }\n  };\n\n  const refundPayment = async (id: string, data: RefundPaymentData) => {\n    try {\n      const response = await adminAPI.refundPayment(id, data);\n      if (response.data.success) {\n        dispatch({ type: 'UPDATE_PAYMENT', payload: response.data.data });\n        toast.success('Payment refunded successfully');\n      }\n    } catch (error) {\n      console.error('Error refunding payment:', error);\n      toast.error('Failed to refund payment');\n    }\n  };\n\n  const setSelectedPayment = (payment: AdminPayment | null) => {\n    dispatch({ type: 'SET_SELECTED_PAYMENT', payload: payment });\n  };\n\n  const setPaymentFilters = (filters: PaymentFilters) => {\n    dispatch({ type: 'SET_PAYMENT_FILTERS', payload: filters });\n  };\n\n  // Log actions\n  const loadLogs = async (page = 1, filters = {}) => {\n    try {\n      dispatch({ type: 'SET_LOGS_LOADING', payload: true });\n      const params = { page, limit: 50, ...filters };\n      const response = await adminAPI.getLogs(params);\n      if (response.data.success) {\n        dispatch({ \n          type: 'SET_LOGS', \n          payload: { \n            logs: response.data.data.logs, \n            pagination: response.data.data.pagination \n          } \n        });\n      }\n    } catch (error) {\n      console.error('Error loading logs:', error);\n      toast.error('Failed to load logs');\n    } finally {\n      dispatch({ type: 'SET_LOGS_LOADING', payload: false });\n    }\n  };\n\n  const setLogFilters = (filters: LogFilters) => {\n    dispatch({ type: 'SET_LOG_FILTERS', payload: filters });\n  };\n\n  const value: AdminContextType = {\n    state,\n    loadOverview,\n    loadUsers,\n    loadUserById,\n    updateUserRole,\n    updateUserStatus,\n    deleteUser,\n    setSelectedUser,\n    setUserFilters,\n    loadMaterials,\n    approveMaterial,\n    deleteMaterial,\n    setSelectedMaterial,\n    setMaterialFilters,\n    loadPayments,\n    refundPayment,\n    setSelectedPayment,\n    setPaymentFilters,\n    loadLogs,\n    setLogFilters\n  };\n\n  return (\n    <AdminContext.Provider value={value}>\n      {children}\n    </AdminContext.Provider>\n  );\n};\n\n// Hook to use admin context\nexport const useAdmin = () => {\n  const context = useContext(AdminContext);\n  if (context === undefined) {\n    throw new Error('useAdmin must be used within an AdminProvider');\n  }\n  return context;\n}; ","import React, { createContext, useContext, useEffect, useState, ReactNode } from 'react';\nimport { useRouter } from 'next/router';\nimport api, { authAPI } from '../lib/api';\nimport { tokenStorage } from '../utils/secureStorage';\n\n// User interface\nexport interface User {\n  _id: string;\n  id: string; // Alias for backward compatibility\n  name: string;\n  email: string;\n  role: 'student' | 'teacher' | 'admin';\n  avatar?: string;\n  profileImage?: string;\n  bio?: string;\n  phone?: string;\n  emailVerified?: boolean;\n  isApproved?: boolean;\n  approvalStatus?: 'pending' | 'approved' | 'rejected';\n  // Learning progress fields\n  cefrLevel?: string;\n  overallProgress?: number;\n  currentStreak?: number;\n  longestStreak?: number;\n  totalStudyTime?: number;\n  achievements?: string[];\n  // Subscription fields\n  subscriptionStatus?: 'active' | 'inactive' | 'expired';\n  subscriptionType?: string;\n  subscriptionExpiry?: string;\n  // Lesson tokens\n  lessonTokens?: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\n// Auth context interface\ninterface AuthContextType {\n  user: User | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  loading: boolean; // Alias for backward compatibility\n  login: (email: string, password: string) => Promise<boolean>;\n  register: (userData: RegisterData) => Promise<boolean>;\n  logout: () => void;\n  refreshUser: () => Promise<void>;\n  setUser: (user: User | null) => void; // For backward compatibility\n  setAccessToken: (token: string) => void; // For backward compatibility\n}\n\n// Register data interface\ninterface RegisterData {\n  name: string;\n  email: string;\n  password: string;\n  role: 'student' | 'teacher';\n}\n\n// Create context\nexport const AuthContext = createContext<AuthContextType | undefined>(undefined);\n\n// Provider component\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport function AuthProvider({ children }: AuthProviderProps) {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const router = useRouter();\n\n  // Check if user is authenticated\n  const isAuthenticated = !!user;\n\n  // Load user on mount\n  useEffect(() => {\n    loadUser();\n  }, []);\n\n  // Load user from token\n  const loadUser = async () => {\n    try {\n      const token = tokenStorage.getToken();\n      // Even if token is missing (cookie-only auth), try to fetch current user\n      const response = await authAPI.getCurrentUser();\n      if (response.data.success) {\n        const userData = response.data.user;\n        const userWithId = {\n          ...userData,\n          id: userData._id\n        } as User;\n        setUser(userWithId);\n        tokenStorage.setUser(userWithId);\n      } else {\n        if (!token) {\n          setUser(null);\n        } else {\n          tokenStorage.clear();\n        }\n      }\n    } catch (error) {\n      // If cookies are absent or invalid, clear any residual storage\n      tokenStorage.clear();\n      setUser(null);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Login function\n  const login = async (email: string, password: string): Promise<boolean> => {\n    try {\n      setIsLoading(true);\n      const response = await authAPI.login({ email, password });\n      if (response.data.success) {\n        const { accessToken, user: userData, token } = response.data;\n        const userWithId = { ...userData, id: userData._id } as User;\n        const provided = accessToken || token;\n        if (provided) tokenStorage.setToken(provided);\n        tokenStorage.setUser(userWithId);\n        setUser(userWithId);\n        return true;\n      }\n      return false;\n    } catch (_error) {\n      return false;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Register function\n  const register = async (userData: RegisterData): Promise<boolean> => {\n    try {\n      setIsLoading(true);\n      const response = await authAPI.register(userData);\n      if (response.data.success) {\n        const { accessToken, user: newUser, token } = response.data;\n        const userWithId = { ...newUser, id: newUser._id } as User;\n        const provided = accessToken || token;\n        if (provided) tokenStorage.setToken(provided);\n        tokenStorage.setUser(userWithId);\n        setUser(userWithId);\n        return true;\n      }\n      return false;\n    } catch (_error) {\n      return false;\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Logout function\n  const logout = async () => {\n    try {\n      // Call logout API\n      await authAPI.logout();\n    } catch (error) {\n      console.error('Logout API error:', error);\n    } finally {\n      // Clear secure storage\n      tokenStorage.clear();\n      \n      // Clear user state\n      setUser(null);\n      \n      // Redirect to login\n      router.push('/login');\n    }\n  };\n\n  // Set user function for backward compatibility\n  const setUserFunction = (newUser: User | null) => {\n    setUser(newUser);\n  };\n\n  // Refresh user data\n  const refreshUser = async () => {\n    try {\n      const response = await authAPI.getCurrentUser();\n      \n      if (response.data.success) {\n        const updatedUser = response.data.user;\n        \n        // Add id alias for backward compatibility\n        const userWithId = {\n          ...updatedUser,\n          id: updatedUser._id\n        };\n        \n        setUser(userWithId);\n        tokenStorage.setUser(userWithId);\n      }\n    } catch (error) {\n      console.error('Error refreshing user:', error);\n      // If refresh fails, logout\n      logout();\n    }\n  };\n\n  // Context value\n  const value: AuthContextType = {\n    user,\n    isAuthenticated,\n    isLoading,\n    loading: isLoading, // Alias for backward compatibility\n    login,\n    register,\n    logout,\n    refreshUser,\n    setUser: setUserFunction, // For backward compatibility\n    setAccessToken: (token: string) => {\n      tokenStorage.setToken(token);\n    }, // For backward compatibility\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}\n\n// Custom hook to use auth context\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  \n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  \n  return context;\n}\n\n// Alias for backward compatibility\nexport const useAuthContext = useAuth;\n\n// Role guard hook\nexport function useRoleGuard(allowedRoles: ('student' | 'teacher' | 'admin')[]) {\n  const { user, isAuthenticated, isLoading } = useAuth();\n  const router = useRouter();\n\n  useEffect(() => {\n    if (!isLoading) {\n      if (!isAuthenticated) {\n        router.push('/login');\n        return;\n      }\n\n      if (user && !allowedRoles.includes(user.role)) {\n        // Redirect to appropriate dashboard based on user role\n        switch (user.role) {\n          case 'student':\n            router.push('/dashboard/student');\n            break;\n          case 'teacher':\n            router.push('/dashboard/teacher');\n            break;\n          case 'admin':\n            router.push('/dashboard/admin');\n            break;\n          default:\n            router.push('/login');\n        }\n      }\n    }\n  }, [user, isAuthenticated, isLoading, allowedRoles, router]);\n\n  return {\n    hasAccess: user ? allowedRoles.includes(user.role) : false,\n    isLoading,\n    user,\n  };\n} ","import React, { createContext, useContext, useEffect, useReducer, useRef, ReactNode } from 'react';\nimport { io, Socket } from 'socket.io-client';\nimport { tokenStorage } from '../utils/secureStorage';\nimport { useAuth } from './AuthContext';\nimport { useToast } from '../components/common/Toast';\nimport api from '../lib/api';\nimport {\n  ChatState,\n  ChatContextType,\n  Conversation,\n  Message,\n  SendMessageData,\n  SocketMessage,\n  TypingData,\n  UserTypingData\n} from '../types/chat';\n\n// Initial state\nconst initialState: ChatState = {\n  conversations: [],\n  currentConversation: null,\n  messages: [],\n  loading: false,\n  error: null,\n  unreadCount: 0,\n  typingUsers: new Set()\n};\n\n// Action types\ntype ChatAction =\n  | { type: 'SET_LOADING'; payload: boolean }\n  | { type: 'SET_ERROR'; payload: string | null }\n  | { type: 'SET_CONVERSATIONS'; payload: Conversation[] }\n  | { type: 'SET_CURRENT_CONVERSATION'; payload: Conversation | null }\n  | { type: 'SET_MESSAGES'; payload: Message[] }\n  | { type: 'ADD_MESSAGE'; payload: Message }\n  | { type: 'UPDATE_CONVERSATION_LAST_MESSAGE'; payload: { conversationId: string; message: Message } }\n  | { type: 'SET_UNREAD_COUNT'; payload: number }\n  | { type: 'SET_TYPING_USER'; payload: { userId: string; isTyping: boolean } }\n  | { type: 'CLEAR_TYPING_USERS' };\n\n// Reducer\nfunction chatReducer(state: ChatState, action: ChatAction): ChatState {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return { ...state, loading: action.payload };\n    \n    case 'SET_ERROR':\n      return { ...state, error: action.payload };\n    \n    case 'SET_CONVERSATIONS':\n      return { ...state, conversations: action.payload };\n    \n    case 'SET_CURRENT_CONVERSATION':\n      return { ...state, currentConversation: action.payload };\n    \n    case 'SET_MESSAGES':\n      return { ...state, messages: action.payload };\n    \n    case 'ADD_MESSAGE':\n      return {\n        ...state,\n        messages: [...state.messages, action.payload]\n      };\n    \n    case 'UPDATE_CONVERSATION_LAST_MESSAGE':\n      return {\n        ...state,\n        conversations: state.conversations.map(conv =>\n          conv._id === action.payload.conversationId\n            ? {\n                ...conv,\n                lastMessage: {\n                  content: action.payload.message.content,\n                  sender: action.payload.message.sender._id,\n                  timestamp: action.payload.message.createdAt\n                },\n                updatedAt: action.payload.message.createdAt\n              }\n            : conv\n        )\n      };\n    \n    case 'SET_UNREAD_COUNT':\n      return { ...state, unreadCount: action.payload };\n    \n    case 'SET_TYPING_USER':\n      const newTypingUsers = new Set(state.typingUsers);\n      if (action.payload.isTyping) {\n        newTypingUsers.add(action.payload.userId);\n      } else {\n        newTypingUsers.delete(action.payload.userId);\n      }\n      return { ...state, typingUsers: newTypingUsers };\n    \n    case 'CLEAR_TYPING_USERS':\n      return { ...state, typingUsers: new Set() };\n    \n    default:\n      return state;\n  }\n}\n\n// Create context\nconst ChatContext = createContext<ChatContextType | undefined>(undefined);\n\n// Provider component\ninterface ChatProviderProps {\n  children: ReactNode;\n}\n\nexport function ChatProvider({ children }: ChatProviderProps) {\n  const [state, dispatch] = useReducer(chatReducer, initialState);\n  const { user, isAuthenticated } = useAuth();\n  const { error: showError, success: showSuccess } = useToast();\n  const socketRef = useRef<Socket | null>(null);\n  const typingTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n\n  // Initialize Socket.IO connection\n  useEffect(() => {\n    if (isAuthenticated && user) {\n      const socket = io(\n        process.env.NEXT_PUBLIC_API_BASE_URL || 'http://localhost:5000',\n        {\n          auth: {\n            token: tokenStorage.getToken() || undefined\n          }\n        }\n      );\n\n      socketRef.current = socket;\n\n      // Socket event listeners\n      socket.on('connect', () => {\n        console.log('🔌 Connected to chat server');\n      });\n\n      socket.on('disconnect', () => {\n        console.log('🔌 Disconnected from chat server');\n      });\n\n      socket.on('receiveMessage', (message: Message) => {\n        dispatch({ type: 'ADD_MESSAGE', payload: message });\n        dispatch({\n          type: 'UPDATE_CONVERSATION_LAST_MESSAGE',\n          payload: { conversationId: message.conversationId, message }\n        });\n      });\n\n      socket.on('userTyping', (data: UserTypingData) => {\n        dispatch({\n          type: 'SET_TYPING_USER',\n          payload: { userId: data.userId, isTyping: data.isTyping }\n        });\n      });\n\n      socket.on('connect_error', (error: any) => {\n        console.error('Socket connection error:', error);\n        showError('Failed to connect to chat server');\n      });\n\n      return () => {\n        socket.disconnect();\n      };\n    }\n  }, [isAuthenticated, user, showError]);\n\n  // Load conversations\n  const loadConversations = async () => {\n    // Only load if user is authenticated\n    if (!isAuthenticated || !user) {\n      return;\n    }\n\n    try {\n      dispatch({ type: 'SET_LOADING', payload: true });\n      dispatch({ type: 'SET_ERROR', payload: null });\n\n      const response = await api.get('/api/chat/conversations');\n      \n      if (response.data.success) {\n        dispatch({ type: 'SET_CONVERSATIONS', payload: response.data.data });\n      }\n    } catch (error: any) {\n      console.error('Error loading conversations:', error);\n      const errorMessage = error.response?.data?.message || 'Failed to load conversations';\n      dispatch({ type: 'SET_ERROR', payload: errorMessage });\n      showError(errorMessage);\n    } finally {\n      dispatch({ type: 'SET_LOADING', payload: false });\n    }\n  };\n\n  // Load messages for a conversation\n  const loadMessages = async (conversationId: string, page = 1) => {\n    // Only load if user is authenticated\n    if (!isAuthenticated || !user) {\n      return;\n    }\n\n    try {\n      dispatch({ type: 'SET_LOADING', payload: true });\n      dispatch({ type: 'SET_ERROR', payload: null });\n\n      const response = await api.get(`/api/chat/conversations/${conversationId}/messages?page=${page}&limit=50`);\n      \n      if (response.data.success) {\n        if (page === 1) {\n          dispatch({ type: 'SET_MESSAGES', payload: response.data.data.messages });\n        } else {\n          // For pagination, prepend older messages\n          dispatch({ type: 'SET_MESSAGES', payload: [...response.data.data.messages, ...state.messages] });\n        }\n      }\n    } catch (error: any) {\n      console.error('Error loading messages:', error);\n      const errorMessage = error.response?.data?.message || 'Failed to load messages';\n      dispatch({ type: 'SET_ERROR', payload: errorMessage });\n      showError(errorMessage);\n    } finally {\n      dispatch({ type: 'SET_LOADING', payload: false });\n    }\n  };\n\n  // Send a message\n  const sendMessage = async (data: SendMessageData) => {\n    // Only send if user is authenticated\n    if (!isAuthenticated || !user) {\n      return;\n    }\n\n    try {\n      dispatch({ type: 'SET_ERROR', payload: null });\n\n      const response = await api.post('/api/chat/messages', data);\n      \n      if (response.data.success) {\n        const message = response.data.data;\n        \n        // Add message to local state\n        dispatch({ type: 'ADD_MESSAGE', payload: message });\n        \n        // Update conversation's last message\n        dispatch({\n          type: 'UPDATE_CONVERSATION_LAST_MESSAGE',\n          payload: { conversationId: data.conversationId, message }\n        });\n\n        // Emit message via Socket.IO\n        if (socketRef.current) {\n          socketRef.current.emit('sendMessage', {\n            conversationId: data.conversationId,\n            message\n          });\n        }\n\n        showSuccess('Message sent');\n      }\n    } catch (error: any) {\n      console.error('Error sending message:', error);\n      const errorMessage = error.response?.data?.message || 'Failed to send message';\n      dispatch({ type: 'SET_ERROR', payload: errorMessage });\n      showError(errorMessage);\n    }\n  };\n\n  // Mark messages as read\n  const markAsRead = async (conversationId: string) => {\n    // Only mark as read if user is authenticated\n    if (!isAuthenticated || !user) {\n      return;\n    }\n\n    try {\n      await api.patch(`/api/chat/conversations/${conversationId}/read`);\n    } catch (error: any) {\n      console.error('Error marking messages as read:', error);\n    }\n  };\n\n  // Join a conversation room\n  const joinConversation = (conversationId: string) => {\n    if (socketRef.current) {\n      socketRef.current.emit('joinRoom', conversationId);\n    }\n  };\n\n  // Leave a conversation room\n  const leaveConversation = (conversationId: string) => {\n    if (socketRef.current) {\n      socketRef.current.emit('leaveRoom', conversationId);\n    }\n    dispatch({ type: 'CLEAR_TYPING_USERS' });\n  };\n\n  // Set typing indicator\n  const setTyping = (conversationId: string, isTyping: boolean) => {\n    if (socketRef.current && user) {\n      socketRef.current.emit('typing', {\n        conversationId,\n        userId: user._id,\n        isTyping\n      });\n\n      // Clear typing indicator after 3 seconds\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n\n      if (isTyping) {\n        typingTimeoutRef.current = setTimeout(() => {\n          setTyping(conversationId, false);\n        }, 3000);\n      }\n    }\n  };\n\n  // Load unread count\n  const loadUnreadCount = async () => {\n    // Only load if user is authenticated\n    if (!isAuthenticated || !user) {\n      return;\n    }\n\n    try {\n      const response = await api.get('/api/chat/unread-count');\n      \n      if (response.data.success) {\n        dispatch({ type: 'SET_UNREAD_COUNT', payload: response.data.data.unreadCount });\n      }\n    } catch (error: any) {\n      console.error('Error loading unread count:', error);\n    }\n  };\n\n  // Load initial data\n  useEffect(() => {\n    if (isAuthenticated && user) {\n      loadConversations();\n      loadUnreadCount();\n    }\n  }, [isAuthenticated, user]);\n\n  // Cleanup typing timeout on unmount\n  useEffect(() => {\n    return () => {\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  const value: ChatContextType = {\n    state,\n    actions: {\n      loadConversations,\n      loadMessages,\n      sendMessage,\n      markAsRead,\n      joinConversation,\n      leaveConversation,\n      setTyping,\n      loadUnreadCount\n    }\n  };\n\n  return (\n    <ChatContext.Provider value={value}>\n      {children}\n    </ChatContext.Provider>\n  );\n}\n\n// Custom hook to use chat context\nexport function useChat() {\n  const context = useContext(ChatContext);\n  \n  if (context === undefined) {\n    throw new Error('useChat must be used within a ChatProvider');\n  }\n  \n  return context;\n} ","import React, { createContext, useContext, useReducer, useEffect, ReactNode, useRef } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { io, Socket } from 'socket.io-client';\nimport { tokenStorage } from '../utils/secureStorage';\nimport api from '../lib/api';\nimport { useAuth } from './AuthContext';\nimport {\n  Notification,\n  NotificationState,\n  NotificationAction,\n  NotificationContextType,\n  NotificationFilters\n} from '../types/notifications';\n\n// Initial state\nconst initialState: NotificationState = {\n  notifications: [],\n  unreadCount: 0,\n  loading: false,\n  error: null,\n  pagination: {\n    page: 1,\n    limit: 20,\n    total: 0,\n    pages: 0\n  }\n};\n\n// Reducer\nfunction notificationReducer(state: NotificationState, action: NotificationAction): NotificationState {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return { ...state, loading: action.payload };\n    \n    case 'SET_ERROR':\n      return { ...state, error: action.payload, loading: false };\n    \n    case 'SET_NOTIFICATIONS':\n      return {\n        ...state,\n        notifications: action.payload.notifications,\n        pagination: action.payload.pagination,\n        unreadCount: action.payload.unreadCount,\n        loading: false,\n        error: null\n      };\n    \n    case 'ADD_NOTIFICATION':\n      return {\n        ...state,\n        notifications: [action.payload, ...state.notifications],\n        unreadCount: state.unreadCount + 1\n      };\n    \n    case 'UPDATE_NOTIFICATION':\n      return {\n        ...state,\n        notifications: state.notifications.map(notification =>\n          notification._id === action.payload._id ? action.payload : notification\n        )\n      };\n    \n    case 'DELETE_NOTIFICATION':\n      return {\n        ...state,\n        notifications: state.notifications.filter(notification =>\n          notification._id !== action.payload\n        )\n      };\n    \n    case 'MARK_AS_READ':\n      return {\n        ...state,\n        notifications: state.notifications.map(notification =>\n          notification._id === action.payload._id\n            ? { ...notification, isRead: true, readAt: new Date().toISOString() }\n            : notification\n        ),\n        unreadCount: Math.max(0, state.unreadCount - 1)\n      };\n    \n    case 'MARK_ALL_AS_READ':\n      return {\n        ...state,\n        notifications: state.notifications.map(notification => ({\n          ...notification,\n          isRead: true,\n          readAt: new Date().toISOString()\n        })),\n        unreadCount: 0\n      };\n    \n    case 'SET_UNREAD_COUNT':\n      return { ...state, unreadCount: action.payload };\n    \n    default:\n      return state;\n  }\n}\n\n// Create context\nconst NotificationContext = createContext<NotificationContextType | undefined>(undefined);\n\n// Provider component\ninterface NotificationProviderProps {\n  children: ReactNode;\n}\n\nexport function NotificationProvider({ children }: NotificationProviderProps) {\n  const [state, dispatch] = useReducer(notificationReducer, initialState);\n  const { user, isAuthenticated } = useAuth();\n  const socketRef = useRef<Socket | null>(null);\n\n  // Fetch notifications from API\n  const fetchNotifications = async (filters: NotificationFilters = {}) => {\n    // Only fetch if user is authenticated\n    if (!isAuthenticated || !user) {\n      return;\n    }\n\n    try {\n      dispatch({ type: 'SET_LOADING', payload: true });\n\n      const params = new URLSearchParams();\n      Object.entries(filters).forEach(([key, value]) => {\n        if (value !== undefined && value !== null) {\n          params.append(key, value.toString());\n        }\n      });\n\n      const response = await api.get(`/api/notifications?${params.toString()}`);\n      \n      if (response.data.success) {\n        dispatch({\n          type: 'SET_NOTIFICATIONS',\n          payload: response.data.data\n        });\n      }\n    } catch (error: any) {\n      console.error('Error fetching notifications:', error);\n      const errorMessage = error.response?.data?.message || 'Failed to load notifications';\n      dispatch({ type: 'SET_ERROR', payload: errorMessage });\n      toast.error(errorMessage);\n    }\n  };\n\n  // Mark notification as read\n  const markAsRead = async (id: string) => {\n    // Only mark as read if user is authenticated\n    if (!isAuthenticated || !user) {\n      return;\n    }\n\n    try {\n      const response = await api.patch(`/api/notifications/${id}/read`);\n      \n      if (response.data.success) {\n        dispatch({\n          type: 'MARK_AS_READ',\n          payload: response.data.data.notification\n        });\n      }\n    } catch (error: any) {\n      console.error('Error marking notification as read:', error);\n      const errorMessage = error.response?.data?.message || 'Failed to mark notification as read';\n      toast.error(errorMessage);\n    }\n  };\n\n  // Mark all notifications as read\n  const markAllAsRead = async () => {\n    // Only mark all as read if user is authenticated\n    if (!isAuthenticated || !user) {\n      return;\n    }\n\n    try {\n      const response = await api.patch('/api/notifications/read-all');\n      \n      if (response.data.success) {\n        dispatch({ type: 'MARK_ALL_AS_READ' });\n        toast.success('All notifications marked as read');\n      }\n    } catch (error: any) {\n      console.error('Error marking all notifications as read:', error);\n      const errorMessage = error.response?.data?.message || 'Failed to mark all notifications as read';\n      toast.error(errorMessage);\n    }\n  };\n\n  // Delete notification\n  const deleteNotification = async (id: string) => {\n    // Only delete if user is authenticated\n    if (!isAuthenticated || !user) {\n      return;\n    }\n\n    try {\n      const response = await api.delete(`/api/notifications/${id}`);\n      \n      if (response.data.success) {\n        dispatch({ type: 'DELETE_NOTIFICATION', payload: id });\n        toast.success('Notification deleted');\n      }\n    } catch (error: any) {\n      console.error('Error deleting notification:', error);\n      const errorMessage = error.response?.data?.message || 'Failed to delete notification';\n      toast.error(errorMessage);\n    }\n  };\n\n  // Add notification to state (for real-time updates)\n  const addNotification = (notification: Notification) => {\n    dispatch({ type: 'ADD_NOTIFICATION', payload: notification });\n    \n    // Show toast for new notifications\n    const config = getNotificationConfig(notification.type);\n    toast.success(\n      <div>\n        <div className=\"font-semibold\">{notification.title}</div>\n        <div className=\"text-sm opacity-90\">{notification.body}</div>\n      </div>,\n      {\n        duration: 5000,\n        icon: config.icon,\n        style: {\n          background: '#363636',\n          color: '#fff',\n        }\n      }\n    );\n  };\n\n  const getUnreadCount = async () => {\n    // Only get unread count if user is authenticated\n    if (!isAuthenticated || !user) {\n      return;\n    }\n\n    try {\n      const response = await api.get('/api/notifications/unread-count');\n      \n      if (response.data.success) {\n        dispatch({\n          type: 'SET_UNREAD_COUNT',\n          payload: response.data.data.unreadCount\n        });\n      }\n    } catch (error: any) {\n      console.error('Error getting unread count:', error);\n    }\n  };\n\n  // Socket.IO connection and event listeners for real-time notifications\n  useEffect(() => {\n    if (!isAuthenticated || !user) return;\n\n    // Connect to Socket.IO server\n    const socketUrl = process.env.NEXT_PUBLIC_API_BASE_URL || 'http://localhost:5000';\n    socketRef.current = io(socketUrl, {\n      auth: {\n        token: tokenStorage.getToken() || undefined\n      }\n    });\n\n    const socket = socketRef.current;\n\n    // Listen for new notifications\n    socket.on('notification:new', (data: { notification: Notification }) => {\n      addNotification(data.notification);\n    });\n\n    // Listen for notification updates\n    socket.on('notification:updated', (data: { notification: Notification }) => {\n      dispatch({\n        type: 'UPDATE_NOTIFICATION',\n        payload: data.notification\n      });\n    });\n\n    // Listen for notification deletions\n    socket.on('notification:deleted', (data: { id: string }) => {\n      dispatch({\n        type: 'DELETE_NOTIFICATION',\n        payload: data.id\n      });\n    });\n\n    // Join user's notification room\n    socket.emit('joinNotificationRoom', user._id);\n\n    return () => {\n      socket.off('notification:new');\n      socket.off('notification:updated');\n      socket.off('notification:deleted');\n      socket.disconnect();\n    };\n  }, [isAuthenticated, user]);\n\n  // Initial load - only when user is authenticated\n  useEffect(() => {\n    if (isAuthenticated && user) {\n      fetchNotifications();\n      getUnreadCount();\n    }\n  }, [isAuthenticated, user]);\n\n  // Poll for unread count every 30 seconds as fallback - only when authenticated\n  useEffect(() => {\n    if (!isAuthenticated || !user) return;\n\n    const interval = setInterval(() => {\n      getUnreadCount();\n    }, 30000);\n\n    return () => clearInterval(interval);\n  }, [isAuthenticated, user]);\n\n  const value: NotificationContextType = {\n    state,\n    fetchNotifications,\n    markAsRead,\n    markAllAsRead,\n    deleteNotification,\n    addNotification,\n    getUnreadCount\n  };\n\n  return (\n    <NotificationContext.Provider value={value}>\n      {children}\n    </NotificationContext.Provider>\n  );\n}\n\n// Custom hook to use notification context\nexport function useNotifications() {\n  const context = useContext(NotificationContext);\n  \n  if (context === undefined) {\n    throw new Error('useNotifications must be used within a NotificationProvider');\n  }\n  \n  return context;\n}\n\n// Helper function to get notification config\nfunction getNotificationConfig(type: Notification['type']) {\n  const configs = {\n    message: { icon: '💬' },\n    reservation: { icon: '📅' },\n    material: { icon: '📚' },\n    admin: { icon: '⚙️' },\n    lesson: { icon: '🎓' },\n    payment: { icon: '💰' },\n    system: { icon: '🔔' }\n  };\n  \n  return configs[type] || configs.system;\n} ","import axios from 'axios';\nimport { v4 as uuidv4 } from 'uuid';\nimport { RoomFilters, RoomsResponse, CreateRoomData, RoomResponse, JoinRoomData } from '@/types/verbfyTalk';\nimport { MaterialFilters, MaterialsResponse, FreeMaterial, UploadMaterialData } from '@/types/freeMaterials';\nimport { LessonFilters, LessonResponse, StartLessonResponse, SubmitLessonRequest, SubmitLessonResponse, LessonStats, VerbfyLesson } from '@/types/verbfyLessons';\nimport { TestFilters, TestResponse, StartTestResponse, SubmitTestRequest, SubmitTestResponse, PlacementRecommendation, TestStats, CEFRTest, TestAttempt } from '@/types/cefrTests';\nimport { PersonalizedCurriculum, CreateCurriculumRequest, UpdateProgressRequest, UpdateStudyScheduleRequest, CurriculumAnalytics, CurriculumRecommendation } from '@/types/personalizedCurriculum';\nimport { AchievementsData } from '@/types/achievements';\nimport { StudyGroupsData, CreateStudyGroupData, StudyGroupFilters } from '@/types/studyGroups';\nimport { AILearningSession, CreateAISessionData, AIResponseData, AIResponse, SessionProgressData, AISessionsResponse, Recommendation, GenerateRecommendationsData, AISessionAnalytics, AISessionAnalyticsFilters } from '@/types/aiLearning';\nimport { AdaptivePath, CreateAdaptivePathData, UpdateModuleProgressData, AdaptivePathFilters, AdaptivePathResponse, AdaptivePathsResponse, AdaptivePathAnalytics, AdaptiveRecommendation } from '@/types/adaptiveLearning';\nimport { TeacherAnalytics, GenerateAnalyticsData, StudentPerformanceData, LessonAnalyticsData, EngagementMetricsData, AnalyticsFilters, TeacherAnalyticsResponse, StudentPerformanceResponse, LessonAnalyticsResponse, EngagementMetricsResponse } from '@/types/teacherAnalytics';\nimport { AITutoringSession, AITutoringMessage, AIContentGeneration, AIContentGenerationRequest, AIContentGenerationResponse, AIAnalytics, AIUserProgress, AIRecommendation, AISessionFilters, AIContentFilters, AIAnalyticsFilters, AISessionResponse, AIContentResponse, AIAnalyticsResponse } from '@/types/aiFeatures';\nimport { tokenStorage } from '../utils/secureStorage';\n\n// Create axios instance with fallback for test environment\nlet api: any;\ntry {\n  api = (axios as any).create?.({\n    baseURL: process.env.NEXT_PUBLIC_API_BASE_URL || 'http://localhost:5000',\n    timeout: 30000,\n    withCredentials: true,\n    headers: { 'Content-Type': 'application/json' },\n  });\n} catch {\n  api = undefined;\n}\nif (!api || !api.get || !api.post) {\n  api = axios as any;\n}\n\n// Request interceptor to add auth token\nif ((api as any)?.interceptors?.request) {\n  api.interceptors.request.use(\n    (config: any) => {\n      const token = tokenStorage.getToken();\n      if (token) {\n        config.headers = config.headers || {};\n        config.headers.Authorization = `Bearer ${token}`;\n      }\n      try {\n        const isWrite = ['post', 'put', 'patch', 'delete'].includes((config.method || 'get').toLowerCase());\n        if (isWrite && typeof document !== 'undefined') {\n          const match = document.cookie.match(/(?:^|; )XSRF-TOKEN=([^;]+)/);\n          const csrf = match ? decodeURIComponent(match[1]) : undefined;\n          if (csrf) {\n            (config.headers as any)['X-CSRF-Token'] = csrf;\n          }\n          (config.headers as any)['Idempotency-Key'] = uuidv4();\n        }\n      } catch {}\n      return config;\n    },\n    (error: any) => Promise.reject(error)\n  );\n}\n\n// Response interceptor for error handling\nif ((api as any)?.interceptors?.response) {\n  api.interceptors.response.use(\n    (response: any) => response,\n    (error: any) => {\n      if (error.response?.status === 401) {\n        tokenStorage.clear();\n        if (typeof window !== 'undefined' && !window.location.pathname.includes('/login')) {\n          window.location.href = '/login';\n        }\n      }\n      if (!error.response) {\n        console.error('Network error:', error.message);\n      }\n      return Promise.reject(error);\n    }\n  );\n}\n\n// API helper functions\nexport const materialsAPI = {\n  // Get all materials with filters\n  getMaterials: (filters: any = {}) => {\n    const params = new URLSearchParams();\n    Object.entries(filters).forEach(([key, value]) => {\n      if (value) params.append(key, (value as any).toString());\n    });\n    return api.get(`/materials?${params.toString()}`).then((r: any) => r.data);\n  },\n\n  // Get material by ID\n  getMaterial: (id: string) => {\n    return api.get(`/materials/${id}`).then((r: any) => r.data);\n  },\n\n  // Upload material\n  uploadMaterial: (formData: FormData) => {\n    return api.post('/materials/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    }).then((r: any) => r.data);\n  },\n\n  // Update material\n  updateMaterial: (id: string, data: any) => {\n    return api.put(`/materials/${id}`, data).then((r: any) => r.data);\n  },\n\n  // Delete material\n  deleteMaterial: (id: string) => {\n    return api.delete(`/materials/${id}`).then((r: any) => r.data);\n  },\n\n  // Preview material\n  previewMaterial: (id: string) => {\n    return api.get(`/materials/${id}/preview`).then((r: any) => r.data);\n  },\n\n  // Download material\n  downloadMaterial: (id: string) => {\n    return api.get(`/materials/${id}/download`, { responseType: 'blob' }).then((r: any) => r.data);\n  },\n};\n\nexport const authAPI = {\n  // Login\n  login: (credentials: { email: string; password: string }) => {\n    return api.post('/auth/login', credentials).then((r: any) => r.data);\n  },\n\n  // Register\n  register: (userData: { name: string; email: string; password: string; role: string }) => {\n    return api.post('/auth/register', userData).then((r: any) => r.data);\n  },\n\n  // Logout\n  logout: () => {\n    return api.post('/auth/logout').then((r: any) => r.data);\n  },\n\n  // Get current user\n  getCurrentUser: () => {\n    return api.get('/auth/me').then((r: any) => r.data);\n  },\n\n  // Refresh token\n  refreshToken: () => {\n    return api.post('/auth/refresh').then((r: any) => r.data);\n  },\n};\n\nexport const userAPI = {\n  // Get user profile\n  getProfile: () => {\n    return api.get('/users/profile').then((r: any) => r.data);\n  },\n\n  // Update user profile\n  updateProfile: (data: any) => {\n    return api.put('/users/profile', data).then((r: any) => r.data);\n  },\n\n  // Upload avatar\n  uploadAvatar: (file: File) => {\n    const form = new FormData();\n    form.append('avatar', file);\n    return api.post('/users/profile/avatar', form, {\n      headers: { 'Content-Type': 'multipart/form-data' },\n    }).then((r: any) => r.data);\n  },\n\n  // Get S3 presigned upload URL\n  getPresignedUploadUrl: (key: string, contentType: string) => {\n    return api.get(`/users/uploads/presign`, { params: { key, contentType } }).then((r: any) => r.data);\n  },\n};\n\nexport const reservationAPI = {\n  // Get reservations\n  getReservations: (filters: any = {}) => {\n    const params = new URLSearchParams();\n    Object.entries(filters).forEach(([key, value]) => {\n      if (value) params.append(key, value.toString());\n    });\n    return api.get(`/api/reservations?${params.toString()}`);\n  },\n\n  // Create reservation\n  createReservation: (data: any) => {\n    return api.post('/api/reservations', data);\n  },\n\n  // Update reservation\n  updateReservation: (id: string, data: any) => {\n    return api.put(`/api/reservations/${id}`, data);\n  },\n\n  // Delete reservation\n  deleteReservation: (id: string) => {\n    return api.delete(`/api/reservations/${id}`);\n  },\n};\n\nexport const availabilityAPI = {\n  // Get availability\n  getAvailability: (teacherId: string) => {\n    return api.get(`/api/availability/${teacherId}`);\n  },\n\n  // Set availability\n  setAvailability: (data: any) => {\n    return api.post('/api/availability', data);\n  },\n\n  // Update availability\n  updateAvailability: (id: string, data: any) => {\n    return api.put(`/api/availability/${id}`, data);\n  },\n\n  // Delete availability\n  deleteAvailability: (id: string) => {\n    return api.delete(`/api/availability/${id}`);\n  },\n};\n\nexport const notificationAPI = {\n  // Get notifications\n  getNotifications: () => {\n    return api.get('/api/notifications');\n  },\n\n  // Mark notification as read\n  markAsRead: (id: string) => {\n    return api.patch(`/api/notifications/${id}/read`);\n  },\n\n  // Mark all notifications as read\n  markAllAsRead: () => {\n    return api.patch('/api/notifications/read-all');\n  },\n};\n\nexport const messagesAPI = {\n  // Get conversations\n  getConversations: () => {\n    return api.get('/api/messages/conversations');\n  },\n\n  // Get messages for conversation\n  getMessages: (conversationId: string) => {\n    return api.get(`/api/messages/conversations/${conversationId}`);\n  },\n\n  // Send message\n  sendMessage: (conversationId: string, data: { content: string; type?: string }) => {\n    return api.post(`/api/messages/conversations/${conversationId}`, data);\n  },\n\n  // Create conversation\n  createConversation: (data: { participantId: string; initialMessage?: string }) => {\n    return api.post('/api/messages/conversations', data);\n  },\n\n  // Mark messages as read\n  markAsRead: (conversationId: string) => {\n    return api.patch(`/api/messages/conversations/${conversationId}/read`);\n  },\n};\n\nexport const analyticsAPI = {\n  // Get teacher analytics\n  getTeacherAnalytics: () => {\n    return api.get('/api/analytics/teacher');\n  },\n\n  // Get student analytics\n  getStudentAnalytics: () => {\n    return api.get('/api/analytics/student');\n  },\n\n  // Get admin analytics\n  getAdminAnalytics: () => {\n    return api.get('/api/analytics/admin');\n  },\n\n  // Get earnings report\n  getEarningsReport: (period = 'month', startDate?: string, endDate?: string) => {\n    const params = new URLSearchParams({ period });\n    if (startDate) params.append('startDate', startDate);\n    if (endDate) params.append('endDate', endDate);\n    return api.get(`/api/analytics/earnings?${params.toString()}`);\n  },\n\n  // Get progress report\n  getProgressReport: (skill?: string, period = 'month') => {\n    const params = new URLSearchParams({ period });\n    if (skill) params.append('skill', skill);\n    return api.get(`/api/analytics/progress?${params.toString()}`);\n  },\n};\n\nexport const paymentAPI = {\n  // Create checkout session\n  createCheckoutSession: (data: { productId: string; couponCode?: string }) => {\n    return api.post('/api/payments/create-session', data);\n  },\n\n  // Get payment history\n  getPaymentHistory: (params?: any) => {\n    return api.get('/api/payments/history', { params });\n  },\n\n  // Get available products\n  getProducts: (params?: any) => {\n    return api.get('/api/payments/products', { params });\n  },\n\n  // Get payment statistics\n  getPaymentStats: () => {\n    return api.get('/api/payments/stats');\n  },\n\n  // Refund payment (admin only)\n  refundPayment: (paymentId: string, data: { reason?: string }) => {\n    return api.post(`/api/payments/${paymentId}/refund`, data);\n  },\n};\n\nexport const adminAPI = {\n  // Overview & Analytics\n  getOverview: () => {\n    return api.get('/api/admin/overview');\n  },\n\n  // Get admin stats (legacy)\n  getStats: () => {\n    return api.get('/api/admin/stats');\n  },\n\n  // Get recent activities (legacy)\n  getActivities: () => {\n    return api.get('/api/admin/activities');\n  },\n\n  // User Management\n  getUsers: (params?: any) => {\n    return api.get('/api/admin/users', { params });\n  },\n\n  getUserById: (id: string) => {\n    return api.get(`/api/admin/users/${id}`);\n  },\n\n  updateUserRole: (id: string, role: string) => {\n    return api.patch(`/api/admin/users/${id}/role`, { role });\n  },\n\n  updateUserStatus: (userId: string, status: string) => {\n    return api.patch(`/api/admin/users/${userId}/status`, { status });\n  },\n\n  deleteUser: (id: string) => {\n    return api.delete(`/api/admin/users/${id}`);\n  },\n\n  // Material Moderation\n  getMaterials: (params?: any) => {\n    return api.get('/api/admin/materials', { params });\n  },\n\n  approveMaterial: (id: string, data: { approved: boolean; reason?: string }) => {\n    return api.patch(`/api/admin/materials/${id}/approve`, data);\n  },\n\n  deleteMaterial: (id: string) => {\n    return api.delete(`/api/admin/materials/${id}`);\n  },\n\n  // Payment Management\n  getPayments: (params?: any) => {\n    return api.get('/api/admin/payments', { params });\n  },\n\n  refundPayment: (id: string, data: { reason?: string }) => {\n    return api.patch(`/api/admin/payments/${id}/refund`, data);\n  },\n\n  // Logs & Activity\n  getLogs: (params?: any) => {\n    return api.get('/api/admin/logs', { params });\n  },\n};\n\n// VerbfyTalk API functions\nexport const verbfyTalkAPI = {\n  // Get all available rooms\n  getRooms: async (filters?: RoomFilters): Promise<RoomsResponse> => {\n    const params = new URLSearchParams();\n    if (filters?.level) params.append('level', filters.level);\n    if (filters?.isPrivate !== undefined) params.append('isPrivate', filters.isPrivate.toString());\n    if (filters?.page) params.append('page', filters.page.toString());\n    if (filters?.limit) params.append('limit', filters.limit.toString());\n\n    const response = await api.get(`/verbfy-talk?${params.toString()}`);\n    return response.data;\n  },\n\n  // Get user's rooms\n  getUserRooms: async (page = 1, limit = 10): Promise<RoomsResponse> => {\n    const response = await api.get(`/verbfy-talk/my-rooms?page=${page}&limit=${limit}`);\n    return response.data;\n  },\n\n  // Create a new room\n  createRoom: async (roomData: CreateRoomData): Promise<RoomResponse> => {\n    const response = await api.post('/verbfy-talk', roomData);\n    return response.data;\n  },\n\n  // Get room details\n  getRoomDetails: async (roomId: string): Promise<RoomResponse> => {\n    const response = await api.get(`/verbfy-talk/${roomId}`);\n    return response.data;\n  },\n\n  // Join a room\n  joinRoom: async (roomId: string, joinData?: JoinRoomData): Promise<RoomResponse> => {\n    const response = await api.post(`/verbfy-talk/${roomId}/join`, joinData || {});\n    return response.data;\n  },\n\n  // Leave a room\n  leaveRoom: async (roomId: string): Promise<{ success: boolean; message: string }> => {\n    const response = await api.post(`/verbfy-talk/${roomId}/leave`);\n    return response.data;\n  },\n\n  // Update room\n  updateRoom: async (roomId: string, roomData: Partial<CreateRoomData>): Promise<RoomResponse> => {\n    const response = await api.put(`/verbfy-talk/${roomId}`, roomData);\n    return response.data;\n  },\n\n  // Delete room\n  deleteRoom: async (roomId: string): Promise<{ success: boolean; message: string }> => {\n    const response = await api.delete(`/verbfy-talk/${roomId}`);\n    return response.data;\n  }\n};\n\n// Free Materials API functions\nexport const freeMaterialsAPI = {\n  // Get all materials\n  getMaterials: async (filters?: MaterialFilters): Promise<MaterialsResponse> => {\n    const params = new URLSearchParams();\n    if (filters?.category) params.append('category', filters.category);\n    if (filters?.level) params.append('level', filters.level);\n    if (filters?.search) params.append('search', filters.search);\n    if (filters?.sortBy) params.append('sortBy', filters.sortBy);\n    if (filters?.sortOrder) params.append('sortOrder', filters.sortOrder);\n    if (filters?.page) params.append('page', filters.page.toString());\n    if (filters?.limit) params.append('limit', filters.limit.toString());\n    if (filters?.featured) params.append('featured', filters.featured.toString());\n\n    const response = await api.get(`/free-materials?${params.toString()}`);\n    return response.data;\n  },\n\n  // Get featured materials\n  getFeaturedMaterials: async (): Promise<{ success: boolean; data: FreeMaterial[] }> => {\n    const response = await api.get('/free-materials/featured');\n    return response.data;\n  },\n\n  // Get material categories\n  getCategories: async (): Promise<{ success: boolean; data: string[] }> => {\n    const response = await api.get('/free-materials/categories');\n    return response.data;\n  },\n\n  // Get material levels\n  getLevels: async (): Promise<{ success: boolean; data: string[] }> => {\n    const response = await api.get('/free-materials/levels');\n    return response.data;\n  },\n\n  // Get material by ID\n  getMaterial: async (id: string): Promise<{ success: boolean; data: FreeMaterial }> => {\n    const response = await api.get(`/free-materials/${id}`);\n    return response.data;\n  },\n\n  // Upload material\n  uploadMaterial: async (materialData: UploadMaterialData): Promise<{ success: boolean; data: FreeMaterial }> => {\n    const formData = new FormData();\n    formData.append('title', materialData.title);\n    formData.append('description', materialData.description);\n    formData.append('category', materialData.category);\n    formData.append('level', materialData.level);\n    if (materialData.tags) formData.append('tags', materialData.tags);\n    if (materialData.isFeatured) formData.append('isFeatured', materialData.isFeatured.toString());\n    formData.append('file', materialData.file);\n\n    const response = await api.post('/free-materials', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  },\n\n  // Rate material\n  rateMaterial: async (id: string, rating: number): Promise<{ success: boolean; message: string }> => {\n    const response = await api.post(`/free-materials/${id}/rate`, { rating });\n    return response.data;\n  },\n\n  // Update material\n  updateMaterial: async (id: string, materialData: Partial<UploadMaterialData>): Promise<{ success: boolean; data: FreeMaterial }> => {\n    const response = await api.put(`/free-materials/${id}`, materialData);\n    return response.data;\n  },\n\n  // Delete material\n  deleteMaterial: async (id: string): Promise<{ success: boolean; message: string }> => {\n    const response = await api.delete(`/free-materials/${id}`);\n    return response.data;\n  },\n\n  // Download material\n  downloadMaterial: async (id: string): Promise<Blob> => {\n    const response = await api.get(`/free-materials/${id}/download`, {\n      responseType: 'blob'\n    });\n    return response.data;\n  }\n};\n\n// Verbfy Lessons API\nexport const verbfyLessonsAPI = {\n  // Get all lessons with filters\n  getLessons: async (filters?: any): Promise<any> => {\n    const params = new URLSearchParams();\n    Object.entries(filters || {}).forEach(([key, value]) => {\n      if (value) params.append(key, value.toString());\n    });\n    const response = await api.get(`/verbfy-lessons?${params.toString()}`);\n    return response.data;\n  },\n\n  // Get lesson by ID\n  getLesson: async (id: string): Promise<any> => {\n    const response = await api.get(`/verbfy-lessons/${id}`);\n    return response.data;\n  },\n\n  // Create lesson (admin/teacher only)\n  createLesson: async (data: any): Promise<any> => {\n    const response = await api.post('/verbfy-lessons', data);\n    return response.data;\n  },\n\n  // Update lesson (admin/teacher only)\n  updateLesson: async (id: string, data: any): Promise<any> => {\n    const response = await api.put(`/verbfy-lessons/${id}`, data);\n    return response.data;\n  },\n\n  // Delete lesson (admin/teacher only)\n  deleteLesson: async (id: string): Promise<any> => {\n    const response = await api.delete(`/verbfy-lessons/${id}`);\n    return response.data;\n  },\n\n  // Start lesson attempt\n  startLesson: async (lessonId: string): Promise<any> => {\n    const response = await api.post(`/verbfy-lessons/${lessonId}/start`);\n    return response.data;\n  },\n\n  // Submit lesson attempt\n  submitLesson: async (attemptId: string, data: any): Promise<any> => {\n    const response = await api.post(`/verbfy-lessons/attempt/${attemptId}/submit`, data);\n    return response.data;\n  },\n\n  // Get lesson categories\n  getCategories: async (): Promise<any> => {\n    const response = await api.get('/verbfy-lessons/categories');\n    return response.data;\n  },\n\n  // Get lesson statistics\n  getStats: async (lessonId: string): Promise<any> => {\n    const response = await api.get(`/verbfy-lessons/${lessonId}/stats`);\n    return response.data;\n  },\n};\n\n// CEFR Tests API\nexport const cefrTestsAPI = {\n  // Get all tests with filters\n  getTests: async (filters: any = {}): Promise<TestResponse> => {\n    const params = new URLSearchParams();\n    Object.entries(filters).forEach(([key, value]) => {\n      if (value !== undefined && value !== null) params.append(key, value.toString());\n    });\n    const response = await api.get(`/api/cefr-tests?${params.toString()}`);\n    return response.data;\n  },\n\n  // Get test by ID\n  getTest: async (testId: string): Promise<CEFRTest> => {\n    const response = await api.get(`/api/cefr-tests/${testId}`);\n    return response.data;\n  },\n\n  // Start test\n  startTest: async (testId: string): Promise<StartTestResponse> => {\n    const response = await api.post(`/api/cefr-tests/${testId}/start`);\n    return response.data;\n  },\n\n  // Submit test\n  submitTest: async (attemptId: string, data: SubmitTestRequest): Promise<SubmitTestResponse> => {\n    const response = await api.post(`/api/cefr-tests/attempt/${attemptId}/submit`, data);\n    return response.data;\n  },\n\n  // Get test attempt details (may not be available on all backends)\n  getTestAttempt: async (attemptId: string): Promise<TestAttempt> => {\n    const response = await api.get(`/api/cefr-tests/attempt/${attemptId}`);\n    return response.data;\n  },\n\n  // Get test statistics\n  getTestStats: async (testId: string): Promise<TestStats> => {\n    const response = await api.get(`/api/cefr-tests/${testId}/stats`);\n    return response.data;\n  },\n\n  // Get placement recommendation\n  getPlacementRecommendation: async (): Promise<PlacementRecommendation> => {\n    const response = await api.get('/api/cefr-tests/placement/recommendation');\n    return response.data;\n  },\n\n  // Seed 50Q Global Placement (admin only)\n  seedGlobalPlacement: async () => {\n    const response = await api.post('/api/cefr-tests/seed/global-placement');\n    return response.data;\n  },\n  // Seed Kids A1–B1 (admin only)\n  seedKidsA1B1: async () => {\n    const response = await api.post('/api/cefr-tests/seed/kids-a1-b1');\n    return response.data;\n  },\n  // Seed Adults A1–B2 (admin only)\n  seedAdultsA1B2: async () => {\n    const response = await api.post('/api/cefr-tests/seed/adults-a1-b2');\n    return response.data;\n  },\n  // Seed Advanced B1–C2 (admin only)\n  seedAdvancedB1C2: async () => {\n    const response = await api.post('/api/cefr-tests/seed/advanced-b1-c2');\n    return response.data;\n  },\n};\n\n// Personalized Curriculum API\nexport const personalizedCurriculumAPI = {\n  // Create curriculum\n  createCurriculum: async (data: CreateCurriculumRequest): Promise<{ curriculum: PersonalizedCurriculum }> => {\n    const response = await api.post('/personalized-curriculum', data);\n    return response.data;\n  },\n\n  // Get user's curriculum\n  getCurriculum: async (): Promise<PersonalizedCurriculum> => {\n    const response = await api.get('/personalized-curriculum');\n    return response.data;\n  },\n\n  // Update curriculum progress\n  updateProgress: async (data: UpdateProgressRequest): Promise<{ message: string }> => {\n    const response = await api.put('/personalized-curriculum/progress', data);\n    return response.data;\n  },\n\n  // Update study schedule\n  updateStudySchedule: async (data: UpdateStudyScheduleRequest): Promise<{ message: string }> => {\n    const response = await api.put('/personalized-curriculum/schedule', data);\n    return response.data;\n  },\n\n  // Get curriculum analytics\n  getAnalytics: async (): Promise<{ analytics: CurriculumAnalytics }> => {\n    const response = await api.get('/personalized-curriculum/analytics');\n    return response.data;\n  },\n\n  // Get recommendations\n  getRecommendations: async (): Promise<{ recommendations: CurriculumRecommendation[] }> => {\n    const response = await api.get('/personalized-curriculum/recommendations');\n    return response.data;\n  },\n\n  // Complete recommendation\n  completeRecommendation: async (recommendationId: string): Promise<{ message: string }> => {\n    const response = await api.post(`/personalized-curriculum/recommendations/${recommendationId}/complete`);\n    return response.data;\n  },\n\n  // Get study schedule\n  getStudySchedule: async (): Promise<any> => {\n    const response = await api.get('/personalized-curriculum/schedule');\n    return response.data;\n  },\n\n  // Add study session\n  addStudySession: async (data: any): Promise<any> => {\n    const response = await api.post('/personalized-curriculum/schedule/sessions', data);\n    return response.data;\n  },\n\n  // Complete study session\n  completeStudySession: async (sessionId: number): Promise<any> => {\n    const response = await api.post(`/personalized-curriculum/schedule/sessions/${sessionId}/complete`);\n    return response.data;\n  },\n};\n\n// Function to set API access token (for backward compatibility)\nexport const setApiAccessToken = (token: string) => {\n  localStorage.setItem('verbfy_token', token);\n};\n\n// Achievements API\nexport const achievementsAPI = {\n  // Get user achievements\n  getAchievements: async (): Promise<any> => {\n    const response = await api.get('/achievements');\n    return response.data;\n  },\n\n  // Get achievement progress\n  getProgress: async (achievementId: number): Promise<any> => {\n    const response = await api.get(`/achievements/${achievementId}/progress`);\n    return response.data;\n  },\n\n  // Get leaderboard\n  getLeaderboard: async (): Promise<any> => {\n    const response = await api.get('/achievements/leaderboard');\n    return response.data;\n  },\n\n  // Unlock achievement\n  unlockAchievement: async (achievementId: number): Promise<any> => {\n    const response = await api.post(`/achievements/${achievementId}/unlock`);\n    return response.data;\n  },\n};\n\n// Games API\nexport const gamesAPI = {\n  list: async (params?: any) => {\n    return api.get('/api/games', { params });\n  },\n  create: async (data: { title: string; description?: string; category?: string; level?: string; thumbnailUrl?: string; gameUrl: string }) => {\n    return api.post('/api/games', data);\n  },\n  delete: async (id: string) => {\n    return api.delete(`/api/games/${id}`);\n  },\n};\n\n// Study Groups API\nexport const studyGroupsAPI = {\n  // Get user's study groups\n  getMyGroups: async (): Promise<any> => {\n    const response = await api.get('/study-groups/my');\n    return response.data;\n  },\n\n  // Get discoverable groups\n  getDiscoverGroups: async (filters?: any): Promise<any> => {\n    const response = await api.get('/study-groups/discover', { params: filters });\n    return response.data;\n  },\n\n  // Create study group\n  createGroup: async (data: any): Promise<any> => {\n    const response = await api.post('/study-groups', data);\n    return response.data;\n  },\n\n  // Join study group\n  joinGroup: async (groupId: number, password?: string): Promise<any> => {\n    const response = await api.post(`/study-groups/${groupId}/join`, { password });\n    return response.data;\n  },\n\n  // Leave study group\n  leaveGroup: async (groupId: number): Promise<any> => {\n    const response = await api.post(`/study-groups/${groupId}/leave`);\n    return response.data;\n  },\n\n  // Get group details\n  getGroupDetails: async (groupId: number): Promise<any> => {\n    const response = await api.get(`/study-groups/${groupId}`);\n    return response.data;\n  },\n\n  // Send message to group\n  sendMessage: async (groupId: number, message: string): Promise<any> => {\n    const response = await api.post(`/study-groups/${groupId}/messages`, { message });\n    return response.data;\n  },\n\n  // Get group messages\n  getMessages: async (groupId: number): Promise<any> => {\n    const response = await api.get(`/study-groups/${groupId}/messages`);\n    return response.data;\n  },\n};\n\n// AI Learning API\nexport const aiLearningAPI = {\n  // Create AI learning session\n  createSession: async (data: CreateAISessionData): Promise<{ session: AILearningSession }> => {\n    const response = await api.post('/ai-learning/sessions', data);\n    return response.data;\n  },\n\n  // Get AI response\n  getAIResponse: async (data: AIResponseData): Promise<AIResponse> => {\n    const response = await api.post('/ai-learning/response', data);\n    return response.data;\n  },\n\n  // Get user sessions\n  getSessions: async (filters?: AISessionFilters): Promise<AISessionsResponse> => {\n    const params = new URLSearchParams();\n    Object.entries(filters || {}).forEach(([key, value]) => {\n      if (value) params.append(key, value.toString());\n    });\n    const response = await api.get(`/ai-learning/sessions?${params.toString()}`);\n    return response.data;\n  },\n\n  // Update session progress\n  updateSessionProgress: async (sessionId: string, data: SessionProgressData): Promise<{ message: string }> => {\n    const response = await api.put(`/ai-learning/sessions/${sessionId}/progress`, data);\n    return response.data;\n  },\n\n  // Generate recommendations\n  generateRecommendations: async (data: GenerateRecommendationsData): Promise<{ recommendations: Recommendation[] }> => {\n    const response = await api.post('/ai-learning/recommendations', data);\n    return response.data;\n  },\n\n  // Get session analytics\n  getSessionAnalytics: async (filters?: AISessionAnalyticsFilters): Promise<{ analytics: AISessionAnalytics }> => {\n    const params = new URLSearchParams();\n    Object.entries(filters || {}).forEach(([key, value]) => {\n      if (value) params.append(key, value.toString());\n    });\n    const response = await api.get(`/ai-learning/sessions/analytics?${params.toString()}`);\n    return response.data;\n  },\n};\n\n// Adaptive Learning API\nexport const adaptiveLearningAPI = {\n  // Create adaptive path\n  createPath: async (data: CreateAdaptivePathData): Promise<AdaptivePathResponse> => {\n    const response = await api.post('/adaptive-learning/paths', data);\n    return response.data;\n  },\n\n  // Get user's adaptive paths\n  getPaths: async (filters?: AdaptivePathFilters): Promise<AdaptivePathsResponse> => {\n    const params = new URLSearchParams();\n    Object.entries(filters || {}).forEach(([key, value]) => {\n      if (value) params.append(key, value.toString());\n    });\n    const response = await api.get(`/adaptive-learning/paths?${params.toString()}`);\n    return response.data;\n  },\n\n  // Get adaptive path by ID\n  getPath: async (pathId: string): Promise<AdaptivePathResponse> => {\n    const response = await api.get(`/adaptive-learning/paths/${pathId}`);\n    return response.data;\n  },\n\n  // Update module progress\n  updateModuleProgress: async (data: UpdateModuleProgressData): Promise<{ message: string }> => {\n    const response = await api.put('/adaptive-learning/paths/progress', data);\n    return response.data;\n  },\n\n  // Get adaptive recommendations\n  getRecommendations: async (pathId: string): Promise<{ recommendations: AdaptiveRecommendation[] }> => {\n    const response = await api.get(`/adaptive-learning/paths/${pathId}/recommendations`);\n    return response.data;\n  },\n\n  // Get path analytics\n  getPathAnalytics: async (pathId: string): Promise<{ analytics: AdaptivePathAnalytics }> => {\n    const response = await api.get(`/adaptive-learning/paths/${pathId}/analytics`);\n    return response.data;\n  },\n};\n\n// Teacher Analytics API\nexport const teacherAnalyticsAPI = {\n  // Generate analytics\n  generateAnalytics: async (data: GenerateAnalyticsData): Promise<TeacherAnalyticsResponse> => {\n    const response = await api.post('/teacher-analytics/generate', data);\n    return response.data;\n  },\n\n  // Get teacher analytics\n  getAnalytics: async (filters?: AnalyticsFilters): Promise<TeacherAnalyticsResponse> => {\n    const params = new URLSearchParams();\n    Object.entries(filters || {}).forEach(([key, value]) => {\n      if (value) params.append(key, value.toString());\n    });\n    const response = await api.get(`/teacher-analytics?${params.toString()}`);\n    return response.data;\n  },\n\n  // Get student performance\n  getStudentPerformance: async (filters?: AnalyticsFilters): Promise<StudentPerformanceResponse> => {\n    const params = new URLSearchParams();\n    Object.entries(filters || {}).forEach(([key, value]) => {\n      if (value) params.append(key, value.toString());\n    });\n    const response = await api.get(`/teacher-analytics/student-performance?${params.toString()}`);\n    return response.data;\n  },\n\n  // Get lesson analytics\n  getLessonAnalytics: async (filters?: AnalyticsFilters): Promise<LessonAnalyticsResponse> => {\n    const params = new URLSearchParams();\n    Object.entries(filters || {}).forEach(([key, value]) => {\n      if (value) params.append(key, value.toString());\n    });\n    const response = await api.get(`/teacher-analytics/lesson-analytics?${params.toString()}`);\n    return response.data;\n  },\n\n  // Get engagement metrics\n  getEngagementMetrics: async (filters?: AnalyticsFilters): Promise<EngagementMetricsResponse> => {\n    const params = new URLSearchParams();\n    Object.entries(filters || {}).forEach(([key, value]) => {\n      if (value) params.append(key, value.toString());\n    });\n    const response = await api.get(`/teacher-analytics/engagement?${params.toString()}`);\n    return response.data;\n  },\n};\n\n// AI Features API\nexport const aiFeaturesAPI = {\n  // AI Tutoring Sessions\n  startTutoringSession: async (data: { sessionType: string; cefrLevel: string }): Promise<AITutoringSession> => {\n    const response = await api.post('/ai-features/tutoring/sessions', data);\n    return response.data;\n  },\n\n  sendTutoringMessage: async (sessionId: string, data: { content: string; messageType: string }): Promise<{ message: AITutoringMessage; session?: AITutoringSession }> => {\n    const response = await api.post(`/ai-features/tutoring/sessions/${sessionId}/messages`, data);\n    return response.data;\n  },\n\n  endTutoringSession: async (sessionId: string): Promise<AITutoringSession> => {\n    const response = await api.put(`/ai-features/tutoring/sessions/${sessionId}/end`);\n    return response.data;\n  },\n\n  getTutoringSessions: async (filters?: AISessionFilters): Promise<AISessionResponse> => {\n    const params = new URLSearchParams();\n    Object.entries(filters || {}).forEach(([key, value]) => {\n      if (value) params.append(key, value.toString());\n    });\n    const response = await api.get(`/ai-features/tutoring/sessions?${params.toString()}`);\n    return response.data;\n  },\n\n  getTutoringSession: async (sessionId: string): Promise<AITutoringSession> => {\n    const response = await api.get(`/ai-features/tutoring/sessions/${sessionId}`);\n    return response.data;\n  },\n\n  // AI Content Generation\n  generateContent: async (data: AIContentGenerationRequest): Promise<AIContentGenerationResponse> => {\n    const response = await api.post('/ai-features/content/generate', data);\n    return response.data;\n  },\n\n  getGeneratedContent: async (filters?: AIContentFilters): Promise<AIContentResponse> => {\n    const params = new URLSearchParams();\n    Object.entries(filters || {}).forEach(([key, value]) => {\n      if (value) params.append(key, value.toString());\n    });\n    const response = await api.get(`/ai-features/content?${params.toString()}`);\n    return response.data;\n  },\n\n  getContent: async (contentId: string): Promise<AIContentGeneration> => {\n    const response = await api.get(`/ai-features/content/${contentId}`);\n    return response.data;\n  },\n\n  reviewContent: async (contentId: string, data: { status: string; notes?: string }): Promise<{ message: string }> => {\n    const response = await api.put(`/ai-features/content/${contentId}/review`, data);\n    return response.data;\n  },\n\n  updateContent: async (contentId: string, data: Partial<AIContentGeneration>): Promise<AIContentGeneration> => {\n    const response = await api.put(`/ai-features/content/${contentId}`, data);\n    return response.data;\n  },\n\n  deleteContent: async (contentId: string): Promise<{ message: string }> => {\n    const response = await api.delete(`/ai-features/content/${contentId}`);\n    return response.data;\n  },\n\n  // AI Analytics\n  getAnalytics: async (filters?: AIAnalyticsFilters): Promise<{ analytics: AIAnalytics }> => {\n    const params = new URLSearchParams();\n    Object.entries(filters || {}).forEach(([key, value]) => {\n      if (value) params.append(key, value.toString());\n    });\n    const response = await api.get(`/ai-features/analytics?${params.toString()}`);\n    return response.data;\n  },\n\n  getUserProgress: async (filters?: AIAnalyticsFilters): Promise<AIUserProgress> => {\n    const params = new URLSearchParams();\n    Object.entries(filters || {}).forEach(([key, value]) => {\n      if (value) params.append(key, value.toString());\n    });\n    const response = await api.get(`/ai-features/user-progress?${params.toString()}`);\n    return response.data;\n  },\n\n  // AI Recommendations\n  getRecommendations: async (): Promise<{ recommendations: AIRecommendation[] }> => {\n    const response = await api.get('/ai-features/recommendations');\n    return response.data;\n  },\n\n  completeRecommendation: async (recommendationId: string): Promise<{ message: string }> => {\n    const response = await api.post(`/ai-features/recommendations/${recommendationId}/complete`);\n    return response.data;\n  },\n\n  // AI Model Management\n  getModelInfo: async (): Promise<{ model: string; version: string; status: string }> => {\n    const response = await api.get('/ai-features/model-info');\n    return response.data;\n  },\n\n  updateModelSettings: async (data: { model: string; settings: any }): Promise<{ message: string }> => {\n    const response = await api.put('/ai-features/model-settings', data);\n    return response.data;\n  },\n};\n\nexport default api; ","import { createContext, useContext, useEffect, useMemo, useState } from 'react';\n\ntype Locale = 'en' | 'tr';\n\ntype Messages = Record<string, string>;\n\ninterface I18nContextValue {\n  locale: Locale;\n  t: (key: string, fallback?: string) => string;\n  setLocale: (loc: Locale) => void;\n}\n\nconst I18nContext = createContext<I18nContextValue | undefined>(undefined);\n\nconst en: Messages = {\n  'auth.login.title': 'Sign in',\n  'auth.login.email': 'Email',\n  'auth.login.password': 'Password',\n  'auth.login.submit': 'Sign in',\n  'auth.login.welcome': 'Welcome back to your learning journey',\n  'auth.login.emailPlaceholder': 'Enter your email',\n  'auth.login.passwordPlaceholder': 'Enter your password',\n  'auth.login.remember': 'Remember me',\n  'auth.login.forgot': 'Forgot your password?',\n  'auth.login.signingin': 'Signing in...',\n  'auth.login.or': 'Or continue with',\n  'auth.login.google': 'Sign in with Google',\n  'auth.login.outlook': 'Sign in with Outlook',\n  'auth.login.apple': 'Sign in with Apple',\n  'auth.login.new': 'New to Verbfy?',\n  'auth.login.join': 'Join Now',\n\n  'auth.register.title': 'Create account',\n  'auth.register.tagline': 'Join the learning revolution',\n  'auth.register.name': 'Full Name',\n  'auth.register.namePlaceholder': 'Enter your full name',\n  'auth.register.email': 'Email Address',\n  'auth.register.emailPlaceholder': 'Enter your email',\n  'auth.register.password': 'Password',\n  'auth.register.passwordPlaceholder': 'Create a strong password',\n  'auth.register.role': 'I want to join as',\n  'auth.register.role.student': 'Student - Learn English',\n  'auth.register.role.teacher': 'Teacher - Teach English (requires admin approval)',\n  'auth.register.creating': 'Creating account...',\n  'auth.register.submit': 'Create account',\n  'auth.register.or': 'Or sign up with',\n  'auth.register.google': 'Continue with Google',\n  'auth.register.outlook': 'Continue with Outlook',\n  'auth.register.apple': 'Continue with Apple',\n  'auth.register.have': 'Already have an account?',\n  'auth.register.signin': 'Sign in here',\n\n  'nav.profile': 'Profile',\n  'nav.dashboard': 'Dashboard',\n  'nav.verbfytalk': 'VerbfyTalk',\n  'nav.freeMaterials': 'Free Materials',\n  'nav.verbfyLessons': 'Verbfy Lessons',\n  'nav.cefrTests': 'CEFR Tests',\n  'nav.curriculum': 'Personalized Curriculum',\n  'nav.aiLearning': 'AI Learning Assistant',\n  'nav.adaptive': 'Adaptive Learning',\n  'nav.aiContent': 'AI Content Generation',\n  'nav.chat': 'Chat',\n  'nav.materials': 'Materials',\n  'nav.payments': 'Payments',\n\n  'profile.save': 'Save Changes',\n  'profile.resendVerification': 'Resend verification',\n  'profile.emailVerified': 'Your email is verified.',\n  'profile.emailNotVerified': 'Your email is not verified.',\n  'profile.name': 'Name',\n  'profile.email': 'Email',\n  'profile.bio': 'Bio',\n\n  'forgot.title': 'Forgot Password',\n  'forgot.email': 'Email',\n  'forgot.submit': 'Send Reset Link',\n\n  'reset.title': 'Reset Password',\n  'reset.new': 'New Password (min 8 chars)',\n  'reset.confirm': 'Confirm Password',\n  'reset.submit': 'Reset Password',\n\n  'verify.title': 'Verify Email',\n  'verify.success': 'Email verified. You can close this page or go to dashboard.',\n  'verify.goDashboard': 'Go to dashboard',\n\n  'footer.privacy': 'Privacy Policy',\n  'footer.terms': 'Terms of Service',\n  'footer.help': 'Help Center',\n  'footer.rights': 'All rights reserved.',\n\n  // Landing\n  'landing.nav.features': 'Features',\n  'landing.nav.how': 'How it Works',\n  'landing.nav.teachers': 'Teachers',\n  'landing.nav.pricing': 'Pricing',\n  'landing.nav.levelTest': 'Free Level Test',\n  'landing.nav.signIn': 'Sign In',\n  'landing.nav.getStarted': 'Get Started',\n  'landing.nav.goDashboard': 'Go to Dashboard',\n\n  'landing.hero.title1': 'Master English with',\n  'landing.hero.title2': 'Expert Teachers',\n  'landing.hero.subtitle': 'Join thousands of learners worldwide and transform your English skills with live video lessons, personalized learning, and proven methodologies.',\n  'landing.hero.start': 'Start Learning Free',\n  'landing.hero.demo': 'Watch Demo',\n\n  'landing.features.title': 'Why Choose Verbfy?',\n  'landing.features.subtitle': 'Our platform combines cutting-edge technology with proven teaching methods to deliver exceptional results.',\n  'landing.feature.liveTalk.title': 'Live VerbfyTalk Rooms',\n  'landing.feature.liveTalk.desc': 'Real-time conversation practice powered by LiveKit with low-latency audio/video.',\n  'landing.feature.aiLearning.title': 'AI Learning Assistant',\n  'landing.feature.aiLearning.desc': 'Personalized recommendations, feedback and adaptive sessions.',\n  'landing.feature.lessons.title': 'Verbfy Lessons',\n  'landing.feature.lessons.desc': 'Curated lesson flows aligned with CEFR and real-world scenarios.',\n  'landing.feature.freeMaterials.title': 'Free Materials',\n  'landing.feature.freeMaterials.desc': 'Carefully designed materials, exercises and downloads.',\n  'landing.feature.cefr.title': 'CEFR Tests',\n  'landing.feature.cefr.desc': 'Placement and practice tests to track your progress accurately.',\n  'landing.feature.analytics.title': 'Progress Analytics',\n  'landing.feature.analytics.desc': 'Track skills, streaks and achievements with clear dashboards.',\n\n  // Featured materials\n  'landing.featuredMaterials.title': 'Featured Materials',\n  'landing.featuredMaterials.subtitle': 'Hand-picked free resources to boost your skills',\n  'landing.featuredMaterials.viewAll': 'View all',\n\n  'landing.how.title': 'How It Works',\n  'landing.how.subtitle': 'Get started with Verbfy in just four simple steps.',\n  'landing.how.step1.title': 'Sign Up',\n  'landing.how.step1.desc': 'Create your free account and complete your profile.',\n  'landing.how.step2.title': 'Choose Your Teacher',\n  'landing.how.step2.desc': 'Find the right teacher for your goals and schedule.',\n  'landing.how.step3.title': 'Book Your Lesson',\n  'landing.how.step3.desc': 'Pick a time that works and reserve instantly.',\n  'landing.how.step4.title': 'Start Learning',\n  'landing.how.step4.desc': 'Join live sessions and follow your adaptive path.',\n\n  'landing.teachers.title': 'Meet Our Expert Teachers',\n  'landing.teachers.subtitle': 'Certified teachers with strong track records of student success.',\n  'landing.teachers.book': 'Book Lesson',\n\n  'landing.pricing.title': 'Choose Your Plan',\n  'landing.pricing.subtitle': 'Flexible pricing designed to fit your goals and budget.',\n  'landing.pricing.popular': 'Most Popular',\n  'landing.pricing.cta': 'Get Started',\n\n  // Pricing details\n  'pricing.monthly.name': 'Monthly Membership',\n  'pricing.monthly.badge': '1 Token Gift',\n  'pricing.monthly.f1': 'Unlimited platform access',\n  'pricing.monthly.f2': 'All free materials',\n  'pricing.monthly.f3': 'Community features',\n  'pricing.monthly.f4': 'Includes 1 VerbfyToken (25 min 1:1 lesson)',\n  'pricing.yearly.name': 'Yearly Membership',\n  'pricing.yearly.badge': 'Best Value • 12 Tokens Gift',\n  'pricing.yearly.f1': 'Everything in Monthly',\n  'pricing.yearly.f2': 'Priority support',\n  'pricing.yearly.f3': 'Includes 12 VerbfyTokens (12×25 min 1:1 lessons)',\n  'pricing.token.name': 'VerbfyToken (Add-on)',\n  'pricing.token.title': '1 Token = 25 min One-to-one Private Lesson',\n  'pricing.token.f1': 'Spend 1 token per 25-minute 1:1 lesson',\n  'pricing.token.f2': 'Token bundles available to active subscribers',\n  'pricing.token.f3': 'Purchase after subscription',\n\n  'landing.cta.title': 'Ready to Start Your English Journey?',\n  'landing.cta.subtitle': 'Join thousands of learners who already trust Verbfy.',\n  'landing.cta.start': 'Start Learning Free',\n  'landing.cta.learnMore': 'Learn More',\n\n  // Testimonials & FAQ\n  'landing.testimonials.title': 'What learners say',\n  'landing.testimonials.q1': 'Verbfy helped me gain confidence to speak at work meetings.',\n  'landing.testimonials.a1': 'Aylin, Product Manager',\n  'landing.testimonials.q2': 'The AI recommendations kept me consistent and improving.',\n  'landing.testimonials.a2': 'Deniz, University Student',\n  'landing.testimonials.q3': 'Live lessons were super engaging and practical.',\n  'landing.testimonials.a3': 'Emre, Software Engineer',\n  'landing.faq.title': 'Frequently asked questions',\n  'landing.faq.q1': 'How do live lessons work?',\n  'landing.faq.a1': 'Join scheduled sessions with teachers via VerbfyTalk powered by LiveKit.',\n  'landing.faq.q2': 'Can I learn for free?',\n  'landing.faq.a2': 'Yes, explore hundreds of free materials and community sessions.',\n  'landing.faq.q3': 'Is Verbfy for beginners?',\n  'landing.faq.a3': 'Absolutely. Our CEFR-aligned modules cover A1 to C2.',\n  'landing.faq.q4': 'Do you offer certificates?',\n  'landing.faq.a4': 'Yes, complete paths award shareable certificates.',\n\n  // Stats labels\n  'landing.stats.learners': 'Active learners',\n  'landing.stats.lessons': 'Live lessons delivered',\n  'landing.stats.teachers': 'Expert teachers',\n  'landing.stats.rating': 'Average rating',\n\n  // Footer blocks\n  'footer.blurb': 'Empowering learners worldwide to master English through innovative technology and expert instruction.',\n  'footer.product': 'Product',\n  'footer.company': 'Company',\n  'footer.support': 'Support',\n  'footer.links.features': 'Features',\n  'footer.links.pricing': 'Pricing',\n  'footer.links.teachers': 'Teachers',\n  'footer.links.materials': 'Materials',\n  'footer.links.about': 'About',\n  'footer.links.careers': 'Careers',\n  'footer.links.blog': 'Blog',\n  'footer.links.contact': 'Contact',\n  'footer.cookie': 'Cookie Policy',\n\n  // Verbfy suite descriptions\n  'suite.title': 'Learn the language in all dimensions.',\n  'suite.subtitle': 'Modules specially designed for speaking, listening, writing, reading, grammar and exam preparation.',\n  'suite.more': 'More',\n  'suite.talk': 'Improve your fluency with live conversation rooms, natural dialogues and instant feedback.',\n  'suite.listen': 'Practice real-life listening with podcasts, daily conversations and accent diversity.',\n  'suite.write': 'Write more effectively with writing tasks, templates and AI-powered feedback.',\n  'suite.read': 'Develop reading with level-appropriate texts, vocabulary work and comprehension questions.',\n  'suite.grammar': 'Learn grammar systematically with topic explanations, interactive exercises and reinforcement tests.',\n  'suite.exam': 'Prepare for your target score with CEFR-aligned mock exams, timed tests and detailed performance analysis.',\n\n  // Common\n  'common.loading': 'Loading...',\n  'common.delete': 'Delete',\n  'common.save': 'Save',\n  'common.cancel': 'Cancel',\n  'common.preview': 'Preview',\n  'common.submitting': 'Submitting...',\n\n  // Home\n  'home.title': 'Home',\n  'home.stats.unread': 'Unread notifications',\n  'home.stats.upcoming': 'Upcoming lessons',\n  'home.stats.rooms': 'Open talk rooms',\n  'home.stats.materials': 'Featured materials',\n  'home.shortcut.teachers': 'Find Teachers',\n  'home.shortcut.talk': 'Join VerbfyTalk',\n  'home.shortcut.materials': 'Free Materials',\n  'home.shortcut.cefr': 'CEFR Tests',\n  'home.upcoming': 'Your upcoming lessons',\n  'home.viewAll': 'View all',\n  'home.upcomingEmpty': 'No upcoming lessons yet',\n  'home.materialsEmpty': 'No featured materials yet',\n  'home.rooms': 'Open VerbfyTalk rooms',\n  'home.roomsEmpty': 'No rooms available right now',\n  'home.lesson': 'Lesson',\n  'home.manage': 'Manage',\n  'home.room': 'Room',\n  'home.private': 'Private',\n  'home.public': 'Public',\n\n  // Teachers\n  'teachers.title': 'Find Teachers',\n  'teachers.search': 'Search teachers',\n  'teachers.empty': 'No teachers found',\n  'teachers.detail': 'Teacher',\n  'teachers.availability': 'Availability (next 7 days)',\n  'teachers.noSlots': 'No slots',\n  'teachers.selected': 'Selected',\n  'teachers.book': 'Book Lesson',\n  'teachers.booked': 'Reservation created',\n  'teachers.bookError': 'Could not create reservation',\n\n  // Teacher schedule\n  'tschedule.title': 'My Schedule',\n  'tschedule.add': 'Add available slot',\n  'tschedule.date': 'Date',\n  'tschedule.time': 'Time',\n  'tschedule.duration': 'Duration (min)',\n  'tschedule.addBtn': 'Add Slot',\n  'tschedule.list': 'Upcoming availability',\n  'tschedule.empty': 'No availability yet',\n\n  // Teacher materials\n  'tmaterials.title': 'My Materials',\n  'tmaterials.upload': 'Upload new material',\n  'tmaterials.titleLabel': 'Title',\n  'tmaterials.level': 'Level',\n  'tmaterials.category': 'Category',\n  'tmaterials.description': 'Description',\n  'tmaterials.file': 'File',\n  'tmaterials.uploadBtn': 'Upload',\n  'tmaterials.edit': 'Edit Material',\n\n  // Teacher students\n  'tstudents.title': 'My Students',\n  'tstudents.empty': 'No students yet',\n\n  // Teacher earnings\n  'tearnings.title': 'Earnings',\n  'tearnings.empty': 'No earnings yet',\n  'tearnings.total': 'Total Earnings',\n  'tearnings.month': 'This Month',\n  'tearnings.sessions': 'Paid Sessions',\n\n  // VerbfyTalk actions\n  'talk.join': 'Join Room',\n  'talk.joining': 'Joining...',\n\n  // Admin common\n  'admin.search': 'Search...',\n  'admin.all': 'All',\n  'admin.pending': 'Pending',\n  'admin.approved': 'Approved',\n  'admin.rejected': 'Rejected',\n  'admin.actions': 'Actions',\n  'admin.name': 'Name',\n  'admin.email': 'Email',\n  'admin.user': 'User',\n  'admin.created': 'Created',\n  'admin.delete': 'Delete',\n  'admin.refund': 'Refund',\n  'admin.prev': 'Prev',\n  'admin.next': 'Next',\n  'admin.page': 'Page',\n  'admin.role': 'Role',\n  'admin.status': 'Status',\n  'admin.refresh': 'Refresh',\n  'admin.student': 'Student',\n  'admin.teacher': 'Teacher',\n  'admin.admin': 'Admin',\n  'admin.approve': 'Approve',\n  'admin.reject': 'Reject',\n\n  // Admin pages\n  'admin.materials.title': 'Admin • Materials',\n  'admin.materials.titleCol': 'Title',\n  'admin.materials.level': 'Level',\n  'admin.materials.category': 'Category',\n  'admin.materials.uploader': 'Uploader',\n  'admin.materials.status': 'Status',\n  'admin.materials.approve': 'Approve',\n  'admin.materials.reject': 'Unapprove',\n  'admin.materials.empty': 'No materials',\n\n  'admin.payments.title': 'Admin • Payments',\n  'admin.payments.amount': 'Amount',\n  'admin.succeeded': 'Succeeded',\n  'admin.refunded': 'Refunded',\n  'admin.failed': 'Failed',\n  'admin.payments.empty': 'No payments',\n\n  'admin.logs.title': 'Admin • Logs',\n  'admin.logs.empty': 'No logs',\n\n  'admin.users.title': 'User Management',\n  'admin.users.pending': 'Pending Teacher Applications',\n  'admin.users.noPending': 'No pending applications',\n  'admin.users.all': 'All Users',\n  'admin.users.empty': 'No users found',\n\n  // Reservations\n  'reservations.title': 'My Reservations',\n  'reservations.empty': 'No reservations yet',\n\n  // Materials\n  'materials.title': 'Free Materials',\n  'materials.search': 'Search materials',\n  'materials.empty': 'No materials found',\n\n  // VerbfyTalk\n  'talk.title': 'VerbfyTalk Rooms',\n  'talk.empty': 'No rooms available',\n};\n\nconst tr: Messages = {\n  'auth.login.title': 'Giriş yap',\n  'auth.login.email': 'E-posta',\n  'auth.login.password': 'Şifre',\n  'auth.login.submit': 'Giriş yap',\n  'auth.login.welcome': 'Öğrenme yolculuğunuza yeniden hoş geldiniz',\n  'auth.login.emailPlaceholder': 'E-postanızı girin',\n  'auth.login.passwordPlaceholder': 'Şifrenizi girin',\n  'auth.login.remember': 'Beni hatırla',\n  'auth.login.forgot': 'Şifrenizi mi unuttunuz?',\n  'auth.login.signingin': 'Giriş yapılıyor...',\n  'auth.login.or': 'Veya şununla devam edin',\n  'auth.login.google': 'Google ile giriş yap',\n  'auth.login.outlook': 'Outlook ile giriş yap',\n  'auth.login.apple': 'Apple ile giriş yap',\n  'auth.login.new': 'Verbfy’ye yeni misiniz?',\n  'auth.login.join': 'Hemen Katıl',\n\n  'auth.register.title': 'Hesap oluştur',\n  'auth.register.tagline': 'Öğrenme devrimine katılın',\n  'auth.register.name': 'Ad Soyad',\n  'auth.register.namePlaceholder': 'Adınızı ve soyadınızı girin',\n  'auth.register.email': 'E‑posta Adresi',\n  'auth.register.emailPlaceholder': 'E‑postanızı girin',\n  'auth.register.password': 'Şifre',\n  'auth.register.passwordPlaceholder': 'Güçlü bir şifre oluşturun',\n  'auth.register.role': 'Katılmak istediğim rol',\n  'auth.register.role.student': 'Öğrenci – İngilizce öğren',\n  'auth.register.role.teacher': 'Öğretmen – İngilizce öğret (admin onayı gerekir)',\n  'auth.register.creating': 'Hesap oluşturuluyor...',\n  'auth.register.submit': 'Hesap oluştur',\n  'auth.register.or': 'Veya şu hesapla kaydol',\n  'auth.register.google': 'Google ile devam et',\n  'auth.register.outlook': 'Outlook ile devam et',\n  'auth.register.apple': 'Apple ile devam et',\n  'auth.register.have': 'Zaten hesabın var mı?',\n  'auth.register.signin': 'Buradan giriş yap',\n\n  'nav.profile': 'Profil',\n  'nav.dashboard': 'Panel',\n  'nav.verbfytalk': 'VerbfyTalk',\n  'nav.freeMaterials': 'Ücretsiz Materyaller',\n  'nav.verbfyLessons': 'Verbfy Dersleri',\n  'nav.cefrTests': 'CEFR Testleri',\n  'nav.curriculum': 'Kişiselleştirilmiş Müfredat',\n  'nav.aiLearning': 'Yapay Zekâ Öğrenme Asistanı',\n  'nav.adaptive': 'Uyarlanabilir Öğrenme',\n  'nav.aiContent': 'YZ İçerik Üretimi',\n  'nav.chat': 'Sohbet',\n  'nav.materials': 'Materyaller',\n  'nav.payments': 'Ödemeler',\n\n  'profile.save': 'Değişiklikleri Kaydet',\n  'profile.resendVerification': 'Doğrulama e-postasını tekrar gönder',\n  'profile.emailVerified': 'E-postanız doğrulandı.',\n  'profile.emailNotVerified': 'E-postanız doğrulanmadı.',\n  'profile.name': 'Ad',\n  'profile.email': 'E‑posta',\n  'profile.bio': 'Biyografi',\n\n  'forgot.title': 'Şifreyi Sıfırla',\n  'forgot.email': 'E‑posta',\n  'forgot.submit': 'Sıfırlama Bağlantısı Gönder',\n\n  'reset.title': 'Şifreyi Sıfırla',\n  'reset.new': 'Yeni Şifre (en az 8 karakter)',\n  'reset.confirm': 'Şifreyi Doğrula',\n  'reset.submit': 'Şifreyi Sıfırla',\n\n  'verify.title': 'E‑postayı Doğrula',\n  'verify.success': 'E‑posta doğrulandı. Bu sayfayı kapatabilir veya panele gidebilirsiniz.',\n  'verify.goDashboard': 'Panele git',\n\n  'footer.privacy': 'Gizlilik Politikası',\n  'footer.terms': 'Kullanım Şartları',\n  'footer.help': 'Yardım Merkezi',\n  'footer.rights': 'Tüm hakları saklıdır.',\n\n  // Landing\n  'landing.nav.features': 'Özellikler',\n  'landing.nav.how': 'Nasıl Çalışır',\n  'landing.nav.teachers': 'Öğretmenler',\n  'landing.nav.pricing': 'Fiyatlandırma',\n  'landing.nav.levelTest': 'Seviyeni Ücretsiz Test Et',\n  'landing.nav.signIn': 'Giriş Yap',\n  'landing.nav.getStarted': 'Hemen Başla',\n  'landing.nav.goDashboard': 'Panele Git',\n\n  'landing.hero.title1': 'İngilizceyi',\n  'landing.hero.title2': 'Uzman Öğretmenlerle Öğrenin',\n  'landing.hero.subtitle': 'Canlı dersler, kişiselleştirilmiş öğrenme ve kanıtlanmış yöntemlerle binlerce öğrenci arasına katılın.',\n  'landing.hero.start': 'Ücretsiz Başla',\n  'landing.hero.demo': 'Demoyu İzle',\n\n  'landing.features.title': 'Neden Verbfy?',\n  'landing.features.subtitle': 'Platformumuz, ileri teknoloji ile kanıtlanmış öğretim yöntemlerini birleştirir.',\n  'landing.feature.liveTalk.title': 'Canlı VerbfyTalk Odaları',\n  'landing.feature.liveTalk.desc': 'LiveKit destekli düşük gecikmeli ses/görüntü ile gerçek zamanlı konuşma pratiği.',\n  'landing.feature.aiLearning.title': 'YZ Öğrenme Asistanı',\n  'landing.feature.aiLearning.desc': 'Kişiselleştirilmiş öneriler, geri bildirim ve uyarlanabilir oturumlar.',\n  'landing.feature.lessons.title': 'Verbfy Dersleri',\n  'landing.feature.lessons.desc': 'CEFR uyumlu, gerçek yaşam senaryolarıyla kurgulanmış ders akışları.',\n  'landing.feature.freeMaterials.title': 'Ücretsiz Materyaller',\n  'landing.feature.freeMaterials.desc': 'Özenle hazırlanmış materyaller, alıştırmalar ve indirmeler.',\n  'landing.feature.cefr.title': 'CEFR Testleri',\n  'landing.feature.cefr.desc': 'İlerlemenizi doğru izlemek için yerleştirme ve pratik testler.',\n  'landing.feature.analytics.title': 'İlerleme Analitiği',\n  'landing.feature.analytics.desc': 'Beceri, seri ve rozetlerinizi net panolarla takip edin.',\n\n  // Featured materials\n  'landing.featuredMaterials.title': 'Öne Çıkan Materyaller',\n  'landing.featuredMaterials.subtitle': 'Becerilerinizi geliştirecek özenle seçilmiş ücretsiz kaynaklar',\n  'landing.featuredMaterials.viewAll': 'Tümünü gör',\n\n  'landing.how.title': 'Nasıl Çalışır',\n  'landing.how.subtitle': 'Sadece dört adımda Verbfy ile başlayın.',\n  'landing.how.step1.title': 'Kayıt Ol',\n  'landing.how.step1.desc': 'Ücretsiz hesabınızı oluşturun ve profilinizi tamamlayın.',\n  'landing.how.step2.title': 'Öğretmen Seç',\n  'landing.how.step2.desc': 'Hedeflerinize ve programınıza uygun öğretmeni bulun.',\n  'landing.how.step3.title': 'Ders Ayırt',\n  'landing.how.step3.desc': 'Size uyan zamanı seçin ve anında ayırtın.',\n  'landing.how.step4.title': 'Öğrenmeye Başla',\n  'landing.how.step4.desc': 'Canlı oturumlara katılın ve uyarlanabilir yolunuzu izleyin.',\n\n  'landing.teachers.title': 'Uzman Öğretmenlerimizle Tanışın',\n  'landing.teachers.subtitle': 'Başarı kanıtlı, sertifikalı İngilizce öğretmenleri.',\n  'landing.teachers.book': 'Ders Ayırt',\n\n  'landing.pricing.title': 'Planını Seç',\n  'landing.pricing.subtitle': 'Hedeflerinize ve bütçenize uygun esnek paketler.',\n  'landing.pricing.popular': 'En Popüler',\n  'landing.pricing.cta': 'Hemen Başla',\n\n  // Pricing details (TR)\n  'pricing.monthly.name': 'Aylık Üyelik',\n  'pricing.monthly.badge': 'Hediye 1 Token',\n  'pricing.monthly.f1': 'Sınırsız platform erişimi',\n  'pricing.monthly.f2': 'Tüm ücretsiz materyaller',\n  'pricing.monthly.f3': 'Topluluk özellikleri',\n  'pricing.monthly.f4': '1 VerbfyToken hediyeli (25 dk 1:1 ders)',\n  'pricing.yearly.name': 'Yıllık Üyelik',\n  'pricing.yearly.badge': 'En İyi Seçim • 12 Token Hediye',\n  'pricing.yearly.f1': 'Aylık paketteki her şey',\n  'pricing.yearly.f2': 'Öncelikli destek',\n  'pricing.yearly.f3': '12 VerbfyToken hediyeli (12×25 dk 1:1 ders)',\n  'pricing.token.name': 'VerbfyToken (Eklenti)',\n  'pricing.token.title': '1 Token = 25 dk Bire bir Özel Ders',\n  'pricing.token.f1': 'Her 25 dakikalık Bire bir Özel Ders için 1 token harcanır',\n  'pricing.token.f2': 'Token paketleri aktif abonelere sunulur',\n  'pricing.token.f3': 'Satın alma abonelik sonrası yapılır',\n\n  'landing.cta.title': 'İngilizce Yolculuğuna Hazır mısınız?',\n  'landing.cta.subtitle': 'Verbfy’e güvenen binlerce öğrenciye katılın.',\n  'landing.cta.start': 'Ücretsiz Başla',\n  'landing.cta.learnMore': 'Daha Fazla Bilgi',\n\n  // Testimonials & FAQ\n  'landing.testimonials.title': 'Öğrenciler ne diyor',\n  'landing.testimonials.q1': 'Verbfy iş toplantılarında konuşma özgüvenimi artırdı.',\n  'landing.testimonials.a1': 'Aylin, Ürün Yöneticisi',\n  'landing.testimonials.q2': 'YZ önerileri düzenli kalmama ve gelişmeme yardımcı oldu.',\n  'landing.testimonials.a2': 'Deniz, Üniversite Öğrencisi',\n  'landing.testimonials.q3': 'Canlı dersler çok etkileyici ve pratikti.',\n  'landing.testimonials.a3': 'Emre, Yazılım Mühendisi',\n  'landing.faq.title': 'Sık sorulan sorular',\n  'landing.faq.q1': 'Canlı dersler nasıl çalışır?',\n  'landing.faq.a1': 'LiveKit destekli VerbfyTalk üzerinden öğretmenlerle planlı oturumlara katılın.',\n  'landing.faq.q2': 'Ücretsiz öğrenebilir miyim?',\n  'landing.faq.a2': 'Evet, yüzlerce ücretsiz materyal ve topluluk oturumu keşfedebilirsiniz.',\n  'landing.faq.q3': 'Verbfy yeni başlayanlar için uygun mu?',\n  'landing.faq.a3': 'Kesinlikle. CEFR uyumlu modüllerimiz A1’den C2’ye kadar kapsar.',\n  'landing.faq.q4': 'Sertifika veriyor musunuz?',\n  'landing.faq.a4': 'Evet, yol haritalarını tamamladığınızda paylaşılabilir sertifikalar verilir.',\n\n  // Stats labels\n  'landing.stats.learners': 'Aktif öğrenci',\n  'landing.stats.lessons': 'Gerçekleştirilen canlı ders',\n  'landing.stats.teachers': 'Uzman öğretmen',\n  'landing.stats.rating': 'Ortalama puan',\n\n  // Footer blocks\n  'footer.blurb': 'Yenilikçi teknoloji ve uzman öğretimle dünyanın dört bir yanında İngilizce öğrenmeyi güçlendiriyoruz.',\n  'footer.product': 'Ürün',\n  'footer.company': 'Şirket',\n  'footer.support': 'Destek',\n  'footer.links.features': 'Özellikler',\n  'footer.links.pricing': 'Fiyatlandırma',\n  'footer.links.teachers': 'Öğretmenler',\n  'footer.links.materials': 'Materyaller',\n  'footer.links.about': 'Hakkımızda',\n  'footer.links.careers': 'Kariyer',\n  'footer.links.blog': 'Blog',\n  'footer.links.contact': 'İletişim',\n  'footer.cookie': 'Çerez Politikası',\n\n  // Verbfy suite descriptions\n  'suite.title': 'Dili tüm boyutlarıyla öğrenin.',\n  'suite.subtitle': 'Konuşma, dinleme, yazma, okuma, dil bilgisi ve sınav hazırlığı için özel olarak tasarlanmış modüller.',\n  'suite.more': 'Detay',\n  'suite.talk': 'Canlı konuşma odaları, doğal diyaloglar ve anlık geri bildirimle akıcılığınızı artırın.',\n  'suite.listen': 'Podcast’ler, günlük diyaloglar ve aksan çeşitliliğiyle gerçek hayata yakın dinleme pratiği.',\n  'suite.write': 'Yazma görevleri, şablonlar ve yapay zekâ destekli geri bildirimle daha etkili yazın.',\n  'suite.read': 'Seviyeye uygun metinler, kelime çalışmaları ve anlama sorularıyla okuma becerinizi geliştirin.',\n  'suite.grammar': 'Konu anlatımı, etkileşimli alıştırmalar ve pekiştirme testleriyle dil bilgisini sistemli öğrenin.',\n  'suite.exam': 'CEFR uyumlu denemeler, zamanlı sınavlar ve ayrıntılı performans analiziyle hedef puanınıza hazırlanın.',\n\n  // Common\n  'common.loading': 'Yükleniyor...',\n  'common.delete': 'Sil',\n  'common.save': 'Kaydet',\n  'common.cancel': 'İptal',\n  'common.preview': 'Önizleme',\n  'common.submitting': 'Gönderiliyor...',\n\n  // Home\n  'home.title': 'Ana Sayfa',\n  'home.stats.unread': 'Okunmamış bildirim',\n  'home.stats.upcoming': 'Yaklaşan dersler',\n  'home.stats.rooms': 'Açık konuşma odaları',\n  'home.stats.materials': 'Öne çıkan materyaller',\n  'home.shortcut.teachers': 'Öğretmen Bul',\n  'home.shortcut.talk': 'VerbfyTalk’a Katıl',\n  'home.shortcut.materials': 'Ücretsiz Materyaller',\n  'home.shortcut.cefr': 'CEFR Testleri',\n  'home.upcoming': 'Yaklaşan derslerin',\n  'home.viewAll': 'Tümünü gör',\n  'home.upcomingEmpty': 'Yaklaşan ders yok',\n  'home.materialsEmpty': 'Öne çıkan materyal yok',\n  'home.rooms': 'Açık VerbfyTalk odaları',\n  'home.roomsEmpty': 'Şu anda oda yok',\n  'home.lesson': 'Ders',\n  'home.manage': 'Yönet',\n  'home.room': 'Oda',\n  'home.private': 'Özel',\n  'home.public': 'Genel',\n\n  // Teachers\n  'teachers.title': 'Öğretmen Bul',\n  'teachers.search': 'Öğretmen ara',\n  'teachers.empty': 'Öğretmen bulunamadı',\n  'teachers.detail': 'Öğretmen',\n  'teachers.availability': 'Müsaitlik (7 gün)',\n  'teachers.noSlots': 'Uygun saat yok',\n  'teachers.selected': 'Seçilen',\n  'teachers.book': 'Ders Ayırt',\n  'teachers.booked': 'Rezervasyon oluşturuldu',\n  'teachers.bookError': 'Rezervasyon oluşturulamadı',\n\n  // Teacher schedule\n  'tschedule.title': 'Programım',\n  'tschedule.add': 'Müsait saat ekle',\n  'tschedule.date': 'Tarih',\n  'tschedule.time': 'Saat',\n  'tschedule.duration': 'Süre (dk)',\n  'tschedule.addBtn': 'Slot Ekle',\n  'tschedule.list': 'Yaklaşan müsaitlikler',\n  'tschedule.empty': 'Henüz müsaitlik yok',\n\n  // Teacher materials\n  'tmaterials.title': 'Materyallerim',\n  'tmaterials.upload': 'Yeni materyal yükle',\n  'tmaterials.titleLabel': 'Başlık',\n  'tmaterials.level': 'Seviye',\n  'tmaterials.category': 'Kategori',\n  'tmaterials.description': 'Açıklama',\n  'tmaterials.file': 'Dosya',\n  'tmaterials.uploadBtn': 'Yükle',\n  'tmaterials.edit': 'Materyali Düzenle',\n\n  // Teacher students\n  'tstudents.title': 'Öğrencilerim',\n  'tstudents.empty': 'Henüz öğrenci yok',\n\n  // Teacher earnings\n  'tearnings.title': 'Kazançlar',\n  'tearnings.empty': 'Henüz kazanç yok',\n  'tearnings.total': 'Toplam Kazanç',\n  'tearnings.month': 'Bu Ay',\n  'tearnings.sessions': 'Ücretli Oturum',\n\n  // VerbfyTalk actions\n  'talk.join': 'Odaya Katıl',\n  'talk.joining': 'Katılıyor...',\n\n  // Admin common\n  'admin.search': 'Ara...',\n  'admin.all': 'Tümü',\n  'admin.pending': 'Beklemede',\n  'admin.approved': 'Onaylı',\n  'admin.rejected': 'Reddedildi',\n  'admin.actions': 'Aksiyonlar',\n  'admin.name': 'Ad',\n  'admin.email': 'E‑posta',\n  'admin.user': 'Kullanıcı',\n  'admin.created': 'Oluşturulma',\n  'admin.delete': 'Sil',\n  'admin.refund': 'İade',\n  'admin.prev': 'Önceki',\n  'admin.next': 'Sonraki',\n  'admin.page': 'Sayfa',\n  'admin.role': 'Rol',\n  'admin.status': 'Durum',\n  'admin.refresh': 'Yenile',\n  'admin.student': 'Öğrenci',\n  'admin.teacher': 'Öğretmen',\n  'admin.admin': 'Admin',\n  'admin.approve': 'Onayla',\n  'admin.reject': 'Reddet',\n\n  // Admin pages\n  'admin.materials.title': 'Admin • Materyaller',\n  'admin.materials.titleCol': 'Başlık',\n  'admin.materials.level': 'Seviye',\n  'admin.materials.category': 'Kategori',\n  'admin.materials.uploader': 'Yükleyen',\n  'admin.materials.status': 'Durum',\n  'admin.materials.approve': 'Onayla',\n  'admin.materials.reject': 'Onayı Kaldır',\n  'admin.materials.empty': 'Materyal yok',\n\n  'admin.payments.title': 'Admin • Ödemeler',\n  'admin.payments.amount': 'Tutar',\n  'admin.succeeded': 'Başarılı',\n  'admin.refunded': 'İade Edildi',\n  'admin.failed': 'Başarısız',\n  'admin.payments.empty': 'Ödeme yok',\n\n  'admin.logs.title': 'Admin • Loglar',\n  'admin.logs.empty': 'Log yok',\n\n  'admin.users.title': 'Kullanıcı Yönetimi',\n  'admin.users.pending': 'Bekleyen Öğretmen Başvuruları',\n  'admin.users.noPending': 'Bekleyen başvuru yok',\n  'admin.users.all': 'Tüm Kullanıcılar',\n  'admin.users.empty': 'Kullanıcı bulunamadı',\n\n  // Reservations\n  'reservations.title': 'Rezervasyonlarım',\n  'reservations.empty': 'Rezervasyon yok',\n\n  // Materials\n  'materials.title': 'Ücretsiz Materyaller',\n  'materials.search': 'Materyal ara',\n  'materials.empty': 'Materyal bulunamadı',\n\n  // VerbfyTalk\n  'talk.title': 'VerbfyTalk Odaları',\n  'talk.empty': 'Uygun oda yok',\n};\n\nconst messagesByLocale: Record<Locale, Messages> = { en, tr };\n\nexport function I18nProvider({ children }: { children: React.ReactNode }) {\n  const [locale, setLocale] = useState<Locale>('en');\n\n  useEffect(() => {\n    const saved = typeof window !== 'undefined' ? (localStorage.getItem('locale') as Locale | null) : null;\n    if (saved && (saved === 'en' || saved === 'tr')) {\n      setLocale(saved);\n    } else if (typeof navigator !== 'undefined') {\n      const lang = navigator.language?.toLowerCase() || '';\n      if (lang.startsWith('tr')) setLocale('tr');\n    }\n  }, []);\n\n  const value = useMemo<I18nContextValue>(() => ({\n    locale,\n    setLocale: (loc: Locale) => {\n      setLocale(loc);\n      if (typeof window !== 'undefined') localStorage.setItem('locale', loc);\n    },\n    t: (key: string, fallback?: string) => messagesByLocale[locale][key] ?? fallback ?? key,\n  }), [locale]);\n\n  return <I18nContext.Provider value={value}>{children}</I18nContext.Provider>;\n}\n\nexport function useI18n() {\n  const ctx = useContext(I18nContext);\n  if (!ctx) throw new Error('useI18n must be used within I18nProvider');\n  return ctx;\n}\n\n\n","/**\n * Secure storage utility for handling sensitive data\n * Uses httpOnly cookies when possible, falls back to sessionStorage for client-side\n */\n\nconst TOKEN_KEY = 'verbfy_token';\nconst USER_KEY = 'verbfy_user';\n\n// Check if we're in a browser environment\nconst isBrowser = typeof window !== 'undefined';\n\n// Check if cookies are supported\nconst areCookiesSupported = (): boolean => {\n  if (!isBrowser) return false;\n  \n  try {\n    document.cookie = 'test=1';\n    const hasCookie = document.cookie.indexOf('test=') !== -1;\n    document.cookie = 'test=1; expires=Thu, 01 Jan 1970 00:00:00 GMT';\n    return hasCookie;\n  } catch {\n    return false;\n  }\n};\n\n// Secure storage interface\ninterface SecureStorage {\n  setItem(key: string, value: string): void;\n  getItem(key: string): string | null;\n  removeItem(key: string): void;\n  clear(): void;\n}\n\n// Cookie-based storage (more secure)\nclass CookieStorage implements SecureStorage {\n  setItem(key: string, value: string): void {\n    if (!isBrowser) return;\n    \n    const expires = new Date();\n    expires.setTime(expires.getTime() + (7 * 24 * 60 * 60 * 1000)); // 7 days\n    \n    document.cookie = `${key}=${encodeURIComponent(value)}; expires=${expires.toUTCString()}; path=/; SameSite=Strict; Secure`;\n  }\n  \n  getItem(key: string): string | null {\n    if (!isBrowser) return null;\n    \n    const nameEQ = key + '=';\n    const ca = document.cookie.split(';');\n    \n    for (let i = 0; i < ca.length; i++) {\n      let c = ca[i];\n      while (c.charAt(0) === ' ') c = c.substring(1, c.length);\n      if (c.indexOf(nameEQ) === 0) {\n        return decodeURIComponent(c.substring(nameEQ.length, c.length));\n      }\n    }\n    \n    return null;\n  }\n  \n  removeItem(key: string): void {\n    if (!isBrowser) return;\n    \n    document.cookie = `${key}=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/`;\n  }\n  \n  clear(): void {\n    if (!isBrowser) return;\n    \n    const cookies = document.cookie.split(';');\n    \n    for (let i = 0; i < cookies.length; i++) {\n      const cookie = cookies[i];\n      const eqPos = cookie.indexOf('=');\n      const name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;\n      document.cookie = `${name}=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/`;\n    }\n  }\n}\n\n// SessionStorage-based storage (fallback)\nclass SessionStorage implements SecureStorage {\n  setItem(key: string, value: string): void {\n    if (!isBrowser) return;\n    \n    try {\n      sessionStorage.setItem(key, value);\n    } catch (error) {\n      console.warn('SessionStorage not available, falling back to memory storage');\n      // Fallback to memory storage (will be lost on page refresh)\n      (window as any).__verbfy_memory_storage = (window as any).__verbfy_memory_storage || {};\n      (window as any).__verbfy_memory_storage[key] = value;\n    }\n  }\n  \n  getItem(key: string): string | null {\n    if (!isBrowser) return null;\n    \n    try {\n      return sessionStorage.getItem(key);\n    } catch (error) {\n      // Fallback to memory storage\n      return (window as any).__verbfy_memory_storage?.[key] || null;\n    }\n  }\n  \n  removeItem(key: string): void {\n    if (!isBrowser) return;\n    \n    try {\n      sessionStorage.removeItem(key);\n    } catch (error) {\n      // Fallback to memory storage\n      if ((window as any).__verbfy_memory_storage) {\n        delete (window as any).__verbfy_memory_storage[key];\n      }\n    }\n  }\n  \n  clear(): void {\n    if (!isBrowser) return;\n    \n    try {\n      sessionStorage.clear();\n    } catch (error) {\n      // Fallback to memory storage\n      (window as any).__verbfy_memory_storage = {};\n    }\n  }\n}\n\n// Choose the best available storage method\nconst storage: SecureStorage = areCookiesSupported() ? new CookieStorage() : new SessionStorage();\n\n// Token management functions\nexport const tokenStorage = {\n  setToken: (token: string): void => {\n    storage.setItem(TOKEN_KEY, token);\n  },\n  \n  getToken: (): string | null => {\n    return storage.getItem(TOKEN_KEY);\n  },\n  \n  removeToken: (): void => {\n    storage.removeItem(TOKEN_KEY);\n  },\n  \n  setUser: (user: any): void => {\n    storage.setItem(USER_KEY, JSON.stringify(user));\n  },\n  \n  getUser: (): any => {\n    const userStr = storage.getItem(USER_KEY);\n    if (!userStr) return null;\n    \n    try {\n      return JSON.parse(userStr);\n    } catch {\n      return null;\n    }\n  },\n  \n  removeUser: (): void => {\n    storage.removeItem(USER_KEY);\n  },\n  \n  clear: (): void => {\n    storage.clear();\n  }\n};\n\n// Legacy compatibility functions (for backward compatibility)\nexport const getStoredToken = (): string | null => {\n  return tokenStorage.getToken();\n};\n\nexport const setStoredToken = (token: string): void => {\n  tokenStorage.setToken(token);\n};\n\nexport const removeStoredToken = (): void => {\n  tokenStorage.removeToken();\n}; ","// extracted by mini-css-extract-plugin"],"names":["window","__NEXT_P","push","__webpack_require__","_sentryCollisionFreeGlobalObject","undefined","Sentry","dsn","process","tracesSampleRate","replaysOnErrorSampleRate","replaysSessionSampleRate","App","param","Component","pageProps","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","I18nProvider","AuthProvider","ToastProvider","ChatProvider","NotificationProvider","AdminProvider","ToastContext","createContext","children","toasts","setToasts","useState","showToast","type","message","duration","id","Math","random","toString","substring","newToast","prev","setTimeout","removeToast","filter","toast","jsxs","Provider","value","success","error","warning","info","ToastContainer","useToast","context","useContext","length","div","className","map","ToastItem","onRemove","styles","getToastStyles","icon","bgColor","borderColor","textColor","iconColor","concat","role","aria-live","p","button","onClick","aria-label","svg","fill","viewBox","stroke","path","strokeLinecap","strokeLinejoin","strokeWidth","d","console","warn","initialState","overview","overviewLoading","users","usersLoading","usersPagination","selectedUser","materials","materialsLoading","materialsPagination","selectedMaterial","payments","paymentsLoading","paymentsPagination","selectedPayment","logs","logsLoading","logsPagination","userFilters","materialFilters","paymentFilters","logFilters","adminReducer","state","action","payload","pagination","user","_id","material","payment","AdminContext","dispatch","useReducer","loadOverview","response","adminAPI","getOverview","data","loadUsers","page","filters","params","limit","getUsers","loadUserById","getUserById","updateUserRole","updateUserStatus","status","deleteUser","loadMaterials","getMaterials","approveMaterial","approved","deleteMaterial","loadPayments","getPayments","refundPayment","loadLogs","getLogs","setSelectedUser","setUserFilters","setSelectedMaterial","setMaterialFilters","setSelectedPayment","setPaymentFilters","setLogFilters","useAdmin","AuthContext","setUser","isLoading","setIsLoading","router","useRouter","useEffect","loadUser","token","tokenStorage","getToken","authAPI","getCurrentUser","userData","userWithId","clear","login","email","password","accessToken","provided","setToken","_error","register","newUser","logout","refreshUser","updatedUser","isAuthenticated","loading","setAccessToken","useAuth","useAuthContext","useRoleGuard","allowedRoles","includes","hasAccess","conversations","currentConversation","messages","unreadCount","typingUsers","Set","chatReducer","conv","conversationId","lastMessage","content","sender","timestamp","createdAt","updatedAt","newTypingUsers","isTyping","add","userId","delete","ChatContext","showError","showSuccess","socketRef","useRef","typingTimeoutRef","socket","io","env","NEXT_PUBLIC_API_BASE_URL","auth","current","on","log","disconnect","loadConversations","api","get","errorMessage","loadMessages","sendMessage","post","emit","markAsRead","patch","setTyping","clearTimeout","loadUnreadCount","actions","joinConversation","leaveConversation","useChat","notifications","total","pages","notificationReducer","notification","isRead","readAt","Date","toISOString","max","NotificationContext","fetchNotifications","URLSearchParams","Object","entries","forEach","key","append","markAllAsRead","deleteNotification","addNotification","config","getNotificationConfig","configs","reservation","admin","lesson","system","title","body","style","background","color","getUnreadCount","socketUrl","off","interval","setInterval","clearInterval","useNotifications","_api_interceptors","_api_interceptors1","_axios_create","axios__WEBPACK_IMPORTED_MODULE_1__","Z","create","call","axios","baseURL","timeout","withCredentials","headers","e","interceptors","request","use","Authorization","isWrite","method","toLowerCase","document","match","cookie","csrf","decodeURIComponent","uuidv4","Promise","reject","location","pathname","href","credentials","then","r","refreshToken","userAPI","getProfile","updateProfile","put","uploadAvatar","form","FormData","file","getPresignedUploadUrl","contentType","reservationAPI","getReservations","createReservation","updateReservation","deleteReservation","availabilityAPI","getAvailability","teacherId","setAvailability","updateAvailability","deleteAvailability","notificationAPI","getNotifications","paymentAPI","createCheckoutSession","getPaymentHistory","getProducts","getPaymentStats","paymentId","getStats","getActivities","verbfyTalkAPI","getRooms","level","isPrivate","getUserRooms","createRoom","roomData","getRoomDetails","roomId","joinRoom","joinData","leaveRoom","updateRoom","deleteRoom","freeMaterialsAPI","category","search","sortBy","sortOrder","featured","getFeaturedMaterials","getCategories","getLevels","getMaterial","uploadMaterial","materialData","formData","description","tags","isFeatured","rateMaterial","rating","updateMaterial","downloadMaterial","responseType","verbfyLessonsAPI","getLessons","getLesson","createLesson","updateLesson","deleteLesson","startLesson","lessonId","submitLesson","attemptId","cefrTestsAPI","getTests","getTest","testId","startTest","submitTest","getTestAttempt","getTestStats","getPlacementRecommendation","seedGlobalPlacement","seedKidsA1B1","seedAdultsA1B2","seedAdvancedB1C2","personalizedCurriculumAPI","createCurriculum","getCurriculum","updateProgress","updateStudySchedule","getAnalytics","getRecommendations","completeRecommendation","recommendationId","getStudySchedule","addStudySession","completeStudySession","sessionId","setApiAccessToken","localStorage","setItem","gamesAPI","list","aiLearningAPI","createSession","getAIResponse","getSessions","updateSessionProgress","generateRecommendations","getSessionAnalytics","adaptiveLearningAPI","createPath","getPaths","getPath","pathId","updateModuleProgress","getPathAnalytics","teacherAnalyticsAPI","generateAnalytics","getStudentPerformance","getLessonAnalytics","getEngagementMetrics","aiFeaturesAPI","startTutoringSession","sendTutoringMessage","endTutoringSession","getTutoringSessions","getTutoringSession","generateContent","getGeneratedContent","getContent","contentId","reviewContent","updateContent","deleteContent","getUserProgress","getModelInfo","updateModelSettings","__webpack_exports__","ZP","I18nContext","messagesByLocale","en","tr","locale","setLocale","saved","getItem","navigator","lang","language","startsWith","useMemo","loc","t","fallback","useI18n","ctx","TOKEN_KEY","USER_KEY","CookieStorage","expires","setTime","getTime","encodeURIComponent","toUTCString","nameEQ","ca","split","i","c","charAt","indexOf","removeItem","cookies","eqPos","name","substr","SessionStorage","sessionStorage","__verbfy_memory_storage","_window___verbfy_memory_storage","storage","areCookiesSupported","hasCookie","removeToken","JSON","stringify","getUser","userStr","parse","removeUser"],"sourceRoot":""}