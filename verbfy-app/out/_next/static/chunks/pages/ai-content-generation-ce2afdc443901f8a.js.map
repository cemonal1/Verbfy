{"version":3,"file":"static/chunks/pages/ai-content-generation-ce2afdc443901f8a.js","mappings":"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","sources":["webpack://_N_E/?c97c","webpack://_N_E/./src/features/aiFeatures/view/AIContentGenerationTools.tsx","webpack://_N_E/./pages/ai-content-generation/index.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/ai-content-generation\",\n      function () {\n        return require(\"private-next-pages/ai-content-generation/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/ai-content-generation\"])\n      });\n    }\n  ","import React, { useState, useEffect } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport { AIContentGeneration, AIContentGenerationRequest } from '@/types/aiFeatures';\r\nimport { aiFeaturesAPI } from '@/lib/api';\r\nimport { useAuthContext } from '@/context/AuthContext';\r\n\r\ninterface AIContentGenerationToolsProps {\r\n  userRole: 'teacher' | 'admin';\r\n}\r\n\r\nexport const AIContentGenerationTools: React.FC<AIContentGenerationToolsProps> = ({\r\n  userRole\r\n}) => {\r\n  const router = useRouter();\r\n  const { user } = useAuthContext();\r\n  const [generatedContent, setGeneratedContent] = useState<AIContentGeneration[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [generating, setGenerating] = useState(false);\r\n  const [selectedContent, setSelectedContent] = useState<AIContentGeneration | null>(null);\r\n  const [showPreview, setShowPreview] = useState(false);\r\n\r\n  // Form state\r\n  const [formData, setFormData] = useState<AIContentGenerationRequest>({\r\n    type: 'lesson',\r\n    title: '',\r\n    description: '',\r\n    cefrLevel: 'A1',\r\n    difficulty: 'Beginner',\r\n    category: '',\r\n    subcategory: '',\r\n    learningObjectives: [''],\r\n    estimatedDuration: 30,\r\n    tags: [],\r\n    customPrompt: '',\r\n    includeExercises: true,\r\n    includeVocabulary: true,\r\n    includeGrammar: true,\r\n    includeAudio: false,\r\n    includeImages: false\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchGeneratedContent();\r\n  }, []);\r\n\r\n  const fetchGeneratedContent = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await aiFeaturesAPI.getGeneratedContent({\r\n        page: 1,\r\n        limit: 20\r\n      });\r\n      setGeneratedContent(response.content);\r\n    } catch (error) {\r\n      console.error('Error fetching generated content:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (field: keyof AIContentGenerationRequest, value: any) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      [field]: value\r\n    }));\r\n  };\r\n\r\n  const handleLearningObjectiveChange = (index: number, value: string) => {\r\n    const newObjectives = [...formData.learningObjectives];\r\n    newObjectives[index] = value;\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      learningObjectives: newObjectives\r\n    }));\r\n  };\r\n\r\n  const addLearningObjective = () => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      learningObjectives: [...prev.learningObjectives, '']\r\n    }));\r\n  };\r\n\r\n  const removeLearningObjective = (index: number) => {\r\n    if (formData.learningObjectives.length > 1) {\r\n      const newObjectives = formData.learningObjectives.filter((_, i) => i !== index);\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        learningObjectives: newObjectives\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleTagChange = (value: string) => {\r\n    const tags = value.split(',').map(tag => tag.trim()).filter(tag => tag);\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      tags\r\n    }));\r\n  };\r\n\r\n  const generateContent = async () => {\r\n    try {\r\n      setGenerating(true);\r\n      const response = await aiFeaturesAPI.generateContent(formData);\r\n      \r\n      // Add the new content to the list\r\n      setGeneratedContent(prev => [response.content, ...prev]);\r\n      \r\n      // Reset form\r\n      setFormData({\r\n        type: 'lesson',\r\n        title: '',\r\n        description: '',\r\n        cefrLevel: 'A1',\r\n        difficulty: 'Beginner',\r\n        category: '',\r\n        subcategory: '',\r\n        learningObjectives: [''],\r\n        estimatedDuration: 30,\r\n        tags: [],\r\n        customPrompt: '',\r\n        includeExercises: true,\r\n        includeVocabulary: true,\r\n        includeGrammar: true,\r\n        includeAudio: false,\r\n        includeImages: false\r\n      });\r\n      \r\n      // Show success message\r\n      alert('Content generated successfully!');\r\n    } catch (error) {\r\n      console.error('Error generating content:', error);\r\n      alert('Error generating content. Please try again.');\r\n    } finally {\r\n      setGenerating(false);\r\n    }\r\n  };\r\n\r\n  const handleReviewContent = async (contentId: string, status: 'approved' | 'rejected', notes?: string) => {\r\n    try {\r\n      await aiFeaturesAPI.reviewContent(contentId, { status, notes });\r\n      fetchGeneratedContent();\r\n    } catch (error) {\r\n      console.error('Error reviewing content:', error);\r\n    }\r\n  };\r\n\r\n  const getContentTypeIcon = (type: string) => {\r\n    const icons = {\r\n      lesson: '📚',\r\n      exercise: '✏️',\r\n      story: '📖',\r\n      dialogue: '💬',\r\n      quiz: '❓',\r\n      material: '📄'\r\n    };\r\n    return icons[type as keyof typeof icons] || '📊';\r\n  };\r\n\r\n  const getReviewStatusColor = (status: string) => {\r\n    const colors = {\r\n      pending: 'bg-yellow-100 text-yellow-800',\r\n      approved: 'bg-green-100 text-green-800',\r\n      rejected: 'bg-red-100 text-red-800',\r\n      needs_revision: 'bg-orange-100 text-orange-800'\r\n    };\r\n    return colors[status as keyof typeof colors] || 'bg-gray-100 text-gray-800';\r\n  };\r\n\r\n  const getLevelColor = (level: string) => {\r\n    const colors = {\r\n      A1: 'bg-red-100 text-red-800',\r\n      A2: 'bg-orange-100 text-orange-800',\r\n      B1: 'bg-yellow-100 text-yellow-800',\r\n      B2: 'bg-green-100 text-green-800',\r\n      C1: 'bg-blue-100 text-blue-800',\r\n      C2: 'bg-purple-100 text-purple-800'\r\n    };\r\n    return colors[level as keyof typeof colors] || 'bg-gray-100 text-gray-800';\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\r\n          <p className=\"text-gray-600\">Loading content generation tools...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 py-8\">\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        {/* Header */}\r\n        <div className=\"bg-white rounded-lg shadow-md p-6 mb-6\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <h1 className=\"text-2xl font-bold text-gray-900\">AI Content Generation</h1>\r\n              <p className=\"text-gray-600 mt-1\">\r\n                Generate high-quality learning content using AI\r\n              </p>\r\n            </div>\r\n            <div className=\"text-sm text-gray-500\">\r\n              AI Model: GPT-4 | Version: 1.0\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\r\n          {/* Generation Form */}\r\n          <div className=\"bg-white rounded-lg shadow-md p-6\">\r\n            <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">Generate New Content</h2>\r\n            \r\n            <div className=\"space-y-4\">\r\n              {/* Content Type */}\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Content Type\r\n                </label>\r\n                <select\r\n                  value={formData.type}\r\n                  onChange={(e) => handleInputChange('type', e.target.value)}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                >\r\n                  <option value=\"lesson\">Lesson</option>\r\n                  <option value=\"exercise\">Exercise</option>\r\n                  <option value=\"story\">Story</option>\r\n                  <option value=\"dialogue\">Dialogue</option>\r\n                  <option value=\"quiz\">Quiz</option>\r\n                  <option value=\"material\">Material</option>\r\n                </select>\r\n              </div>\r\n\r\n              {/* Title */}\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Title\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={formData.title}\r\n                  onChange={(e) => handleInputChange('title', e.target.value)}\r\n                  placeholder=\"Enter content title...\"\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                />\r\n              </div>\r\n\r\n              {/* Description */}\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Description\r\n                </label>\r\n                <textarea\r\n                  value={formData.description}\r\n                  onChange={(e) => handleInputChange('description', e.target.value)}\r\n                  placeholder=\"Describe the content...\"\r\n                  rows={3}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                />\r\n              </div>\r\n\r\n              {/* CEFR Level and Difficulty */}\r\n              <div className=\"grid grid-cols-2 gap-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                    CEFR Level\r\n                  </label>\r\n                  <select\r\n                    value={formData.cefrLevel}\r\n                    onChange={(e) => handleInputChange('cefrLevel', e.target.value)}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  >\r\n                    <option value=\"A1\">A1 - Beginner</option>\r\n                    <option value=\"A2\">A2 - Elementary</option>\r\n                    <option value=\"B1\">B1 - Intermediate</option>\r\n                    <option value=\"B2\">B2 - Upper Intermediate</option>\r\n                    <option value=\"C1\">C1 - Advanced</option>\r\n                    <option value=\"C2\">C2 - Proficient</option>\r\n                  </select>\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                    Difficulty\r\n                  </label>\r\n                  <select\r\n                    value={formData.difficulty}\r\n                    onChange={(e) => handleInputChange('difficulty', e.target.value)}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  >\r\n                    <option value=\"Beginner\">Beginner</option>\r\n                    <option value=\"Intermediate\">Intermediate</option>\r\n                    <option value=\"Advanced\">Advanced</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Category and Subcategory */}\r\n              <div className=\"grid grid-cols-2 gap-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                    Category\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={formData.category}\r\n                    onChange={(e) => handleInputChange('category', e.target.value)}\r\n                    placeholder=\"e.g., Grammar, Vocabulary\"\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                    Subcategory\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={formData.subcategory}\r\n                    onChange={(e) => handleInputChange('subcategory', e.target.value)}\r\n                    placeholder=\"e.g., Present Perfect\"\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {/* Learning Objectives */}\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Learning Objectives\r\n                </label>\r\n                {formData.learningObjectives.map((objective, index) => (\r\n                  <div key={index} className=\"flex items-center space-x-2 mb-2\">\r\n                    <input\r\n                      type=\"text\"\r\n                      value={objective}\r\n                      onChange={(e) => handleLearningObjectiveChange(index, e.target.value)}\r\n                      placeholder={`Learning objective ${index + 1}`}\r\n                      className=\"flex-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    />\r\n                    {formData.learningObjectives.length > 1 && (\r\n                      <button\r\n                        onClick={() => removeLearningObjective(index)}\r\n                        className=\"px-2 py-2 text-red-600 hover:bg-red-50 rounded-md\"\r\n                      >\r\n                        ✕\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                ))}\r\n                <button\r\n                  onClick={addLearningObjective}\r\n                  className=\"text-sm text-blue-600 hover:text-blue-700\"\r\n                >\r\n                  + Add Learning Objective\r\n                </button>\r\n              </div>\r\n\r\n              {/* Duration and Tags */}\r\n              <div className=\"grid grid-cols-2 gap-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                    Estimated Duration (minutes)\r\n                  </label>\r\n                  <input\r\n                    type=\"number\"\r\n                    value={formData.estimatedDuration}\r\n                    onChange={(e) => handleInputChange('estimatedDuration', parseInt(e.target.value))}\r\n                    min=\"5\"\r\n                    max=\"180\"\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  />\r\n                </div>\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                    Tags (comma-separated)\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={formData.tags.join(', ')}\r\n                    onChange={(e) => handleTagChange(e.target.value)}\r\n                    placeholder=\"e.g., grammar, present perfect, exercises\"\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {/* Custom Prompt */}\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Custom Prompt (Optional)\r\n                </label>\r\n                <textarea\r\n                  value={formData.customPrompt}\r\n                  onChange={(e) => handleInputChange('customPrompt', e.target.value)}\r\n                  placeholder=\"Add specific instructions for the AI...\"\r\n                  rows={3}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                />\r\n              </div>\r\n\r\n              {/* Content Options */}\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                  Content Options\r\n                </label>\r\n                <div className=\"grid grid-cols-2 gap-4\">\r\n                  <label className=\"flex items-center\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={formData.includeExercises}\r\n                      onChange={(e) => handleInputChange('includeExercises', e.target.checked)}\r\n                      className=\"mr-2\"\r\n                    />\r\n                    Include Exercises\r\n                  </label>\r\n                  <label className=\"flex items-center\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={formData.includeVocabulary}\r\n                      onChange={(e) => handleInputChange('includeVocabulary', e.target.checked)}\r\n                      className=\"mr-2\"\r\n                    />\r\n                    Include Vocabulary\r\n                  </label>\r\n                  <label className=\"flex items-center\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={formData.includeGrammar}\r\n                      onChange={(e) => handleInputChange('includeGrammar', e.target.checked)}\r\n                      className=\"mr-2\"\r\n                    />\r\n                    Include Grammar\r\n                  </label>\r\n                  <label className=\"flex items-center\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={formData.includeAudio}\r\n                      onChange={(e) => handleInputChange('includeAudio', e.target.checked)}\r\n                      className=\"mr-2\"\r\n                    />\r\n                    Include Audio\r\n                  </label>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Generate Button */}\r\n              <button\r\n                onClick={generateContent}\r\n                disabled={generating || !formData.title || !formData.description}\r\n                className=\"w-full bg-blue-600 hover:bg-blue-700 text-white font-medium py-3 px-4 rounded-md transition-colors disabled:opacity-50 disabled:cursor-not-allowed\"\r\n              >\r\n                {generating ? 'Generating...' : 'Generate Content'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Generated Content List */}\r\n          <div className=\"bg-white rounded-lg shadow-md p-6\">\r\n            <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">Generated Content</h2>\r\n            \r\n            <div className=\"space-y-4 max-h-96 overflow-y-auto\">\r\n              {generatedContent.map((content) => (\r\n                <div key={content._id} className=\"border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow\">\r\n                  <div className=\"flex items-start justify-between mb-2\">\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <div className=\"text-xl\">{getContentTypeIcon(content.type)}</div>\r\n                      <div>\r\n                        <h3 className=\"font-medium text-gray-900 line-clamp-1\">{content.title}</h3>\r\n                        <p className=\"text-sm text-gray-500\">{content.category}</p>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"flex space-x-2\">\r\n                      <span className={`px-2 py-1 text-xs font-medium rounded-full ${getLevelColor(content.cefrLevel)}`}>\r\n                        {content.cefrLevel}\r\n                      </span>\r\n                      <span className={`px-2 py-1 text-xs font-medium rounded-full ${getReviewStatusColor(content.reviewStatus)}`}>\r\n                        {content.reviewStatus}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <p className=\"text-sm text-gray-600 line-clamp-2 mb-3\">{content.description}</p>\r\n                  \r\n                  <div className=\"flex items-center justify-between text-sm text-gray-500 mb-3\">\r\n                    <span>Duration: {content.estimatedDuration} min</span>\r\n                    <span>Quality: {content.qualityScore}/10</span>\r\n                  </div>\r\n                  \r\n                  <div className=\"flex items-center justify-between\">\r\n                    <div className=\"flex items-center space-x-2 text-sm text-gray-500\">\r\n                      <span>👁️ {content.usageCount}</span>\r\n                      <span>⭐ {content.averageRating.toFixed(1)}</span>\r\n                    </div>\r\n                    <div className=\"flex space-x-2\">\r\n                      <button\r\n                        onClick={() => {\r\n                          setSelectedContent(content);\r\n                          setShowPreview(true);\r\n                        }}\r\n                        className=\"px-3 py-1 bg-blue-600 text-white text-xs rounded-md hover:bg-blue-700\"\r\n                      >\r\n                        Preview\r\n                      </button>\r\n                      {content.reviewStatus === 'pending' && (\r\n                        <>\r\n                          <button\r\n                            onClick={() => handleReviewContent(content._id, 'approved')}\r\n                            className=\"px-3 py-1 bg-green-600 text-white text-xs rounded-md hover:bg-green-700\"\r\n                          >\r\n                            Approve\r\n                          </button>\r\n                          <button\r\n                            onClick={() => handleReviewContent(content._id, 'rejected')}\r\n                            className=\"px-3 py-1 bg-red-600 text-white text-xs rounded-md hover:bg-red-700\"\r\n                          >\r\n                            Reject\r\n                          </button>\r\n                        </>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n              \r\n              {generatedContent.length === 0 && (\r\n                <div className=\"text-center py-8\">\r\n                  <div className=\"text-gray-400 text-4xl mb-4\">🤖</div>\r\n                  <p className=\"text-gray-500\">No generated content yet</p>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Content Preview Modal */}\r\n        {showPreview && selectedContent && (\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n            <div className=\"bg-white rounded-lg p-6 max-w-4xl w-full mx-4 max-h-[90vh] overflow-y-auto\">\r\n              <div className=\"flex items-center justify-between mb-4\">\r\n                <h2 className=\"text-xl font-semibold text-gray-900\">Content Preview</h2>\r\n                <button\r\n                  onClick={() => setShowPreview(false)}\r\n                  className=\"text-gray-400 hover:text-gray-600\"\r\n                >\r\n                  ✕\r\n                </button>\r\n              </div>\r\n              \r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <h3 className=\"text-lg font-medium text-gray-900\">{selectedContent.title}</h3>\r\n                  <p className=\"text-gray-600\">{selectedContent.description}</p>\r\n                </div>\r\n                \r\n                {selectedContent.content.text && (\r\n                  <div>\r\n                    <h4 className=\"font-medium text-gray-900 mb-2\">Content</h4>\r\n                    <div className=\"prose max-w-none text-sm\">\r\n                      {selectedContent.content.text}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                \r\n                {selectedContent.content.exercises && selectedContent.content.exercises.length > 0 && (\r\n                  <div>\r\n                    <h4 className=\"font-medium text-gray-900 mb-2\">Exercises</h4>\r\n                    <div className=\"space-y-3\">\r\n                      {selectedContent.content.exercises.map((exercise, index) => (\r\n                        <div key={index} className=\"border border-gray-200 rounded-lg p-3\">\r\n                          <p className=\"font-medium mb-2\">{exercise.question}</p>\r\n                          {exercise.options && (\r\n                            <ul className=\"list-disc list-inside text-sm text-gray-600\">\r\n                              {exercise.options.map((option, optIndex) => (\r\n                                <li key={optIndex}>{option}</li>\r\n                              ))}\r\n                            </ul>\r\n                          )}\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n                \r\n                {selectedContent.content.vocabulary && selectedContent.content.vocabulary.length > 0 && (\r\n                  <div>\r\n                    <h4 className=\"font-medium text-gray-900 mb-2\">Vocabulary</h4>\r\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\r\n                      {selectedContent.content.vocabulary.map((vocab, index) => (\r\n                        <div key={index} className=\"border border-gray-200 rounded-lg p-3\">\r\n                          <div className=\"font-medium\">{vocab.word}</div>\r\n                          <div className=\"text-sm text-gray-600\">{vocab.definition}</div>\r\n                          <div className=\"text-sm text-gray-500 italic\">{vocab.example}</div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}; ","import React from 'react';\r\nimport Head from 'next/head';\r\nimport { AIContentGenerationTools } from '../../src/features/aiFeatures/view/AIContentGenerationTools';\r\nimport { useAuthContext } from '@/context/AuthContext';\r\nimport { useRouter } from 'next/router';\r\nimport { useEffect } from 'react';\r\n\r\nexport default function AIContentGenerationPage() {\r\n  const { user, loading } = useAuthContext();\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    if (!loading && !user) {\r\n      router.push('/login');\r\n    }\r\n  }, [user, loading, router]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\r\n          <p className=\"text-gray-600\">Loading...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!user) {\r\n    return null;\r\n  }\r\n\r\n  // Only allow teachers and admins to access this page\r\n  if (user.role !== 'teacher' && user.role !== 'admin') {\r\n    router.push('/unauthorized');\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>AI Content Generation - Verbfy</title>\r\n        <meta name=\"description\" content=\"Generate high-quality learning content using AI\" />\r\n      </Head>\r\n\r\n      <AIContentGenerationTools userRole={user.role as 'teacher' | 'admin'} />\r\n    </>\r\n  );\r\n} "],"names":["window","__NEXT_P","push","__webpack_require__","AIContentGenerationTools","userRole","param","useRouter","user","useAuthContext","generatedContent","setGeneratedContent","useState","loading","setLoading","generating","setGenerating","selectedContent","setSelectedContent","showPreview","setShowPreview","formData","setFormData","type","title","description","cefrLevel","difficulty","category","subcategory","learningObjectives","estimatedDuration","tags","customPrompt","includeExercises","includeVocabulary","includeGrammar","includeAudio","includeImages","useEffect","fetchGeneratedContent","response","aiFeaturesAPI","getGeneratedContent","page","limit","content","error","console","handleInputChange","field","value","prev","handleLearningObjectiveChange","index","newObjectives","removeLearningObjective","length","filter","_","i","handleTagChange","split","map","tag","trim","generateContent","alert","handleReviewContent","contentId","status","notes","reviewContent","getContentTypeIcon","icons","lesson","exercise","story","dialogue","quiz","material","getReviewStatusColor","colors","pending","approved","rejected","needs_revision","getLevelColor","A1","A2","B1","B2","C1","C2","level","jsx_runtime","jsx","div","className","jsxs","p","h1","h2","label","select","onChange","e","target","option","input","placeholder","textarea","rows","objective","concat","button","onClick","parseInt","min","max","join","checked","disabled","h3","span","reviewStatus","qualityScore","usageCount","averageRating","toFixed","Fragment","_id","text","h4","exercises","question","options","ul","optIndex","li","vocabulary","vocab","word","definition","example","AIContentGenerationPage","router","role","Head","meta","name"],"sourceRoot":""}