{"version":3,"file":"static/chunks/pages/_app-1fbbcdebd36c7a31.js","mappings":"qFACA,CAAAA,OAAAC,QAAA,CAAAD,OAAAC,QAAA,MAAAC,IAAA,EACA,QACA,WACA,OAAeC,EAAQ,MACvB,EACA,+DCNIC,EAAkEJ,MACtEI,CAAAA,EAAiC,4BAA+B,CAAGC,KAAAA,EACnED,EAAiC,cAAiB,CAAG,CAAC,GAAK,uBAAuB,EAClFA,EAAiC,gBAAmB,CAAGC,KAAAA,EACvDD,EAAiC,gCAAmC,CAAG,GAIvE,IAAME,EAAMC,EAAQC,GAAG,CAACC,sBAAsB,CAC1CH,GAAOA,oBAAAA,GACTI,EAAAA,EAAW,CAAC,CACVJ,IAAAA,EACAK,iBAAkB,EAClBC,yBAA0B,EAC1BC,yBAA0B,CAC5B,kLCNa,SAASC,EAAIC,CAAkC,KAAlC,CAAEC,UAAAA,CAAS,CAAEC,UAAAA,CAAS,CAAY,CAAlCF,EAC1B,MACE,GAAAG,EAAAC,GAAA,EAACC,EAAAA,CAAYA,CAAAA,UACX,GAAAF,EAAAC,GAAA,EAACE,EAAAA,EAAYA,CAAAA,UACX,GAAAH,EAAAC,GAAA,EAACG,EAAAA,EAAaA,CAAAA,UACZ,GAAAJ,EAAAC,GAAA,EAACI,EAAAA,CAAYA,CAAAA,UACX,GAAAL,EAAAC,GAAA,EAACK,EAAAA,CAAoBA,CAAAA,UACnB,GAAAN,EAAAC,GAAA,EAACM,EAAAA,CAAaA,CAAAA,UACZ,GAAAP,EAAAC,GAAA,EAACH,EAAAA,CAAW,GAAGC,CAAS,cAQxC,iJCAA,IAAMS,EAAeC,CAAAA,EAAAA,EAAAA,aAAAA,EAA4CtB,KAAAA,GAO1D,SAASiB,EAAcP,CAAgC,KAAhC,CAAEa,SAAAA,CAAQ,CAAsB,CAAhCb,EACtB,CAACc,EAAQC,EAAU,CAAGC,CAAAA,EAAAA,EAAAA,QAAAA,EAAkB,EAAE,EAG1CC,EAAY,SAACC,CAAAA,CAAiBC,CAAAA,MAAiBC,EAAAA,UAAAA,MAAAA,CAAAA,GAAAA,KAAAA,IAAAA,SAAAA,CAAAA,EAAAA,CAAAA,SAAAA,CAAAA,EAAAA,CAAW,IACxDC,EAAKC,KAAKC,MAAM,GAAGC,QAAQ,CAAC,IAAIC,SAAS,CAAC,EAAG,GAC7CC,EAAkB,CAAEL,GAAAA,EAAIH,KAAAA,EAAMC,QAAAA,EAASC,SAAAA,CAAS,EAEtDL,EAAUY,GAAQ,IAAIA,EAAMD,EAAS,EAGjCN,EAAW,GACbQ,WAAW,KACTC,EAAYR,EACd,EAAGD,EAEP,EAGMS,EAAc,IAClBd,EAAUY,GAAQA,EAAKG,MAAM,CAACC,GAASA,EAAMV,EAAE,GAAKA,GACtD,EAkBA,MACE,GAAAlB,EAAA6B,IAAA,EAACrB,EAAasB,QAAQ,EAACC,MAXO,CAC9BpB,OAAAA,EACAG,UAAAA,EACAY,YAAAA,EACAM,QATc,CAAChB,EAAiBC,IAAsBH,EAAU,UAAWE,EAASC,GAUpFgB,MATY,CAACjB,EAAiBC,IAAsBH,EAAU,QAASE,EAASC,GAUhFiB,QATc,CAAClB,EAAiBC,IAAsBH,EAAU,UAAWE,EAASC,GAUpFkB,KATW,CAACnB,EAAiBC,IAAsBH,EAAU,OAAQE,EAASC,EAUhF,YAIKP,EACD,GAAAV,EAAAC,GAAA,EAACmC,EAAAA,CAAAA,KAGP,CAGO,SAASC,IACd,IAAMC,EAAUC,CAAAA,EAAAA,EAAAA,UAAAA,EAAW/B,GAE3B,GAAI8B,KAAYnD,IAAZmD,EACF,MAAM,MAAU,gDAGlB,OAAOA,CACT,CAGA,SAASF,IACP,GAAM,CAAEzB,OAAAA,CAAM,CAAEe,YAAAA,CAAW,CAAE,CAAGW,WAEhC,IAAI1B,EAAO6B,MAAM,CAAe,KAG9B,GAAAxC,EAAAC,GAAA,EAACwC,MAAAA,CAAIC,UAAU,8CACZ/B,EAAOgC,GAAG,CAAC,GACV,GAAA3C,EAAAC,GAAA,EAAC2C,EAAAA,CAAyBhB,MAAOA,EAAOiB,SAAUnB,GAAlCE,EAAMV,EAAE,IAIhC,CAQA,SAAS0B,EAAU/C,CAAmC,KAAnC,CAAE+B,MAAAA,CAAK,CAAEiB,SAAAA,CAAQ,CAAkB,CAAnChD,EACX,CAAEkB,KAAAA,CAAI,CAAEC,QAAAA,CAAO,CAAEE,GAAAA,CAAE,CAAE,CAAGU,EAgDxBkB,EAASC,CA7CQ,IACrB,OAAQhC,GACN,IAAK,UACH,MAAO,CACLiC,KAAM,IACNC,QAAS,mCACTC,YAAa,yCACbC,UAAW,qCACXC,UAAW,gBACb,CACF,KAAK,QACH,MAAO,CACLJ,KAAM,IACNC,QAAS,+BACTC,YAAa,qCACbC,UAAW,iCACXC,UAAW,cACb,CACF,KAAK,UACH,MAAO,CACLJ,KAAM,KACNC,QAAS,qCACTC,YAAa,2CACbC,UAAW,uCACXC,UAAW,iBACb,CACF,KAAK,OACH,MAAO,CACLJ,KAAM,KACNC,QAAS,iCACTC,YAAa,uCACbC,UAAW,mCACXC,UAAW,eACb,CACF,SACE,MAAO,CACLJ,KAAM,eACNC,QAAS,iCACTC,YAAa,uCACbC,UAAW,mCACXC,UAAW,eACb,CACJ,CACF,GAE8BrC,GAE9B,MACE,GAAAf,EAAA6B,IAAA,EAACY,MAAAA,CACCC,UAAW,6BACkCI,MAAAA,CAAzBA,EAAOG,OAAO,CAAC,YAA6BI,MAAA,CAAnBP,EAAOI,WAAW,CAAC,oJAIhEI,KAAK,QACLC,YAAU,sBAGV,GAAAvD,EAAAC,GAAA,EAACwC,MAAAA,CAAIC,UAAW,yBAA0CW,MAAA,CAAjBP,EAAOM,SAAS,WACtDN,EAAOE,IAAI,GAId,GAAAhD,EAAAC,GAAA,EAACwC,MAAAA,CAAIC,UAAU,0BACb,GAAA1C,EAAAC,GAAA,EAACuD,IAAAA,CAAEd,UAAW,uBAAwCW,MAAA,CAAjBP,EAAOK,SAAS,WAClDnC,MAKL,GAAAhB,EAAAC,GAAA,EAACwD,SAAAA,CACCC,QAAS,IAAMb,EAAS3B,GACxBwB,UAAW,iDAC4CW,MAAA,CAAjBP,EAAOK,SAAS,CAAC,0LAIvDQ,aAAW,8BAEX,GAAA3D,EAAAC,GAAA,EAAC2D,MAAAA,CAAIlB,UAAU,UAAUmB,KAAK,OAAOC,QAAQ,YAAYC,OAAO,wBAC9D,GAAA/D,EAAAC,GAAA,EAAC+D,OAAAA,CAAKC,cAAc,QAAQC,eAAe,QAAQC,YAAa,EAAGC,EAAE,+BAK/E,CASO,IAAMxC,EAAQ,CACnBI,QAAS,CAAChB,EAAiBC,KAIvBoD,QAAQC,IAAI,CAAC,8BAEjB,EACArC,MAAO,CAACjB,EAAiBC,KAIrBoD,QAAQC,IAAI,CAAC,8BAEjB,EACApC,QAAS,CAAClB,EAAiBC,KAIvBoD,QAAQC,IAAI,CAAC,8BAEjB,EACAnC,KAAM,CAACnB,EAAiBC,KAIpBoD,QAAQC,IAAI,CAAC,8BAEjB,CACF,6ICzIA,IAAMC,EAA2B,CAC/BC,SAAU,KACVC,gBAAiB,GACjBC,MAAO,EAAE,CACTC,aAAc,GACdC,gBAAiB,KACjBC,aAAc,KACdC,UAAW,EAAE,CACbC,iBAAkB,GAClBC,oBAAqB,KACrBC,iBAAkB,KAClBC,SAAU,EAAE,CACZC,gBAAiB,GACjBC,mBAAoB,KACpBC,gBAAiB,KACjBC,KAAM,EAAE,CACRC,YAAa,GACbC,eAAgB,KAChBC,YAAa,CAAC,EACdC,gBAAiB,CAAC,EAClBC,eAAgB,CAAC,EACjBC,WAAY,CAAC,CACf,EAGA,SAASC,EAAaC,CAAiB,CAAEC,CAAmB,MA0DtCD,EAUIA,EAUDA,EAQHA,EAMIA,EA3FxB,OAAQC,EAAOhF,IAAI,EACjB,IAAK,eACH,MAAO,CAAE,GAAG+E,CAAK,CAAEtB,SAAUuB,EAAOC,OAAO,CAC7C,KAAK,uBACH,MAAO,CAAE,GAAGF,CAAK,CAAErB,gBAAiBsB,EAAOC,OAAO,CACpD,KAAK,YACH,MAAO,CACL,GAAGF,CAAK,CACRpB,MAAOqB,EAAOC,OAAO,CAACtB,KAAK,CAC3BE,gBAAiBmB,EAAOC,OAAO,CAACC,UAAU,CAE9C,KAAK,oBACH,MAAO,CAAE,GAAGH,CAAK,CAAEnB,aAAcoB,EAAOC,OAAO,CACjD,KAAK,oBACH,MAAO,CAAE,GAAGF,CAAK,CAAEjB,aAAckB,EAAOC,OAAO,CACjD,KAAK,gBACH,MAAO,CACL,GAAGF,CAAK,CACRhB,UAAWiB,EAAOC,OAAO,CAAClB,SAAS,CACnCE,oBAAqBe,EAAOC,OAAO,CAACC,UAAU,CAElD,KAAK,wBACH,MAAO,CAAE,GAAGH,CAAK,CAAEf,iBAAkBgB,EAAOC,OAAO,CACrD,KAAK,wBACH,MAAO,CAAE,GAAGF,CAAK,CAAEb,iBAAkBc,EAAOC,OAAO,CACrD,KAAK,eACH,MAAO,CACL,GAAGF,CAAK,CACRZ,SAAUa,EAAOC,OAAO,CAACd,QAAQ,CACjCE,mBAAoBW,EAAOC,OAAO,CAACC,UAAU,CAEjD,KAAK,uBACH,MAAO,CAAE,GAAGH,CAAK,CAAEX,gBAAiBY,EAAOC,OAAO,CACpD,KAAK,uBACH,MAAO,CAAE,GAAGF,CAAK,CAAET,gBAAiBU,EAAOC,OAAO,CACpD,KAAK,WACH,MAAO,CACL,GAAGF,CAAK,CACRR,KAAMS,EAAOC,OAAO,CAACV,IAAI,CACzBE,eAAgBO,EAAOC,OAAO,CAACC,UAAU,CAE7C,KAAK,mBACH,MAAO,CAAE,GAAGH,CAAK,CAAEP,YAAaQ,EAAOC,OAAO,CAChD,KAAK,mBACH,MAAO,CAAE,GAAGF,CAAK,CAAEL,YAAaM,EAAOC,OAAO,CAChD,KAAK,uBACH,MAAO,CAAE,GAAGF,CAAK,CAAEJ,gBAAiBK,EAAOC,OAAO,CACpD,KAAK,sBACH,MAAO,CAAE,GAAGF,CAAK,CAAEH,eAAgBI,EAAOC,OAAO,CACnD,KAAK,kBACH,MAAO,CAAE,GAAGF,CAAK,CAAEF,WAAYG,EAAOC,OAAO,CAC/C,KAAK,cACH,MAAO,CACL,GAAGF,CAAK,CACRpB,MAAOoB,EAAMpB,KAAK,CAAC/B,GAAG,CAACuD,GACrBA,EAAKC,GAAG,GAAKJ,EAAOC,OAAO,CAACG,GAAG,CAAGJ,EAAOC,OAAO,CAAGE,GAErDrB,aAAciB,CAAAA,OAAAA,CAAAA,EAAAA,EAAMjB,YAAY,GAAlBiB,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAoBK,GAAG,IAAKJ,EAAOC,OAAO,CAACG,GAAG,CACxDJ,EAAOC,OAAO,CACdF,EAAMjB,YAAY,CAE1B,KAAK,kBACH,MAAO,CACL,GAAGiB,CAAK,CACRhB,UAAWgB,EAAMhB,SAAS,CAACnC,GAAG,CAACyD,GAC7BA,EAASD,GAAG,GAAKJ,EAAOC,OAAO,CAACG,GAAG,CAAGJ,EAAOC,OAAO,CAAGI,GAEzDnB,iBAAkBa,CAAAA,OAAAA,CAAAA,EAAAA,EAAMb,gBAAgB,GAAtBa,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAwBK,GAAG,IAAKJ,EAAOC,OAAO,CAACG,GAAG,CAChEJ,EAAOC,OAAO,CACdF,EAAMb,gBAAgB,CAE9B,KAAK,iBACH,MAAO,CACL,GAAGa,CAAK,CACRZ,SAAUY,EAAMZ,QAAQ,CAACvC,GAAG,CAAC0D,GAC3BA,EAAQF,GAAG,GAAKJ,EAAOC,OAAO,CAACG,GAAG,CAAGJ,EAAOC,OAAO,CAAGK,GAExDhB,gBAAiBS,CAAAA,OAAAA,CAAAA,EAAAA,EAAMT,eAAe,GAArBS,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAuBK,GAAG,IAAKJ,EAAOC,OAAO,CAACG,GAAG,CAC9DJ,EAAOC,OAAO,CACdF,EAAMT,eAAe,CAE7B,KAAK,cACH,MAAO,CACL,GAAGS,CAAK,CACRpB,MAAOoB,EAAMpB,KAAK,CAAC/C,MAAM,CAACuE,GAAQA,EAAKC,GAAG,GAAKJ,EAAOC,OAAO,EAC7DnB,aAAciB,CAAAA,OAAAA,CAAAA,EAAAA,EAAMjB,YAAY,GAAlBiB,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAoBK,GAAG,IAAKJ,EAAOC,OAAO,CAAG,KAAOF,EAAMjB,YAAY,CAExF,KAAK,kBACH,MAAO,CACL,GAAGiB,CAAK,CACRhB,UAAWgB,EAAMhB,SAAS,CAACnD,MAAM,CAACyE,GAAYA,EAASD,GAAG,GAAKJ,EAAOC,OAAO,EAC7Ef,iBAAkBa,CAAAA,OAAAA,CAAAA,EAAAA,EAAMb,gBAAgB,GAAtBa,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAwBK,GAAG,IAAKJ,EAAOC,OAAO,CAAG,KAAOF,EAAMb,gBAAgB,CAEpG,SACE,OAAOa,CACX,CACF,CAqCA,IAAMQ,EAAe7F,CAAAA,EAAAA,EAAAA,aAAAA,EAA4CtB,KAAAA,GAOpDoB,EAA8C,OAAC,CAAEG,SAAAA,CAAQ,CAAE,CAAAb,EAChE,CAACiG,EAAOS,EAAS,CAAGC,CAAAA,EAAAA,EAAAA,UAAAA,EAAWX,EAActB,GAG7CkC,EAAe,UACnB,GAAI,CACFF,EAAS,CAAExF,KAAM,uBAAwBiF,QAAS,EAAK,GACvD,IAAMU,EAAW,MAAMC,EAAAA,EAAQA,CAACC,WAAW,EACvCF,CAAAA,EAASG,IAAI,CAAC7E,OAAO,EACvBuE,EAAS,CAAExF,KAAM,eAAgBiF,QAASU,EAASG,IAAI,CAACA,IAAI,EAEhE,CAAE,MAAO5E,EAAO,CACdoC,QAAQpC,KAAK,CAAC,0BAA2BA,GACzCL,EAAAA,EAAKA,CAACK,KAAK,CAAC,+BACd,QAAU,CACRsE,EAAS,CAAExF,KAAM,uBAAwBiF,QAAS,EAAM,EAC1D,CACF,EAGMc,EAAY,qBAAOC,EAAAA,UAAAA,MAAAA,CAAAA,GAAAA,KAAAA,IAAAA,SAAAA,CAAAA,EAAAA,CAAAA,SAAAA,CAAAA,EAAAA,CAAO,EAAGC,EAAAA,UAAAA,MAAAA,CAAAA,GAAAA,KAAAA,IAAAA,SAAAA,CAAAA,EAAAA,CAAAA,SAAAA,CAAAA,EAAAA,CAAU,CAAC,EAC5C,GAAI,CACFT,EAAS,CAAExF,KAAM,oBAAqBiF,QAAS,EAAK,GACpD,IAAMiB,EAAS,CAAEF,KAAAA,EAAMG,MAAO,GAAI,GAAGF,CAAO,EACtCN,EAAW,MAAMC,EAAAA,EAAQA,CAACQ,QAAQ,CAACF,EACrCP,CAAAA,EAASG,IAAI,CAAC7E,OAAO,EACvBuE,EAAS,CACPxF,KAAM,YACNiF,QAAS,CACPtB,MAAOgC,EAASG,IAAI,CAACA,IAAI,CAACnC,KAAK,CAC/BuB,WAAYS,EAASG,IAAI,CAACA,IAAI,CAACZ,UAAU,CAE7C,EAEJ,CAAE,MAAOhE,EAAO,CACdoC,QAAQpC,KAAK,CAAC,uBAAwBA,GACtCL,EAAAA,EAAKA,CAACK,KAAK,CAAC,uBACd,QAAU,CACRsE,EAAS,CAAExF,KAAM,oBAAqBiF,QAAS,EAAM,EACvD,CACF,EAEMoB,EAAe,MAAOlG,IAC1B,GAAI,CACF,IAAMwF,EAAW,MAAMC,EAAAA,EAAQA,CAACU,WAAW,CAACnG,GAC5C,GAAIwF,EAASG,IAAI,CAAC7E,OAAO,CACvB,OAAO0E,EAASG,IAAI,CAACA,IAAI,CAE3B,OAAO,IACT,CAAE,MAAO5E,EAAO,CAGd,OAFAoC,QAAQpC,KAAK,CAAC,sBAAuBA,GACrCL,EAAAA,EAAKA,CAACK,KAAK,CAAC,+BACL,IACT,CACF,EAEMqF,EAAiB,MAAOpG,EAAY2F,KACxC,GAAI,CACF,IAAMH,EAAW,MAAMC,EAAAA,EAAQA,CAACW,cAAc,CAACpG,EAAI2F,EAAKvD,IAAI,CACxDoD,CAAAA,EAASG,IAAI,CAAC7E,OAAO,GACvBuE,EAAS,CAAExF,KAAM,cAAeiF,QAASU,EAASG,IAAI,CAACA,IAAI,GAC3DjF,EAAAA,EAAKA,CAACI,OAAO,CAAC,kCAElB,CAAE,MAAOC,EAAO,CACdoC,QAAQpC,KAAK,CAAC,4BAA6BA,GAC3CL,EAAAA,EAAKA,CAACK,KAAK,CAAC,6BACd,CACF,EAEMsF,EAAmB,MAAOrG,EAAY2F,KAC1C,GAAI,CACF,IAAMH,EAAW,MAAMC,EAAAA,EAAQA,CAACY,gBAAgB,CAACrG,EAAI2F,EAAKW,MAAM,CAC5Dd,CAAAA,EAASG,IAAI,CAAC7E,OAAO,GACvBuE,EAAS,CAAExF,KAAM,cAAeiF,QAASU,EAASG,IAAI,CAACA,IAAI,GAC3DjF,EAAAA,EAAKA,CAACI,OAAO,CAAC,oCAElB,CAAE,MAAOC,EAAO,CACdoC,QAAQpC,KAAK,CAAC,8BAA+BA,GAC7CL,EAAAA,EAAKA,CAACK,KAAK,CAAC,+BACd,CACF,EAEMwF,EAAa,MAAOvG,IACxB,GAAI,CAEEwF,CADa,MAAMC,EAAAA,EAAQA,CAACc,UAAU,CAACvG,EAAAA,EAC9B2F,IAAI,CAAC7E,OAAO,GACvBuE,EAAS,CAAExF,KAAM,cAAeiF,QAAS9E,CAAG,GAC5CU,EAAAA,EAAKA,CAACI,OAAO,CAAC,6BAElB,CAAE,MAAOC,EAAO,CACdoC,QAAQpC,KAAK,CAAC,uBAAwBA,GACtCL,EAAAA,EAAKA,CAACK,KAAK,CAAC,wBACd,CACF,EAWMyF,EAAgB,qBAAOX,EAAAA,UAAAA,MAAAA,CAAAA,GAAAA,KAAAA,IAAAA,SAAAA,CAAAA,EAAAA,CAAAA,SAAAA,CAAAA,EAAAA,CAAO,EAAGC,EAAAA,UAAAA,MAAAA,CAAAA,GAAAA,KAAAA,IAAAA,SAAAA,CAAAA,EAAAA,CAAAA,SAAAA,CAAAA,EAAAA,CAAU,CAAC,EAChD,GAAI,CACFT,EAAS,CAAExF,KAAM,wBAAyBiF,QAAS,EAAK,GACxD,IAAMiB,EAAS,CAAEF,KAAAA,EAAMG,MAAO,GAAI,GAAGF,CAAO,EACtCN,EAAW,MAAMC,EAAAA,EAAQA,CAACgB,YAAY,CAACV,EACzCP,CAAAA,EAASG,IAAI,CAAC7E,OAAO,EACvBuE,EAAS,CACPxF,KAAM,gBACNiF,QAAS,CACPlB,UAAW4B,EAASG,IAAI,CAACA,IAAI,CAAC/B,SAAS,CACvCmB,WAAYS,EAASG,IAAI,CAACA,IAAI,CAACZ,UAAU,CAE7C,EAEJ,CAAE,MAAOhE,EAAO,CACdoC,QAAQpC,KAAK,CAAC,2BAA4BA,GAC1CL,EAAAA,EAAKA,CAACK,KAAK,CAAC,2BACd,QAAU,CACRsE,EAAS,CAAExF,KAAM,wBAAyBiF,QAAS,EAAM,EAC3D,CACF,EAEM4B,EAAkB,MAAO1G,EAAY2F,KACzC,GAAI,CACF,IAAMH,EAAW,MAAMC,EAAAA,EAAQA,CAACiB,eAAe,CAAC1G,EAAI2F,EAChDH,CAAAA,EAASG,IAAI,CAAC7E,OAAO,GACvBuE,EAAS,CAAExF,KAAM,kBAAmBiF,QAASU,EAASG,IAAI,CAACA,IAAI,GAC/DjF,EAAAA,EAAKA,CAACI,OAAO,CAAC,YAAoDqB,MAAA,CAAxCwD,EAAKgB,QAAQ,CAAG,WAAa,WAAW,kBAEtE,CAAE,MAAO5F,EAAO,CACdoC,QAAQpC,KAAK,CAAC,4BAA6BA,GAC3CL,EAAAA,EAAKA,CAACK,KAAK,CAAC,mCACd,CACF,EAEM6F,EAAiB,MAAO5G,IAC5B,GAAI,CAEEwF,CADa,MAAMC,EAAAA,EAAQA,CAACmB,cAAc,CAAC5G,EAAAA,EAClC2F,IAAI,CAAC7E,OAAO,GACvBuE,EAAS,CAAExF,KAAM,kBAAmBiF,QAAS9E,CAAG,GAChDU,EAAAA,EAAKA,CAACI,OAAO,CAAC,iCAElB,CAAE,MAAOC,EAAO,CACdoC,QAAQpC,KAAK,CAAC,2BAA4BA,GAC1CL,EAAAA,EAAKA,CAACK,KAAK,CAAC,4BACd,CACF,EAWM8F,EAAe,qBAAOhB,EAAAA,UAAAA,MAAAA,CAAAA,GAAAA,KAAAA,IAAAA,SAAAA,CAAAA,EAAAA,CAAAA,SAAAA,CAAAA,EAAAA,CAAO,EAAGC,EAAAA,UAAAA,MAAAA,CAAAA,GAAAA,KAAAA,IAAAA,SAAAA,CAAAA,EAAAA,CAAAA,SAAAA,CAAAA,EAAAA,CAAU,CAAC,EAC/C,GAAI,CACFT,EAAS,CAAExF,KAAM,uBAAwBiF,QAAS,EAAK,GACvD,IAAMiB,EAAS,CAAEF,KAAAA,EAAMG,MAAO,GAAI,GAAGF,CAAO,EACtCN,EAAW,MAAMC,EAAAA,EAAQA,CAACqB,WAAW,CAACf,EACxCP,CAAAA,EAASG,IAAI,CAAC7E,OAAO,EACvBuE,EAAS,CACPxF,KAAM,eACNiF,QAAS,CACPd,SAAUwB,EAASG,IAAI,CAACA,IAAI,CAAC3B,QAAQ,CACrCe,WAAYS,EAASG,IAAI,CAACA,IAAI,CAACZ,UAAU,CAE7C,EAEJ,CAAE,MAAOhE,EAAO,CACdoC,QAAQpC,KAAK,CAAC,0BAA2BA,GACzCL,EAAAA,EAAKA,CAACK,KAAK,CAAC,0BACd,QAAU,CACRsE,EAAS,CAAExF,KAAM,uBAAwBiF,QAAS,EAAM,EAC1D,CACF,EAEMiC,EAAgB,MAAO/G,EAAY2F,KACvC,GAAI,CACF,IAAMH,EAAW,MAAMC,EAAAA,EAAQA,CAACsB,aAAa,CAAC/G,EAAI2F,EAC9CH,CAAAA,EAASG,IAAI,CAAC7E,OAAO,GACvBuE,EAAS,CAAExF,KAAM,iBAAkBiF,QAASU,EAASG,IAAI,CAACA,IAAI,GAC9DjF,EAAAA,EAAKA,CAACI,OAAO,CAAC,iCAElB,CAAE,MAAOC,EAAO,CACdoC,QAAQpC,KAAK,CAAC,2BAA4BA,GAC1CL,EAAAA,EAAKA,CAACK,KAAK,CAAC,2BACd,CACF,EAWMiG,EAAW,qBAAOnB,EAAAA,UAAAA,MAAAA,CAAAA,GAAAA,KAAAA,IAAAA,SAAAA,CAAAA,EAAAA,CAAAA,SAAAA,CAAAA,EAAAA,CAAO,EAAGC,EAAAA,UAAAA,MAAAA,CAAAA,GAAAA,KAAAA,IAAAA,SAAAA,CAAAA,EAAAA,CAAAA,SAAAA,CAAAA,EAAAA,CAAU,CAAC,EAC3C,GAAI,CACFT,EAAS,CAAExF,KAAM,mBAAoBiF,QAAS,EAAK,GACnD,IAAMiB,EAAS,CAAEF,KAAAA,EAAMG,MAAO,GAAI,GAAGF,CAAO,EACtCN,EAAW,MAAMC,EAAAA,EAAQA,CAACwB,OAAO,CAAClB,EACpCP,CAAAA,EAASG,IAAI,CAAC7E,OAAO,EACvBuE,EAAS,CACPxF,KAAM,WACNiF,QAAS,CACPV,KAAMoB,EAASG,IAAI,CAACA,IAAI,CAACvB,IAAI,CAC7BW,WAAYS,EAASG,IAAI,CAACA,IAAI,CAACZ,UAAU,CAE7C,EAEJ,CAAE,MAAOhE,EAAO,CACdoC,QAAQpC,KAAK,CAAC,sBAAuBA,GACrCL,EAAAA,EAAKA,CAACK,KAAK,CAAC,sBACd,QAAU,CACRsE,EAAS,CAAExF,KAAM,mBAAoBiF,QAAS,EAAM,EACtD,CACF,EA6BA,MACE,GAAAhG,EAAAC,GAAA,EAACqG,EAAaxE,QAAQ,EAACC,MAxBO,CAC9B+D,MAAAA,EACAW,aAAAA,EACAK,UAAAA,EACAM,aAAAA,EACAE,eAAAA,EACAC,iBAAAA,EACAE,WAAAA,EACAW,gBAhJsB,IACtB7B,EAAS,CAAExF,KAAM,oBAAqBiF,QAASE,CAAK,EACtD,EA+IEmC,eA7IqB,IACrB9B,EAAS,CAAExF,KAAM,mBAAoBiF,QAASgB,CAAQ,EACxD,EA4IEU,cAAAA,EACAE,gBAAAA,EACAE,eAAAA,EACAQ,oBA5F0B,IAC1B/B,EAAS,CAAExF,KAAM,wBAAyBiF,QAASI,CAAS,EAC9D,EA2FEmC,mBAzFyB,IACzBhC,EAAS,CAAExF,KAAM,uBAAwBiF,QAASgB,CAAQ,EAC5D,EAwFEe,aAAAA,EACAE,cAAAA,EACAO,mBApDyB,IACzBjC,EAAS,CAAExF,KAAM,uBAAwBiF,QAASK,CAAQ,EAC5D,EAmDEoC,kBAjDwB,IACxBlC,EAAS,CAAExF,KAAM,sBAAuBiF,QAASgB,CAAQ,EAC3D,EAgDEkB,SAAAA,EACAQ,cAxBoB,IACpBnC,EAAS,CAAExF,KAAM,kBAAmBiF,QAASgB,CAAQ,EACvD,CAuBA,WAIKtG,GAGP,EAGaiI,EAAW,KACtB,IAAMrG,EAAUC,CAAAA,EAAAA,EAAAA,UAAAA,EAAW+D,GAC3B,GAAIhE,KAAYnD,IAAZmD,EACF,MAAM,MAAU,iDAElB,OAAOA,CACT,yMC5dO,IAAMsG,EAAcnI,CAAAA,EAAAA,EAAAA,aAAAA,EAA2CtB,KAAAA,GAO/D,SAASgB,EAAaN,CAA+B,KAA/B,CAAEa,SAAAA,CAAQ,CAAqB,CAA/Bb,EACrB,CAACqG,EAAM2C,EAAQ,CAAGhI,CAAAA,EAAAA,EAAAA,QAAAA,EAAsB,MACxC,CAACiI,EAAWC,EAAa,CAAGlI,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IACrCmI,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,IAMfC,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,KAER,GAAIC,CADqB,SAAU,YAAa,mBAAoB,kBAAmB,WAAW,CAC9EC,QAAQ,CAACJ,EAAOK,QAAQ,EAAG,CAC7CN,EAAa,IACb,MACF,CACAO,GAEF,EAAG,CAACN,EAAOK,QAAQ,CAAC,EAGpB,IAAMC,EAAW,cAcyB5C,EACHA,EAE/BA,EAA0BA,EAW1BzE,EACiBA,EAAAA,EA5BvB,GAAI,CAEF,GAAI,CADUsH,EAAAA,YAAYA,CAACC,QAAQ,GACvB,CACVT,EAAa,IACb,MACF,CAEA1E,QAAQoF,GAAG,CAAC,yCACZ,IAAM/C,EAAW,MAAMgD,EAAAA,EAAOA,CAACC,cAAc,GAE7CtF,QAAQoF,GAAG,CAAC,iBAAkB/C,GAC9BrC,QAAQoF,GAAG,CAAC,sBAAuB/C,GACnCrC,QAAQoF,GAAG,CAAC,iBAAkB/C,EAASG,IAAI,EAC3CxC,QAAQoF,GAAG,CAAC,gCAA0B/C,CAAAA,EAAAA,EAASG,IAAI,GAAbH,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAe1E,OAAO,EAC5DqC,QAAQoF,GAAG,CAAC,6BAAuB/C,CAAAA,EAAAA,EAASG,IAAI,GAAbH,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAeR,IAAI,EAElDQ,CAAAA,OAAAA,CAAAA,EAAAA,EAASG,IAAI,GAAbH,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAe1E,OAAO,WAAI0E,CAAAA,EAAAA,EAASG,IAAI,GAAbH,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAeR,IAAI,GAC/C2C,EAAQnC,EAASG,IAAI,CAACX,IAAI,EAC1B7B,QAAQoF,GAAG,CAAC,gBAAiB/C,EAASG,IAAI,CAACX,IAAI,IAE/C7B,QAAQC,IAAI,CAAC,sCAAuCoC,GACpD6C,EAAAA,YAAYA,CAACK,KAAK,GAEtB,CAAE,MAAO3H,EAAY,CAInB,GAHAoC,QAAQpC,KAAK,CAAC,sBAAuBA,GAGjCA,CAAAA,OAAAA,CAAAA,EAAAA,EAAMyE,QAAQ,GAAdzE,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAgBuF,MAAM,IAAK,IAAK,CAClC,IAAMqC,EAAa5H,CAAAA,OAAAA,CAAAA,EAAAA,EAAMyE,QAAQ,GAAdzE,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAgB4E,IAAI,GAApB5E,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAsB4H,UAAU,GAAI,GACvDxF,QAAQC,IAAI,CAAC,mDAA8DjB,MAAA,CAAXwG,EAAW,cAE3E,MACF,CAGAxF,QAAQoF,GAAG,CAAC,4CACZF,EAAAA,YAAYA,CAACK,KAAK,GACoB9K,OAAOgL,QAAQ,CAACT,QAAQ,CAACD,QAAQ,CAAC,WACtEtK,CAAAA,OAAOgL,QAAQ,CAACC,IAAI,CAAG,SAE3B,QAAU,CACRhB,EAAa,GACf,CACF,EAGMiB,EAAQ,MAAOC,EAAeC,KAClC,GAAI,CACFnB,EAAa,IACb,IAAMrC,EAAW,MAAMgD,EAAAA,EAAOA,CAACM,KAAK,CAAC,CAAEC,MAAAA,EAAOC,SAAAA,CAAS,GACvD,GAAIxD,EAAS1E,OAAO,CAAE,CACpB,GAAM,CAAEmI,YAAAA,CAAW,CAAEjE,KAAMkE,CAAQ,CAAEC,MAAAA,CAAK,CAAE,CAAG3D,EACzC4D,EAAa,CAAE,GAAGF,CAAQ,CAAElJ,GAAIkJ,EAASjE,GAAG,EAC5CoE,EAAWJ,GAAeE,EAIhC,OAHIE,GAAUhB,EAAAA,YAAYA,CAACiB,QAAQ,CAACD,GACpChB,EAAAA,YAAYA,CAACV,OAAO,CAACyB,GACrBzB,EAAQyB,GACD,EACT,CACA,MAAO,EACT,CAAE,MAAOG,EAAQ,CACf,MAAO,EACT,QAAU,CACR1B,EAAa,GACf,CACF,EAGM2B,EAAW,MAAON,IACtB,GAAI,CACFrB,EAAa,IACb,IAAMrC,EAAW,MAAMgD,EAAAA,EAAOA,CAACgB,QAAQ,CAACN,GACxC,GAAI1D,EAAS1E,OAAO,CAAE,CACpB,GAAM,CAAEmI,YAAAA,CAAW,CAAEjE,KAAMyE,CAAO,CAAEN,MAAAA,CAAK,CAAE,CAAG3D,EACxC4D,EAAa,CAAE,GAAGK,CAAO,CAAEzJ,GAAIyJ,EAAQxE,GAAG,EAGhD,OAFAoD,EAAAA,YAAYA,CAACV,OAAO,CAACyB,GACrBzB,EAAQyB,GACD,EACT,CACA,MAAO,EACT,CAAE,MAAOG,EAAQ,CACf,MAAO,EACT,QAAU,CACR1B,EAAa,GACf,CACF,EAGM6B,EAAS,UACb,GAAI,CAEF,MAAMlB,EAAAA,EAAOA,CAACkB,MAAM,EACtB,CAAE,MAAO3I,EAAO,CACdoC,QAAQpC,KAAK,CAAC,oBAAqBA,EACrC,QAAU,CAERsH,EAAAA,YAAYA,CAACK,KAAK,GAGlBf,EAAQ,MAGRG,EAAOhK,IAAI,CAAC,SACd,CACF,EAQM6L,EAAc,UAClB,GAAI,CACF,IAAMnE,EAAW,MAAMgD,EAAAA,EAAOA,CAACC,cAAc,GAE7C,GAAIjD,EAASG,IAAI,CAAC7E,OAAO,CAAE,CACzB,IAAM8I,EAAcpE,EAASG,IAAI,CAACX,IAAI,CAGhCoE,EAAa,CACjB,GAAGQ,CAAW,CACd5J,GAAI4J,EAAY3E,GAAG,EAGrB0C,EAAQyB,GACRf,EAAAA,YAAYA,CAACV,OAAO,CAACyB,EACvB,CACF,CAAE,MAAOrI,EAAO,CACdoC,QAAQpC,KAAK,CAAC,yBAA0BA,GAExC2I,GACF,CACF,EAkBA,MACE,GAAA5K,EAAAC,GAAA,EAAC2I,EAAY9G,QAAQ,EAACC,MAhBO,CAC7BmE,KAAAA,EACA6E,gBAzJsB,CAAC,CAAC7E,EA0JxB4C,UAAAA,EACAkC,QAASlC,EACTkB,MAAAA,EACAU,SAAAA,EACAE,OAAAA,EACAC,YAAAA,EACAhC,QAtCsB,IACtBA,EAAQ8B,EACV,EAqCEM,eAAgB,IACd1B,EAAAA,YAAYA,CAACiB,QAAQ,CAACH,EACxB,CACF,WAIK3J,GAGP,CAGO,SAASwK,IACd,IAAM5I,EAAUC,CAAAA,EAAAA,EAAAA,UAAAA,EAAWqG,GAE3B,GAAItG,KAAYnD,IAAZmD,EACF,MAAM,MAAU,+CAGlB,OAAOA,CACT,CAGO,IAAM6I,EAAiBD,EAGvB,SAASE,EAAaC,CAAiD,EAC5E,GAAM,CAAEnF,KAAAA,CAAI,CAAE6E,gBAAAA,CAAe,CAAEjC,UAAAA,CAAS,CAAE,CAAGoC,IACvClC,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,IA4Bf,MA1BAC,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,KACR,GAAI,CAACJ,EAAW,CACd,GAAI,CAACiC,EAAiB,CACpB/B,EAAOhK,IAAI,CAAC,UACZ,MACF,CAEA,GAAIkH,GAAQ,CAACmF,EAAajC,QAAQ,CAAClD,EAAK5C,IAAI,EAE1C,OAAQ4C,EAAK5C,IAAI,EACf,IAAK,UACH0F,EAAOhK,IAAI,CAAC,sBACZ,KACF,KAAK,UACHgK,EAAOhK,IAAI,CAAC,sBACZ,KACF,KAAK,QACHgK,EAAOhK,IAAI,CAAC,oBACZ,KACF,SACEgK,EAAOhK,IAAI,CAAC,SAChB,CAEJ,CACF,EAAG,CAACkH,EAAM6E,EAAiBjC,EAAWuC,EAAcrC,EAAO,EAEpD,CACLsC,UAAWpF,EAAAA,GAAOmF,EAAajC,QAAQ,CAAClD,EAAK5C,IAAI,EACjDwF,UAAAA,EACA5C,KAAAA,CACF,CACF,wLCrRA,IAAM3B,EAA0B,CAC9BgH,cAAe,EAAE,CACjBC,oBAAqB,KACrBC,SAAU,EAAE,CACZT,QAAS,GACT/I,MAAO,KACPyJ,YAAa,EACbC,YAAa,IAAIC,GACnB,EAgBA,SAASC,EAAY/F,CAAgB,CAAEC,CAAkB,EACvD,OAAQA,EAAOhF,IAAI,EACjB,IAAK,cACH,MAAO,CAAE,GAAG+E,CAAK,CAAEkF,QAASjF,EAAOC,OAAO,CAE5C,KAAK,YACH,MAAO,CAAE,GAAGF,CAAK,CAAE7D,MAAO8D,EAAOC,OAAO,CAE1C,KAAK,oBACH,MAAO,CAAE,GAAGF,CAAK,CAAEyF,cAAexF,EAAOC,OAAO,CAElD,KAAK,2BACH,MAAO,CAAE,GAAGF,CAAK,CAAE0F,oBAAqBzF,EAAOC,OAAO,CAExD,KAAK,eACH,MAAO,CAAE,GAAGF,CAAK,CAAE2F,SAAU1F,EAAOC,OAAO,CAE7C,KAAK,cACH,MAAO,CACL,GAAGF,CAAK,CACR2F,SAAU,IAAI3F,EAAM2F,QAAQ,CAAE1F,EAAOC,OAAO,CAAC,CAGjD,KAAK,mCACH,MAAO,CACL,GAAGF,CAAK,CACRyF,cAAezF,EAAMyF,aAAa,CAAC5I,GAAG,CAACmJ,GACrCA,EAAK3F,GAAG,GAAKJ,EAAOC,OAAO,CAAC+F,cAAc,CACtC,CACE,GAAGD,CAAI,CACPE,YAAa,CACXC,QAASlG,EAAOC,OAAO,CAAChF,OAAO,CAACiL,OAAO,CACvCC,OAAQnG,EAAOC,OAAO,CAAChF,OAAO,CAACkL,MAAM,CAAC/F,GAAG,CACzCgG,UAAWpG,EAAOC,OAAO,CAAChF,OAAO,CAACoL,SAAS,EAE7CC,UAAWtG,EAAOC,OAAO,CAAChF,OAAO,CAACoL,SAAS,EAE7CN,EAER,CAEF,KAAK,mBACH,MAAO,CAAE,GAAGhG,CAAK,CAAE4F,YAAa3F,EAAOC,OAAO,CAEhD,KAAK,kBACH,IAAMsG,EAAiB,IAAIV,IAAI9F,EAAM6F,WAAW,EAMhD,OALI5F,EAAOC,OAAO,CAACuG,QAAQ,CACzBD,EAAeE,GAAG,CAACzG,EAAOC,OAAO,CAACyG,MAAM,EAExCH,EAAeI,MAAM,CAAC3G,EAAOC,OAAO,CAACyG,MAAM,EAEtC,CAAE,GAAG3G,CAAK,CAAE6F,YAAaW,CAAe,CAEjD,KAAK,qBACH,MAAO,CAAE,GAAGxG,CAAK,CAAE6F,YAAa,IAAIC,GAAM,CAE5C,SACE,OAAO9F,CACX,CACF,CAGA,IAAM6G,EAAclM,CAAAA,EAAAA,EAAAA,aAAAA,EAA2CtB,KAAAA,GAOxD,SAASkB,EAAaR,CAA+B,KAA/B,CAAEa,SAAAA,CAAQ,CAAqB,CAA/Bb,EACrB,CAACiG,EAAOS,EAAS,CAAGC,CAAAA,EAAAA,EAAAA,UAAAA,EAAWqF,EAAatH,GAC5C,CAAE2B,KAAAA,CAAI,CAAE6E,gBAAAA,CAAe,CAAE,CAAGG,CAAAA,EAAAA,EAAAA,EAAAA,IAC5B,CAAEjJ,MAAO2K,CAAS,CAAE5K,QAAS6K,CAAW,CAAE,CAAGxK,CAAAA,EAAAA,EAAAA,EAAAA,IAC7CyK,EAAYC,CAAAA,EAAAA,EAAAA,MAAAA,EAAsB,MAClCC,EAAmBD,CAAAA,EAAAA,EAAAA,MAAAA,EAA8B,MAGvD7D,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,KACR,GAAI6B,GAAmB7E,EAAM,CAC3B,IAAM+G,EAAO,CAAC5N,EAAQC,GAAG,CAAC4N,wBAAwB,EAAI,0BAA0BC,OAAO,CAAC,MAAO,IACzFC,EAASC,CAAAA,EAAAA,EAAAA,EAAAA,EAAGJ,EAAM,CACtBjJ,KAAM,QACNsJ,WAAY,CAAC,YAAa,UAAU,CACpCC,gBAAiB,GACjBC,qBAAsB,EACtBC,kBAAmB,IACnBC,qBAAsB,IACtBC,SAAU,GACVC,KAAM,CACJvD,MAAOd,EAAAA,YAAYA,CAACC,QAAQ,IAAMrK,KAAAA,CACpC,CACF,GAoDA,OAlDA2N,EAAUe,OAAO,CAAGT,EAGpBA,EAAOU,EAAE,CAAC,UAAW,KACnBzJ,QAAQoF,GAAG,CAAC,4CAAmC2D,EAAOC,EAAE,CAACU,MAAM,CAACC,SAAS,CAACC,IAAI,CAChF,GAEAb,EAAOU,EAAE,CAAC,aAAc,IACtBzJ,QAAQoF,GAAG,CAAC,8CAAqCyE,GAClC,yBAAXA,GAEFd,EAAOe,OAAO,EAElB,GAEAf,EAAOU,EAAE,CAAC,iBAAkB,IAC1BvH,EAAS,CAAExF,KAAM,cAAeiF,QAAShF,CAAQ,GACjDuF,EAAS,CACPxF,KAAM,mCACNiF,QAAS,CAAE+F,eAAgB/K,EAAQ+K,cAAc,CAAE/K,QAAAA,CAAQ,CAC7D,EACF,GAEAoM,EAAOU,EAAE,CAAC,aAAc,IACtBvH,EAAS,CACPxF,KAAM,kBACNiF,QAAS,CAAEyG,OAAQ5F,EAAK4F,MAAM,CAAEF,SAAU1F,EAAK0F,QAAQ,CACzD,EACF,GAEAa,EAAOU,EAAE,CAAC,gBAAiB,IACzBzJ,QAAQpC,KAAK,CAAC,wCAA+BA,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAOjB,OAAO,GAAIiB,GAC/DoC,QAAQoF,GAAG,CAAC,+BAAsB2D,EAAOC,EAAE,CAACU,MAAM,CAACC,SAAS,CAACC,IAAI,EACjErB,EAAU,mCACZ,GAEAQ,EAAOU,EAAE,CAAC,YAAa,IACrBzJ,QAAQoF,GAAG,CAAC,gDAAuC2E,EAAe,YAClEvB,EAAY,6BACd,GAEAO,EAAOU,EAAE,CAAC,oBAAqB,IAC7BzJ,QAAQoF,GAAG,CAAC,wCAA+B2E,EAC7C,GAEAhB,EAAOU,EAAE,CAAC,mBAAoB,KAC5BzJ,QAAQoF,GAAG,CAAC,2DACZmD,EAAU,qCACZ,GAEO,KACLQ,EAAOiB,UAAU,EACnB,CACF,CACF,EAAG,CAACtD,EAAiB7E,EAAM0G,EAAWC,EAAY,EAGlD,IAAMyB,EAAoB,UAExB,GAAI,GAAqBpI,EAIzB,GAAI,CACFK,EAAS,CAAExF,KAAM,cAAeiF,QAAS,EAAK,GAC9CO,EAAS,CAAExF,KAAM,YAAaiF,QAAS,IAAK,GAE5C,IAAMU,EAAW,MAAM6H,EAAAA,EAAGA,CAACC,GAAG,CAAC,0BAE3B9H,CAAAA,EAASG,IAAI,CAAC7E,OAAO,EACvBuE,EAAS,CAAExF,KAAM,oBAAqBiF,QAASU,EAASG,IAAI,CAACA,IAAI,EAErE,CAAE,MAAO5E,EAAY,KAEEA,EAAAA,EADrBoC,QAAQpC,KAAK,CAAC,+BAAgCA,GAC9C,IAAMwM,EAAexM,CAAAA,OAAAA,CAAAA,EAAAA,EAAMyE,QAAQ,GAAdzE,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAgB4E,IAAI,GAApB5E,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAsBjB,OAAO,GAAI,+BACtDuF,EAAS,CAAExF,KAAM,YAAaiF,QAASyI,CAAa,GACpD7B,EAAU6B,EACZ,QAAU,CACRlI,EAAS,CAAExF,KAAM,cAAeiF,QAAS,EAAM,EACjD,CACF,EAGM0I,EAAe,eAAO3C,CAAAA,MAAwBhF,EAAAA,UAAAA,MAAAA,CAAAA,GAAAA,KAAAA,IAAAA,SAAAA,CAAAA,EAAAA,CAAAA,SAAAA,CAAAA,EAAAA,CAAO,EAEzD,GAAI,GAAqBb,EAIzB,GAAI,CACFK,EAAS,CAAExF,KAAM,cAAeiF,QAAS,EAAK,GAC9CO,EAAS,CAAExF,KAAM,YAAaiF,QAAS,IAAK,GAE5C,IAAMU,EAAW,MAAM6H,EAAAA,EAAGA,CAACC,GAAG,CAAC,uBAAuDzH,MAAAA,CAAhCgF,EAAe,mBAAsB1I,MAAA,CAAL0D,EAAK,aAEvFL,CAAAA,EAASG,IAAI,CAAC7E,OAAO,GACnB+E,IAAAA,EACFR,EAAS,CAAExF,KAAM,eAAgBiF,QAASU,EAASG,IAAI,CAACA,IAAI,CAAC4E,QAAQ,GAGrElF,EAAS,CAAExF,KAAM,eAAgBiF,QAAS,IAAIU,EAASG,IAAI,CAACA,IAAI,CAAC4E,QAAQ,IAAK3F,EAAM2F,QAAQ,CAAC,GAGnG,CAAE,MAAOxJ,EAAY,KAEEA,EAAAA,EADrBoC,QAAQpC,KAAK,CAAC,0BAA2BA,GACzC,IAAMwM,EAAexM,CAAAA,OAAAA,CAAAA,EAAAA,EAAMyE,QAAQ,GAAdzE,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAgB4E,IAAI,GAApB5E,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAsBjB,OAAO,GAAI,0BACtDuF,EAAS,CAAExF,KAAM,YAAaiF,QAASyI,CAAa,GACpD7B,EAAU6B,EACZ,QAAU,CACRlI,EAAS,CAAExF,KAAM,cAAeiF,QAAS,EAAM,EACjD,CACF,EAGM2I,EAAc,MAAO9H,IAEzB,GAAI,GAAqBX,EAIzB,GAAI,CACFK,EAAS,CAAExF,KAAM,YAAaiF,QAAS,IAAK,GAE5C,IAAMU,EAAW,MAAM6H,EAAAA,EAAGA,CAACK,IAAI,CAAC,qBAAsB/H,GAEtD,GAAIH,EAASG,IAAI,CAAC7E,OAAO,CAAE,CACzB,IAAMhB,EAAU0F,EAASG,IAAI,CAACA,IAAI,CAGlCN,EAAS,CAAExF,KAAM,cAAeiF,QAAShF,CAAQ,GAGjDuF,EAAS,CACPxF,KAAM,mCACNiF,QAAS,CAAE+F,eAAgBlF,EAAKkF,cAAc,CAAE/K,QAAAA,CAAQ,CAC1D,GAGI8L,EAAUe,OAAO,EACnBf,EAAUe,OAAO,CAACgB,IAAI,CAAC,cAAe,CACpC9C,eAAgBlF,EAAKkF,cAAc,CACnC/K,QAAAA,CACF,GAGF6L,EAAY,eACd,CACF,CAAE,MAAO5K,EAAY,KAEEA,EAAAA,EADrBoC,QAAQpC,KAAK,CAAC,yBAA0BA,GACxC,IAAMwM,EAAexM,CAAAA,OAAAA,CAAAA,EAAAA,EAAMyE,QAAQ,GAAdzE,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAgB4E,IAAI,GAApB5E,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAsBjB,OAAO,GAAI,yBACtDuF,EAAS,CAAExF,KAAM,YAAaiF,QAASyI,CAAa,GACpD7B,EAAU6B,EACZ,CACF,EAGMK,EAAa,MAAO/C,IAExB,GAAI,GAAqB7F,EAIzB,GAAI,CACF,MAAMqI,EAAAA,EAAGA,CAACQ,KAAK,CAAC,2BAA0C1L,MAAA,CAAf0I,EAAe,SAC5D,CAAE,MAAO9J,EAAY,CACnBoC,QAAQpC,KAAK,CAAC,kCAAmCA,EACnD,CACF,EAkBM+M,EAAY,CAACjD,EAAwBQ,KACrCO,EAAUe,OAAO,EAAI3H,IACvB4G,EAAUe,OAAO,CAACgB,IAAI,CAAC,SAAU,CAC/B9C,eAAAA,EACAU,OAAQvG,EAAKC,GAAG,CAChBoG,SAAAA,CACF,GAGIS,EAAiBa,OAAO,EAC1BoB,aAAajC,EAAiBa,OAAO,EAGnCtB,GACFS,CAAAA,EAAiBa,OAAO,CAAGpM,WAAW,KACpCuN,EAAUjD,EAAgB,GAC5B,EAAG,MAGT,EAGMmD,EAAkB,UAEtB,GAAI,GAAqBhJ,EAIzB,GAAI,CACF,IAAMQ,EAAW,MAAM6H,EAAAA,EAAGA,CAACC,GAAG,CAAC,yBAE3B9H,CAAAA,EAASG,IAAI,CAAC7E,OAAO,EACvBuE,EAAS,CAAExF,KAAM,mBAAoBiF,QAASU,EAASG,IAAI,CAACA,IAAI,CAAC6E,WAAW,EAEhF,CAAE,MAAOzJ,EAAY,CACnBoC,QAAQpC,KAAK,CAAC,8BAA+BA,EAC/C,CACF,QAGAiH,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,KACJ6B,GAAmB7E,IACrBoI,IACAY,IAEJ,EAAG,CAACnE,EAAiB7E,EAAK,EAG1BgD,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,IACD,KACD8D,EAAiBa,OAAO,EAC1BoB,aAAajC,EAAiBa,OAAO,CAEzC,EACC,EAAE,EAiBH,GAAA7N,EAAAC,GAAA,EAAC0M,EAAY7K,QAAQ,EAACC,MAfO,CAC7B+D,MAAAA,EACAqJ,QAAS,CACPb,kBAAAA,EACAI,aAAAA,EACAC,YAAAA,EACAG,WAAAA,EACAM,iBA9EqB,IACnBtC,EAAUe,OAAO,EACnBf,EAAUe,OAAO,CAACgB,IAAI,CAAC,WAAY9C,EAEvC,EA2EIsD,kBAxEsB,IACpBvC,EAAUe,OAAO,EACnBf,EAAUe,OAAO,CAACgB,IAAI,CAAC,YAAa9C,GAEtCxF,EAAS,CAAExF,KAAM,oBAAqB,EACxC,EAoEIiO,UAAAA,EACAE,gBAAAA,CACF,CACF,WAIKxO,GAGP,CAGO,SAAS4O,IACd,IAAMhN,EAAUC,CAAAA,EAAAA,EAAAA,UAAAA,EAAWoK,GAE3B,GAAIrK,KAAYnD,IAAZmD,EACF,MAAM,MAAU,8CAGlB,OAAOA,CACT,wLCtYA,IAAMiC,EAAkC,CACtCgL,cAAe,EAAE,CACjB7D,YAAa,EACbV,QAAS,GACT/I,MAAO,KACPgE,WAAY,CACVc,KAAM,EACNG,MAAO,GACPsI,MAAO,EACPC,MAAO,CACT,CACF,EAGA,SAASC,EAAoB5J,CAAwB,CAAEC,CAA0B,EAC/E,OAAQA,EAAOhF,IAAI,EACjB,IAAK,cACH,MAAO,CAAE,GAAG+E,CAAK,CAAEkF,QAASjF,EAAOC,OAAO,CAE5C,KAAK,YACH,MAAO,CAAE,GAAGF,CAAK,CAAE7D,MAAO8D,EAAOC,OAAO,CAAEgF,QAAS,EAAM,CAE3D,KAAK,oBACH,MAAO,CACL,GAAGlF,CAAK,CACRyJ,cAAexJ,EAAOC,OAAO,CAACuJ,aAAa,CAC3CtJ,WAAYF,EAAOC,OAAO,CAACC,UAAU,CACrCyF,YAAa3F,EAAOC,OAAO,CAAC0F,WAAW,CACvCV,QAAS,GACT/I,MAAO,IACT,CAEF,KAAK,mBACH,MAAO,CACL,GAAG6D,CAAK,CACRyJ,cAAe,CAACxJ,EAAOC,OAAO,IAAKF,EAAMyJ,aAAa,CAAC,CACvD7D,YAAa5F,EAAM4F,WAAW,CAAG,CACnC,CAEF,KAAK,sBACH,MAAO,CACL,GAAG5F,CAAK,CACRyJ,cAAezJ,EAAMyJ,aAAa,CAAC5M,GAAG,CAACgN,GACrCA,EAAaxJ,GAAG,GAAKJ,EAAOC,OAAO,CAACG,GAAG,CAAGJ,EAAOC,OAAO,CAAG2J,EAE/D,CAEF,KAAK,sBACH,MAAO,CACL,GAAG7J,CAAK,CACRyJ,cAAezJ,EAAMyJ,aAAa,CAAC5N,MAAM,CAACgO,GACxCA,EAAaxJ,GAAG,GAAKJ,EAAOC,OAAO,CAEvC,CAEF,KAAK,eACH,MAAO,CACL,GAAGF,CAAK,CACRyJ,cAAezJ,EAAMyJ,aAAa,CAAC5M,GAAG,CAACgN,GACrCA,EAAaxJ,GAAG,GAAKJ,EAAOC,OAAO,CAACG,GAAG,CACnC,CAAE,GAAGwJ,CAAY,CAAEC,OAAQ,GAAMC,OAAQ,IAAIC,OAAOC,WAAW,EAAG,EAClEJ,GAENjE,YAAavK,KAAK6O,GAAG,CAAC,EAAGlK,EAAM4F,WAAW,CAAG,EAC/C,CAEF,KAAK,mBACH,MAAO,CACL,GAAG5F,CAAK,CACRyJ,cAAezJ,EAAMyJ,aAAa,CAAC5M,GAAG,CAACgN,GAAiB,EACtD,GAAGA,CAAY,CACfC,OAAQ,GACRC,OAAQ,IAAIC,OAAOC,WAAW,EAChC,IACArE,YAAa,CACf,CAEF,KAAK,mBACH,MAAO,CAAE,GAAG5F,CAAK,CAAE4F,YAAa3F,EAAOC,OAAO,CAEhD,SACE,OAAOF,CACX,CACF,CAGA,IAAMmK,EAAsBxP,CAAAA,EAAAA,EAAAA,aAAAA,EAAmDtB,KAAAA,GAOxE,SAASmB,EAAqBT,CAAuC,KAAvC,CAAEa,SAAAA,CAAQ,CAA6B,CAAvCb,EAC7B,CAACiG,EAAOS,EAAS,CAAGC,CAAAA,EAAAA,EAAAA,UAAAA,EAAWkJ,EAAqBnL,GACpD,CAAE2B,KAAAA,CAAI,CAAE6E,gBAAAA,CAAe,CAAE,CAAGG,CAAAA,EAAAA,EAAAA,EAAAA,IAC5B4B,EAAYC,CAAAA,EAAAA,EAAAA,MAAAA,EAAsB,MAElC1C,EAAQ6F,CAAAA,EAAAA,EAAAA,OAAAA,EAAQ,IAAM3G,EAAAA,YAAYA,CAACC,QAAQ,GAAI,EAAE,EAEjD4D,EAAS8C,CAAAA,EAAAA,EAAAA,OAAAA,EAAQ,IACrB,GAEA7L,QAAQoF,GAAG,CAAC,2CAEL4D,CAAAA,EAAAA,EAAAA,EAAAA,EAAGhO,EAAQC,GAAG,CAAC6Q,mBAAmB,EAAI,yBAA0B,CACrEnM,KAAM,iBACNsJ,WAAY,CAAC,YAAa,UAAU,CACpCK,SAAU,GACVJ,gBAAiB,GACjB6C,QAAS,GACTC,gBAAiB,GACjBzC,KAAM,CACJvD,MAAOA,CACT,CACF,IAdmB,KAelB,CAACA,EAAM,EAKJiG,EAAqB,qBAAOtJ,EAAAA,UAAAA,MAAAA,CAAAA,GAAAA,KAAAA,IAAAA,SAAAA,CAAAA,EAAAA,CAAAA,SAAAA,CAAAA,EAAAA,CAA+B,CAAC,EAEhE,GAAI,GAAqBd,EAIzB,GAAI,CACFK,EAAS,CAAExF,KAAM,cAAeiF,QAAS,EAAK,GAE9C,IAAMiB,EAAS,IAAIsJ,gBACnBC,OAAOC,OAAO,CAACzJ,GAAS0J,OAAO,CAAC,OAAC,CAACC,EAAK5O,EAAM,CAAAlC,QACvCkC,GACFkF,EAAO2J,MAAM,CAACD,EAAK5O,EAAMV,QAAQ,GAErC,GAEA,IAAMqF,EAAW,MAAM6H,EAAAA,EAAGA,CAACC,GAAG,CAAC,sBAAwCnL,MAAA,CAAlB4D,EAAO5F,QAAQ,IAEhEqF,CAAAA,EAASG,IAAI,CAAC7E,OAAO,EACvBuE,EAAS,CACPxF,KAAM,oBACNiF,QAASU,EAASG,IAAI,CAACA,IAAI,EAGjC,CAAE,MAAO5E,EAAY,KAEEA,EAAAA,EADrBoC,QAAQpC,KAAK,CAAC,gCAAiCA,GAC/C,IAAMwM,EAAexM,CAAAA,OAAAA,CAAAA,EAAAA,EAAMyE,QAAQ,GAAdzE,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAgB4E,IAAI,GAApB5E,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAsBjB,OAAO,GAAI,+BACtDuF,EAAS,CAAExF,KAAM,YAAaiF,QAASyI,CAAa,GACpD7M,EAAAA,EAAKA,CAACK,KAAK,CAACwM,EACd,CACF,EAGMK,EAAa,MAAO5N,IAExB,GAAI,GAAqBgF,EAIzB,GAAI,CACF,IAAMQ,EAAW,MAAM6H,EAAAA,EAAGA,CAACQ,KAAK,CAAC,sBAAyB1L,MAAA,CAAHnC,EAAG,SAEtDwF,CAAAA,EAASG,IAAI,CAAC7E,OAAO,EACvBuE,EAAS,CACPxF,KAAM,eACNiF,QAASU,EAASG,IAAI,CAACA,IAAI,CAAC8I,YAAY,EAG9C,CAAE,MAAO1N,EAAY,KAEEA,EAAAA,EADrBoC,QAAQpC,KAAK,CAAC,sCAAuCA,GACrD,IAAMwM,EAAexM,CAAAA,OAAAA,CAAAA,EAAAA,EAAMyE,QAAQ,GAAdzE,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAgB4E,IAAI,GAApB5E,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAsBjB,OAAO,GAAI,sCACtDY,EAAAA,EAAKA,CAACK,KAAK,CAACwM,EACd,CACF,EAGMoC,EAAgB,UAEpB,GAAI,GAAqB3K,EAIzB,GAAI,CAGEQ,CAFa,MAAM6H,EAAAA,EAAGA,CAACQ,KAAK,CAAC,gCAEpBlI,IAAI,CAAC7E,OAAO,GACvBuE,EAAS,CAAExF,KAAM,kBAAmB,GACpCa,EAAAA,EAAKA,CAACI,OAAO,CAAC,oCAElB,CAAE,MAAOC,EAAY,KAEEA,EAAAA,EADrBoC,QAAQpC,KAAK,CAAC,2CAA4CA,GAC1D,IAAMwM,EAAexM,CAAAA,OAAAA,CAAAA,EAAAA,EAAMyE,QAAQ,GAAdzE,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAgB4E,IAAI,GAApB5E,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAsBjB,OAAO,GAAI,2CACtDY,EAAAA,EAAKA,CAACK,KAAK,CAACwM,EACd,CACF,EAGMqC,EAAqB,MAAO5P,IAEhC,GAAI,GAAqBgF,EAIzB,GAAI,CAGEQ,CAFa,MAAM6H,EAAAA,EAAGA,CAAC7B,MAAM,CAAC,sBAAyBrJ,MAAA,CAAHnC,GAAAA,EAE3C2F,IAAI,CAAC7E,OAAO,GACvBuE,EAAS,CAAExF,KAAM,sBAAuBiF,QAAS9E,CAAG,GACpDU,EAAAA,EAAKA,CAACI,OAAO,CAAC,wBAElB,CAAE,MAAOC,EAAY,KAEEA,EAAAA,EADrBoC,QAAQpC,KAAK,CAAC,+BAAgCA,GAC9C,IAAMwM,EAAexM,CAAAA,OAAAA,CAAAA,EAAAA,EAAMyE,QAAQ,GAAdzE,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAgB4E,IAAI,GAApB5E,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAsBjB,OAAO,GAAI,gCACtDY,EAAAA,EAAKA,CAACK,KAAK,CAACwM,EACd,CACF,EAGMsC,EAAkB,IACtBxK,EAAS,CAAExF,KAAM,mBAAoBiF,QAAS2J,CAAa,GAG3D,IAAMqB,EAASC,SAgLYlQ,CAA0B,EACvD,IAAMmQ,EAAU,CACdlQ,QAAS,CAAEgC,KAAM,cAAK,EACtBmO,YAAa,CAAEnO,KAAM,cAAK,EAC1BoD,SAAU,CAAEpD,KAAM,cAAK,EACvBoO,MAAO,CAAEpO,KAAM,IAAK,EACpBqO,OAAQ,CAAErO,KAAM,cAAK,EACrBqD,QAAS,CAAErD,KAAM,cAAK,EACtBsO,OAAQ,CAAEtO,KAAM,cAAK,CACvB,EAEA,OAAOkO,CAAO,CAACnQ,EAAK,EAAImQ,EAAQI,MAAM,EA3LC3B,EAAa5O,IAAI,EACtDa,EAAAA,EAAKA,CAACI,OAAO,CACX,GAAAhC,EAAA6B,IAAA,EAACY,MAAAA,WACC,GAAAzC,EAAAC,GAAA,EAACwC,MAAAA,CAAIC,UAAU,yBAAiBiN,EAAa4B,KAAK,GAClD,GAAAvR,EAAAC,GAAA,EAACwC,MAAAA,CAAIC,UAAU,8BAAsBiN,EAAa6B,IAAI,MAExD,CACEvQ,SAAU,IACV+B,KAAMgO,EAAOhO,IAAI,CACjByO,MAAO,CACLC,WAAY,UACZC,MAAO,MACT,CACF,EAEJ,EAEMC,EAAiB,UAErB,GAAI,GAAqB1L,EAIzB,GAAI,CACF,IAAMQ,EAAW,MAAM6H,EAAAA,EAAGA,CAACC,GAAG,CAAC,kCAE3B9H,CAAAA,EAASG,IAAI,CAAC7E,OAAO,EACvBuE,EAAS,CACPxF,KAAM,mBACNiF,QAASU,EAASG,IAAI,CAACA,IAAI,CAAC6E,WAAW,EAG7C,CAAE,MAAOzJ,EAAY,CACnBoC,QAAQpC,KAAK,CAAC,8BAA+BA,EAC/C,CACF,QAGAiH,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,KACR,GAAI,GAAqBhD,GAASkH,EAwElC,OAtEA/I,QAAQoF,GAAG,CAAC,gDAGZ2D,EAAOU,EAAE,CAAC,UAAW,KACnBzJ,QAAQoF,GAAG,CAAC,0DAGZhI,WAAW,KACT,GAAI,CACF4C,QAAQoF,GAAG,CAAC,sEACd,CAAE,MAAOoI,EAAG,CACVxN,QAAQoF,GAAG,CAAC,yBACd,CACF,EAAG,KAGCvD,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAMC,GAAG,GACXiH,EAAOyB,IAAI,CAAC,uBAAwB3I,EAAKC,GAAG,CAEhD,GAEAiH,EAAOU,EAAE,CAAC,gBAAiB,IACzBzJ,QAAQoF,GAAG,CAAC,wEAA+DxH,EAAMjB,OAAO,CAE1F,GAEAoM,EAAOU,EAAE,CAAC,aAAc,IACtBzJ,QAAQoF,GAAG,CAAC,oCAA2ByE,GACxB,yBAAXA,IACF7J,QAAQoF,GAAG,CAAC,6DACZhI,WAAW,KACT2L,EAAOe,OAAO,EAChB,EAAG,KAEP,GAEAf,EAAOU,EAAE,CAAC,YAAa,IACrBzJ,QAAQoF,GAAG,CAAC,wCAA+B2E,EAAe,YACtDlI,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAMC,GAAG,GACXiH,EAAOyB,IAAI,CAAC,uBAAwB3I,EAAKC,GAAG,CAEhD,GAGAiH,EAAOU,EAAE,CAAC,mBAAoB,IAC5BiD,EAAgBlK,EAAK8I,YAAY,CACnC,GAGAvC,EAAOU,EAAE,CAAC,uBAAwB,IAChCvH,EAAS,CACPxF,KAAM,sBACNiF,QAASa,EAAK8I,YAAY,EAE9B,GAGAvC,EAAOU,EAAE,CAAC,uBAAwB,IAChCvH,EAAS,CACPxF,KAAM,sBACNiF,QAASa,EAAK3F,EAAE,EAEpB,GAGAkM,EAAOe,OAAO,GAGdrB,EAAUe,OAAO,CAAGT,EAEb,KACDA,IACFA,EAAO0E,GAAG,CAAC,WACX1E,EAAO0E,GAAG,CAAC,iBACX1E,EAAO0E,GAAG,CAAC,cACX1E,EAAO0E,GAAG,CAAC,aACX1E,EAAO0E,GAAG,CAAC,mBACX1E,EAAO0E,GAAG,CAAC,oBACX1E,EAAO0E,GAAG,CAAC,oBACX1E,EAAO0E,GAAG,CAAC,wBACX1E,EAAO0E,GAAG,CAAC,wBACX1E,EAAOiB,UAAU,IAEnBvB,EAAUe,OAAO,CAAG,IACtB,CACF,EAAG,CAAC9C,EAAiB7E,EAAMkH,EAAO,EAGlClE,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,KACJ6B,GAAmB7E,IACrBoK,IACAsB,IAEJ,EAAG,CAAC7G,EAAiB7E,EAAK,EAG1BgD,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,KACR,GAAI,CAAC6B,GAAmB,CAAC7E,EAAM,OAE/B,IAAM6L,EAAWC,YAAY,KAC3BJ,GACF,EAAG,KAEH,MAAO,IAAMK,cAAcF,EAC7B,EAAG,CAAChH,EAAiB7E,EAAK,EAaxB,GAAAlG,EAAAC,GAAA,EAACgQ,EAAoBnO,QAAQ,EAACC,MAXO,CACrC+D,MAAAA,EACAwK,mBAAAA,EACAxB,WAAAA,EACA+B,cAAAA,EACAC,mBAAAA,EACAC,gBAAAA,EACAa,eAAAA,CACF,WAIKlR,GAGP,CAGO,SAASwR,IACd,IAAM5P,EAAUC,CAAAA,EAAAA,EAAAA,UAAAA,EAAW0N,GAE3B,GAAI3N,KAAYnD,IAAZmD,EACF,MAAM,MAAU,+DAGlB,OAAOA,CACT,0CC5YIiM,+eA2CA4D,EA0BAC,EAhEIC,6CAJR,GAAI,CAIF9D,EAAAA,OAAM8D,CAAAA,EAAAC,EAAAC,CAAA,CAAeC,MAAM,GAArBH,KAAA,IAAAA,EAAA,OAAAA,EAAAI,IAAA,CAACC,EAAAA,CAAKA,CAAkB,CAC5BC,QAAS,CAAC,KAER,IAAMC,EAAUC,CADJxT,EAAQC,GAAG,CAAC4N,wBAAwB,EAAI,IAChCC,OAAO,CAAC,MAAO,GAGA,EACjC,IAAM2F,EAAWhU,OAAOgL,QAAQ,CAACgJ,QAAQ,CACzC,GAAIA,eAAAA,GAA6BA,mBAAAA,EAC/B,MAAO,wBAEX,QAGA,GAAqB,wBAEvB,KACAC,QAAS,IACTxF,gBAAiB,GACjByF,QAAS,CACP,eAAgB,kBAClB,CACF,EACF,CAAE,MAAAnB,EAAM,CACNtD,EAAMpP,KAAAA,CACR,CACKoP,GAAQA,EAAIC,GAAG,EAAKD,EAAIK,IAAI,EAC/BL,CAAAA,EAAMmE,EAAAA,CAAKA,EAIN,IAAMO,EAAc,CACzBC,SAAU,IACD3E,EAAIC,GAAG,CAAC,iBAEnB,EAGKD,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,OAAD4D,CAAAA,EAAA5D,EAAc4E,YAAY,GAA1BhB,KAAA,IAAAA,EAAA,OAAAA,EAA4BiB,OAAO,GACrC7E,EAAI4E,YAAY,CAACC,OAAO,CAACC,GAAG,CAC1B,IACE,IAAMhJ,EAAQd,EAAAA,YAAYA,CAACC,QAAQ,GAC/Ba,IACF2G,EAAOgC,OAAO,CAAGhC,EAAOgC,OAAO,EAAI,CAAC,EACpChC,EAAOgC,OAAO,CAACM,aAAa,CAAG,UAAgBjQ,MAAA,CAANgH,IAE3C,GAAI,CAEF,GAAIkJ,CADa,OAAQ,MAAO,QAAS,SAAS,CAACnK,QAAQ,CAAC,CAAC4H,EAAOwC,MAAM,EAAI,OAAOC,WAAW,KACjF,oBAAOC,SAA0B,CAC9C,IAAMC,EAAQD,SAASE,MAAM,CAACD,KAAK,CAAC,8BAC9BE,EAAOF,EAAQG,mBAAmBH,CAAK,CAAC,EAAE,EAAIxU,KAAAA,EAChD0U,GACD7C,CAAAA,EAAOgC,OAAO,CAAS,eAAe,CAAGa,CAAAA,EAE3C7C,EAAOgC,OAAO,CAAS,kBAAkB,CAAGe,CAAAA,EAAAA,EAAAA,CAAAA,GAC/C,CACF,CAAE,MAAAlC,EAAM,CAAC,CACT,OAAOb,CACT,EACA,GAAgBgD,QAAQC,MAAM,CAAChS,IAK9BsM,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,OAAD6D,CAAAA,EAAA7D,EAAc4E,YAAY,GAA1Bf,KAAA,IAAAA,EAAA,OAAAA,EAA4B1L,QAAQ,GACtC6H,EAAI4E,YAAY,CAACzM,QAAQ,CAAC2M,GAAG,CAC3B,GAAmB3M,EACnB,QAEMzE,EAmBAA,EAlBiBA,EAAAA,EADrB,GAAIA,CAAAA,OAAAA,CAAAA,EAAAA,EAAMyE,QAAQ,GAAdzE,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAgBuF,MAAM,IAAK,IAAK,CAClC,IAAMqC,EAAa5H,CAAAA,OAAAA,CAAAA,EAAAA,EAAMyE,QAAQ,GAAdzE,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAgB4E,IAAI,GAApB5E,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAsB4H,UAAU,GAAI,GACvDxF,QAAQC,IAAI,CAAC,sCAAiDjB,MAAA,CAAXwG,EAAW,cAK5D,GAAI,CACF,GAAM,CAAEjI,MAAAA,CAAK,CAAE,CAAGsS,EAAQ,OAC1BtS,EAAMK,KAAK,CAAC,kCAA6CoB,MAAA,CAAXwG,EAAW,iCAC3D,CAAE,MAAAgI,EAAM,CACNsC,MAAM,kCAA6C9Q,MAAA,CAAXwG,EAAW,iCACrD,CAIF,OAAOmK,QAAQC,MAAM,CAAChS,EACxB,CAWA,MATIA,CAAAA,OAAAA,CAAAA,EAAAA,EAAMyE,QAAQ,GAAdzE,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAgBuF,MAAM,IAAK,MAC7B+B,EAAAA,YAAYA,CAACK,KAAK,GACoB9K,OAAOgL,QAAQ,CAACT,QAAQ,CAACD,QAAQ,CAAC,WACtEtK,CAAAA,OAAOgL,QAAQ,CAACC,IAAI,CAAG,WAGtB9H,EAAMyE,QAAQ,EACjBrC,QAAQpC,KAAK,CAAC,iBAAkBA,EAAMjB,OAAO,EAExCgT,QAAQC,MAAM,CAAChS,EACxB,GAkDG,IAAMyH,EAAU,CAErBM,MAAO,GACEuE,EAAIK,IAAI,CAAC,kBAAmBwF,GAAaC,IAAI,CAAC,GAAYC,EAAEzN,IAAI,EAIzE6D,SAAU,GACD6D,EAAIK,IAAI,CAAC,qBAAsBxE,GAAUiK,IAAI,CAAC,GAAYC,EAAEzN,IAAI,EAIzE+D,OAAQ,IACC2D,EAAIK,IAAI,CAAC,oBAAoByF,IAAI,CAAC,GAAYC,EAAEzN,IAAI,EAI7D8C,eAAgB,IACP4E,EAAIC,GAAG,CAAC,gBAIjB+F,aAAc,IACLhG,EAAIK,IAAI,CAAC,qBAAqByF,IAAI,CAAC,GAAYC,EAAEzN,IAAI,CAEhE,EAEa2N,EAAU,CAErBC,WAAY,IACHlG,EAAIC,GAAG,CAAC,sBAAsB6F,IAAI,CAAC,GAAYC,EAAEzN,IAAI,EAI9D6N,cAAe,GACNnG,EAAIoG,GAAG,CAAC,qBAAsB9N,GAAMwN,IAAI,CAAC,GAAYC,EAAEzN,IAAI,EAIpE+N,aAAc,IACZ,IAAMC,EAAO,IAAIC,SAEjB,OADAD,EAAKjE,MAAM,CAAC,SAAUmE,GACfxG,EAAIK,IAAI,CAAC,4BAA6BiG,EAAM,CACjD7B,QAAS,CAAE,eAAgB,qBAAsB,CACnD,GAAGqB,IAAI,CAAC,GAAYC,EAAEzN,IAAI,CAC5B,EAGAmO,sBAAuB,CAACrE,EAAasE,IAC5B1G,EAAIC,GAAG,CAAE,6BAA6B,CAAEvH,OAAQ,CAAE0J,IAAAA,EAAKsE,YAAAA,CAAY,CAAE,GAAGZ,IAAI,CAAC,GAAYC,EAAEzN,IAAI,CAE1G,EAEaqO,EAAiB,CAE5BC,gBAAiB,eAACnO,EAAAA,UAAAA,MAAAA,CAAAA,GAAAA,KAAAA,IAAAA,SAAAA,CAAAA,EAAAA,CAAAA,SAAAA,CAAAA,EAAAA,CAAe,CAAC,EAC1BC,EAAS,IAAIsJ,gBAInB,OAHAC,OAAOC,OAAO,CAACzJ,GAAS0J,OAAO,CAAC,OAAC,CAACC,EAAK5O,EAAM,CAAAlC,EACvCkC,GAAOkF,EAAO2J,MAAM,CAACD,EAAK5O,EAAMV,QAAQ,GAC9C,GACOkN,EAAIC,GAAG,CAAC,qBAAuCnL,MAAA,CAAlB4D,EAAO5F,QAAQ,IACrD,EAGA+T,kBAAmB,GACV7G,EAAIK,IAAI,CAAC,oBAAqB/H,GAIvCwO,kBAAmB,CAACnU,EAAY2F,IACvB0H,EAAIoG,GAAG,CAAC,qBAAwBtR,MAAA,CAAHnC,GAAM2F,GAI5CyO,kBAAmB,GACV/G,EAAI7B,MAAM,CAAC,qBAAwBrJ,MAAA,CAAHnC,GAE3C,EAEaqU,EAAkB,CAE7BC,gBAAiB,GACRjH,EAAIC,GAAG,CAAC,qBAA+BnL,MAAA,CAAVoS,IAItCC,gBAAiB,GACRnH,EAAIK,IAAI,CAAC,oBAAqB/H,GAIvC8O,mBAAoB,CAACzU,EAAY2F,IACxB0H,EAAIoG,GAAG,CAAC,qBAAwBtR,MAAA,CAAHnC,GAAM2F,GAI5C+O,mBAAoB,GACXrH,EAAI7B,MAAM,CAAC,qBAAwBrJ,MAAA,CAAHnC,GAE3C,EAEa2U,EAAkB,CAE7BC,iBAAkB,IACTvH,EAAIC,GAAG,CAAC,sBAIjBM,WAAY,GACHP,EAAIQ,KAAK,CAAC,sBAAyB1L,MAAA,CAAHnC,EAAG,UAI5C2P,cAAe,IACNtC,EAAIQ,KAAK,CAAC,8BAErB,EA6DagH,EAAa,CAExBC,sBAAuB,GACdzH,EAAIK,IAAI,CAAC,+BAAgC/H,GAIlDoP,kBAAmB,GACV1H,EAAIC,GAAG,CAAC,wBAAyB,CAAEvH,OAAAA,CAAO,GAInDiP,YAAa,GACJ3H,EAAIC,GAAG,CAAC,yBAA0B,CAAEvH,OAAAA,CAAO,GAIpDkP,gBAAiB,IACR5H,EAAIC,GAAG,CAAC,uBAIjBvG,cAAe,CAACmO,EAAmBvP,IAC1B0H,EAAIK,IAAI,CAAC,iBAA2BvL,MAAA,CAAV+S,EAAU,WAAUvP,EAEzD,EAEaF,EAAW,CAEtBC,YAAa,IACJ2H,EAAIC,GAAG,CAAC,uBAIjB6H,SAAU,IACD9H,EAAIC,GAAG,CAAC,oBAIjB8H,cAAe,IACN/H,EAAIC,GAAG,CAAC,yBAIjBrH,SAAU,GACDoH,EAAIC,GAAG,CAAC,mBAAoB,CAAEvH,OAAAA,CAAO,GAG9CI,YAAa,GACJkH,EAAIC,GAAG,CAAC,oBAAuBnL,MAAA,CAAHnC,IAGrCoG,eAAgB,CAACpG,EAAYoC,IACpBiL,EAAIQ,KAAK,CAAC,oBAAuB1L,MAAA,CAAHnC,EAAG,SAAQ,CAAEoC,KAAAA,CAAK,GAGzDiE,iBAAkB,CAACkF,EAAgBjF,IAC1B+G,EAAIQ,KAAK,CAAC,oBAA2B1L,MAAA,CAAPoJ,EAAO,WAAU,CAAEjF,OAAAA,CAAO,GAGjEC,WAAY,GACH8G,EAAI7B,MAAM,CAAC,oBAAuBrJ,MAAA,CAAHnC,IAIxCyG,aAAc,GACL4G,EAAIC,GAAG,CAAC,uBAAwB,CAAEvH,OAAAA,CAAO,GAGlDW,gBAAiB,CAAC1G,EAAY2F,IACrB0H,EAAIQ,KAAK,CAAC,wBAA2B1L,MAAA,CAAHnC,EAAG,YAAW2F,GAGzDiB,eAAgB,GACPyG,EAAI7B,MAAM,CAAC,wBAA2BrJ,MAAA,CAAHnC,IAI5C8G,YAAa,GACJuG,EAAIC,GAAG,CAAC,sBAAuB,CAAEvH,OAAAA,CAAO,GAGjDgB,cAAe,CAAC/G,EAAY2F,IACnB0H,EAAIQ,KAAK,CAAC,uBAA0B1L,MAAA,CAAHnC,EAAG,WAAU2F,GAIvDsB,QAAS,GACAoG,EAAIC,GAAG,CAAC,kBAAmB,CAAEvH,OAAAA,CAAO,EAE/C,EAGasP,EAAgB,CAE3BC,SAAU,MAAOxP,IACf,IAAMC,EAAS,IAAIsJ,gBAOnB,MANIvJ,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAASyP,KAAK,GAAExP,EAAO2J,MAAM,CAAC,QAAS5J,EAAQyP,KAAK,EACpDzP,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAS0P,SAAS,IAAKvX,KAAAA,GAAW8H,EAAO2J,MAAM,CAAC,YAAa5J,EAAQ0P,SAAS,CAACrV,QAAQ,IACvF2F,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAASD,IAAI,GAAEE,EAAO2J,MAAM,CAAC,OAAQ5J,EAAQD,IAAI,CAAC1F,QAAQ,IAC1D2F,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAASE,KAAK,GAAED,EAAO2J,MAAM,CAAC,QAAS5J,EAAQE,KAAK,CAAC7F,QAAQ,IAG1DqF,CADU,MAAM6H,EAAIC,GAAG,CAAC,oBAAsCnL,MAAA,CAAlB4D,EAAO5F,QAAQ,MAClDwF,IAAI,EAItB8P,aAAc,qBAAO5P,EAAAA,UAAAA,MAAAA,CAAAA,GAAAA,KAAAA,IAAAA,SAAAA,CAAAA,EAAAA,CAAAA,SAAAA,CAAAA,EAAAA,CAAO,EAAGG,EAAAA,UAAAA,MAAAA,CAAAA,GAAAA,KAAAA,IAAAA,SAAAA,CAAAA,EAAAA,CAAAA,SAAAA,CAAAA,EAAAA,CAAQ,GAErC,MAAOR,CADU,MAAM6H,EAAIC,GAAG,CAAC,kCAAgDtH,MAAAA,CAAdH,EAAK,WAAe1D,MAAA,CAAN6D,GAAAA,EAC/DL,IAAI,EAItB+P,WAAY,MAAOC,GAEVnQ,CADU,MAAM6H,EAAIK,IAAI,CAAC,mBAAoBiI,EAAAA,EACpChQ,IAAI,CAItBiQ,eAAgB,MAAOC,GAEdrQ,CADU,MAAM6H,EAAIC,GAAG,CAAC,oBAA2BnL,MAAA,CAAP0T,GAAAA,EACnClQ,IAAI,CAItBmQ,SAAU,MAAOD,EAAgBE,IAExBvQ,CADU,MAAM6H,EAAIK,IAAI,CAAC,oBAA2BvL,MAAA,CAAP0T,EAAO,SAAQE,GAAY,CAAC,IAChEpQ,IAAI,CAItBqQ,UAAW,MAAOH,GAETrQ,CADU,MAAM6H,EAAIK,IAAI,CAAC,oBAA2BvL,MAAA,CAAP0T,EAAO,YAC3ClQ,IAAI,CAItBsQ,WAAY,MAAOJ,EAAgBF,IAE1BnQ,CADU,MAAM6H,EAAIoG,GAAG,CAAC,oBAA2BtR,MAAA,CAAP0T,GAAUF,EAAAA,EAC7ChQ,IAAI,CAItBuQ,WAAY,MAAOL,GAEVrQ,CADU,MAAM6H,EAAI7B,MAAM,CAAC,oBAA2BrJ,MAAA,CAAP0T,GAAAA,EACtClQ,IAAI,EAKXwQ,EAAmB,CAE9B1P,aAAc,MAAOX,IACnB,IAAMC,EAAS,IAAIsJ,gBAWnB,MAVIvJ,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAASsQ,QAAQ,GAAErQ,EAAO2J,MAAM,CAAC,WAAY5J,EAAQsQ,QAAQ,EAC7DtQ,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAASyP,KAAK,GAAExP,EAAO2J,MAAM,CAAC,QAAS5J,EAAQyP,KAAK,EACpDzP,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAASuQ,MAAM,GAAEtQ,EAAO2J,MAAM,CAAC,SAAU5J,EAAQuQ,MAAM,EACvDvQ,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAASwQ,MAAM,GAAEvQ,EAAO2J,MAAM,CAAC,SAAU5J,EAAQwQ,MAAM,EACvDxQ,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAASyQ,SAAS,GAAExQ,EAAO2J,MAAM,CAAC,YAAa5J,EAAQyQ,SAAS,EAChEzQ,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAASD,IAAI,GAAEE,EAAO2J,MAAM,CAAC,OAAQ5J,EAAQD,IAAI,CAAC1F,QAAQ,IAC1D2F,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAASE,KAAK,GAAED,EAAO2J,MAAM,CAAC,QAAS5J,EAAQE,KAAK,CAAC7F,QAAQ,IAC7D2F,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAS0Q,QAAQ,GAAEzQ,EAAO2J,MAAM,CAAC,WAAY5J,EAAQ0Q,QAAQ,CAACrW,QAAQ,IAGnEqF,CADU,MAAM6H,EAAIC,GAAG,CAAC,uBAAyCnL,MAAA,CAAlB4D,EAAO5F,QAAQ,MACrDwF,IAAI,EAItB8Q,qBAAsB,SAEbjR,CADU,MAAM6H,EAAIC,GAAG,CAAC,iCACf3H,IAAI,CAItB+Q,cAAe,SAENlR,CADU,MAAM6H,EAAIC,GAAG,CAAC,mCACf3H,IAAI,CAItBgR,UAAW,SAEFnR,CADU,MAAM6H,EAAIC,GAAG,CAAC,+BACf3H,IAAI,CAItBiR,YAAa,MAAO5W,GAEXwF,CADU,MAAM6H,EAAIC,GAAG,CAAC,uBAA0BnL,MAAA,CAAHnC,GAAAA,EACtC2F,IAAI,CAItBkR,eAAgB,MAAOC,IACrB,IAAMC,EAAW,IAAInD,SAcrB,OAbAmD,EAASrH,MAAM,CAAC,QAASoH,EAAazG,KAAK,EAC3C0G,EAASrH,MAAM,CAAC,cAAeoH,EAAaE,WAAW,EACvDD,EAASrH,MAAM,CAAC,WAAYoH,EAAaV,QAAQ,EACjDW,EAASrH,MAAM,CAAC,QAASoH,EAAavB,KAAK,EACvCuB,EAAaG,IAAI,EAAEF,EAASrH,MAAM,CAAC,OAAQoH,EAAaG,IAAI,EAC5DH,EAAaI,UAAU,EAAEH,EAASrH,MAAM,CAAC,aAAcoH,EAAaI,UAAU,CAAC/W,QAAQ,IAC3F4W,EAASrH,MAAM,CAAC,OAAQoH,EAAajD,IAAI,EAOlCrO,CALU,MAAM6H,EAAIK,IAAI,CAAC,sBAAuBqJ,EAAU,CAC/DjF,QAAS,CACP,eAAgB,qBAClB,CACF,IACgBnM,IAAI,EAItBwR,aAAc,MAAOnX,EAAYoX,IAExB5R,CADU,MAAM6H,EAAIK,IAAI,CAAC,uBAA0BvL,MAAA,CAAHnC,EAAG,SAAQ,CAAEoX,OAAAA,CAAO,IAC3DzR,IAAI,CAItB0R,eAAgB,MAAOrX,EAAY8W,IAE1BtR,CADU,MAAM6H,EAAIoG,GAAG,CAAC,uBAA0BtR,MAAA,CAAHnC,GAAM8W,EAAAA,EAC5CnR,IAAI,CAItBiB,eAAgB,MAAO5G,GAEdwF,CADU,MAAM6H,EAAI7B,MAAM,CAAC,uBAA0BrJ,MAAA,CAAHnC,GAAAA,EACzC2F,IAAI,CAItB2R,iBAAkB,MAAOtX,GAIhBwF,CAHU,MAAM6H,EAAIC,GAAG,CAAC,uBAA0BnL,MAAA,CAAHnC,EAAG,aAAY,CACnEuX,aAAc,MAChB,IACgB5R,IAAI,EAKX6R,EAAY,CAEvBC,kBAAmB,MAAO3R,IACxB,IAAMC,EAAS,IAAIsJ,gBAKnB,OAJAC,OAAOC,OAAO,CAACzJ,GAAW,CAAC,GAAG0J,OAAO,CAAC,OAAC,CAACC,EAAK5O,EAAM,CAAAlC,EAC7CkC,GAASA,QAAAA,GAAiBkF,EAAO2J,MAAM,CAACD,EAAK5O,EAAMV,QAAQ,GACjE,GAEOqF,CADU,MAAM6H,EAAIC,GAAG,CAAC,wBAA0CnL,MAAA,CAAlB4D,EAAO5F,QAAQ,MACtDwF,IAAI,EAItB+R,UAAW,MAAO1X,GAETwF,CADU,MAAM6H,EAAIC,GAAG,CAAC,gBAAmBnL,MAAA,CAAHnC,GAAAA,EAC/B2F,IAAI,CAItBgS,WAAY,MAAOC,GAEVpS,CADU,MAAM6H,EAAIK,IAAI,CAAC,gBAAyBvL,MAAA,CAATyV,EAAS,WACzCjS,IAAI,CAItBkS,YAAa,MAAOD,GAEXpS,CADU,MAAM6H,EAAIK,IAAI,CAAC,gBAAyBvL,MAAA,CAATyV,EAAS,YACzCjS,IAAI,EAKXmS,EAAmB,CAE9BC,WAAY,MAAOjS,IACjB,IAAMC,EAAS,IAAIsJ,gBAKnB,OAJAC,OAAOC,OAAO,CAACzJ,GAAW,CAAC,GAAG0J,OAAO,CAAC,OAAC,CAACC,EAAK5O,EAAM,CAAAlC,EAC7CkC,GAAOkF,EAAO2J,MAAM,CAACD,EAAK5O,EAAMV,QAAQ,GAC9C,GAEOqF,CADU,MAAM6H,EAAIC,GAAG,CAAC,uBAAyCnL,MAAA,CAAlB4D,EAAO5F,QAAQ,MACrDwF,IAAI,EAItB+R,UAAW,MAAO1X,GAETwF,CADU,MAAM6H,EAAIC,GAAG,CAAC,uBAA0BnL,MAAA,CAAHnC,GAAAA,EACtC2F,IAAI,CAItBqS,aAAc,MAAOrS,GAEZH,CADU,MAAM6H,EAAIK,IAAI,CAAC,sBAAuB/H,EAAAA,EACvCA,IAAI,CAItBsS,aAAc,MAAOjY,EAAY2F,IAExBH,CADU,MAAM6H,EAAIoG,GAAG,CAAC,uBAA0BtR,MAAA,CAAHnC,GAAM2F,EAAAA,EAC5CA,IAAI,CAItBuS,aAAc,MAAOlY,GAEZwF,CADU,MAAM6H,EAAI7B,MAAM,CAAC,uBAA0BrJ,MAAA,CAAHnC,GAAAA,EACzC2F,IAAI,CAItBwS,YAAa,MAAOP,GAEXpS,CADU,MAAM6H,EAAIK,IAAI,CAAC,uBAAgCvL,MAAA,CAATyV,EAAS,YAChDjS,IAAI,CAItByS,aAAc,MAAOC,EAAmB1S,IAE/BH,CADU,MAAM6H,EAAIK,IAAI,CAAC,+BAAyCvL,MAAA,CAAVkW,EAAU,WAAU1S,EAAAA,EACnEA,IAAI,CAItB+Q,cAAe,SAENlR,CADU,MAAM6H,EAAIC,GAAG,CAAC,mCACf3H,IAAI,CAItBwP,SAAU,MAAOyC,GAERpS,CADU,MAAM6H,EAAIC,GAAG,CAAC,uBAAgCnL,MAAA,CAATyV,EAAS,YAC/CjS,IAAI,EAKX2S,EAAe,CAE1BC,SAAU,qBAAOzS,EAAAA,UAAAA,MAAAA,CAAAA,GAAAA,KAAAA,IAAAA,SAAAA,CAAAA,EAAAA,CAAAA,SAAAA,CAAAA,EAAAA,CAAe,CAAC,EACzBC,EAAS,IAAIsJ,gBAKnB,OAJAC,OAAOC,OAAO,CAACzJ,GAAS0J,OAAO,CAAC,OAAC,CAACC,EAAK5O,EAAM,CAAAlC,QACvCkC,GAAuCkF,EAAO2J,MAAM,CAACD,EAAK5O,EAAMV,QAAQ,GAC9E,GAEOqF,CADU,MAAM6H,EAAIC,GAAG,CAAC,mBAAqCnL,MAAA,CAAlB4D,EAAO5F,QAAQ,MACjDwF,IAAI,EAItB6S,QAAS,MAAOC,GAEPjT,CADU,MAAM6H,EAAIC,GAAG,CAAC,mBAA0BnL,MAAA,CAAPsW,GAAAA,EAClC9S,IAAI,CAItB+S,UAAW,MAAOD,GAETjT,CADU,MAAM6H,EAAIK,IAAI,CAAC,mBAA0BvL,MAAA,CAAPsW,EAAO,YAC1C9S,IAAI,CAItBgT,WAAY,MAAON,EAAmB1S,IAE7BH,CADU,MAAM6H,EAAIK,IAAI,CAAC,2BAAqCvL,MAAA,CAAVkW,EAAU,WAAU1S,EAAAA,EAC/DA,IAAI,CAItBiT,eAAgB,MAAOP,GAEd7S,CADU,MAAM6H,EAAIC,GAAG,CAAC,2BAAqCnL,MAAA,CAAVkW,GAAAA,EAC1C1S,IAAI,CAItBkT,aAAc,MAAOJ,GAEZjT,CADU,MAAM6H,EAAIC,GAAG,CAAC,mBAA0BnL,MAAA,CAAPsW,EAAO,YACzC9S,IAAI,CAItBmT,2BAA4B,SAEnBtT,CADU,MAAM6H,EAAIC,GAAG,CAAC,6CACf3H,IAAI,CAItBoT,oBAAqB,SAEZvT,CADU,MAAM6H,EAAIK,IAAI,CAAC,0CAChB/H,IAAI,CAGtBqT,aAAc,SAELxT,CADU,MAAM6H,EAAIK,IAAI,CAAC,oCAChB/H,IAAI,CAGtBsT,eAAgB,SAEPzT,CADU,MAAM6H,EAAIK,IAAI,CAAC,sCAChB/H,IAAI,CAGtBuT,iBAAkB,SACT7L,EAAIK,IAAI,CAAC,sCAEpB,EAGayL,EAA4B,CAEvCC,iBAAkB,MAAOzT,GAEhBH,CADU,MAAM6H,EAAIK,IAAI,CAAC,+BAAgC/H,EAAAA,EAChDA,IAAI,CAItB0T,cAAe,SAEN7T,CADU,MAAM6H,EAAIC,GAAG,CAAC,iCACf3H,IAAI,CAItB2T,eAAgB,MAAO3T,GAEdH,CADU,MAAM6H,EAAIoG,GAAG,CAAC,wCAAyC9N,EAAAA,EACxDA,IAAI,CAItB4T,oBAAqB,MAAO5T,GAEnBH,CADU,MAAM6H,EAAIoG,GAAG,CAAC,wCAAyC9N,EAAAA,EACxDA,IAAI,CAItB6T,aAAc,SAELhU,CADU,MAAM6H,EAAIC,GAAG,CAAC,2CACf3H,IAAI,CAItB8T,mBAAoB,SAEXjU,CADU,MAAM6H,EAAIC,GAAG,CAAC,iDACf3H,IAAI,CAItB+T,uBAAwB,MAAOC,GAEtBnU,CADU,MAAM6H,EAAIK,IAAI,CAAC,gDAAiEvL,MAAA,CAAjBwX,EAAiB,eACjFhU,IAAI,CAItBiU,iBAAkB,SAETpU,CADU,MAAM6H,EAAIC,GAAG,CAAC,0CACf3H,IAAI,CAItBkU,gBAAiB,MAAOlU,GAEfH,CADU,MAAM6H,EAAIK,IAAI,CAAC,iDAAkD/H,EAAAA,EAClEA,IAAI,CAItBmU,qBAAsB,MAAOC,GAEpBvU,CADU,MAAM6H,EAAIK,IAAI,CAAC,kDAA4DvL,MAAA,CAAV4X,EAAU,eAC5EpU,IAAI,EAKXqU,EAAoB,IAC/BC,aAAaC,OAAO,CAAC,eAAgB/Q,EACvC,EA8BagR,EAAW,CACtBC,KAAM,MAAOrU,GACJsH,EAAIC,GAAG,CAAC,aAAc,CAAEvH,OAAAA,CAAO,GAExCuL,OAAQ,MAAO3L,GACN0H,EAAIK,IAAI,CAAC,aAAc/H,GAEhC6F,OAAQ,MAAOxL,GACNqN,EAAI7B,MAAM,CAAC,cAAiBrJ,MAAA,CAAHnC,GAEpC,EAsDaqa,EAAgB,CAE3BC,cAAe,MAAO3U,GAEbH,CADU,MAAM6H,EAAIK,IAAI,CAAC,4BAA6B/H,EAAAA,EAC7CA,IAAI,CAItB4U,cAAe,MAAO5U,GAEbH,CADU,MAAM6H,EAAIK,IAAI,CAAC,4BAA6B/H,EAAAA,EAC7CA,IAAI,CAItB6U,YAAa,MAAO1U,IAClB,IAAMC,EAAS,IAAIsJ,gBAKnB,OAJAC,OAAOC,OAAO,CAACzJ,GAAW,CAAC,GAAG0J,OAAO,CAAC,OAAC,CAACC,EAAK5O,EAAM,CAAAlC,EAC7CkC,GAAOkF,EAAO2J,MAAM,CAACD,EAAK5O,EAAMV,QAAQ,GAC9C,GAEOqF,CADU,MAAM6H,EAAIC,GAAG,CAAC,6BAA+CnL,MAAA,CAAlB4D,EAAO5F,QAAQ,MAC3DwF,IAAI,EAItB8U,sBAAuB,MAAOV,EAAmBpU,IAExCH,CADU,MAAM6H,EAAIoG,GAAG,CAAC,6BAAuCtR,MAAA,CAAV4X,EAAU,aAAYpU,EAAAA,EAClEA,IAAI,CAItB+U,wBAAyB,MAAO/U,GAEvBH,CADU,MAAM6H,EAAIK,IAAI,CAAC,mCAAoC/H,EAAAA,EACpDA,IAAI,CAItBgV,oBAAqB,MAAO7U,IAC1B,IAAMC,EAAS,IAAIsJ,gBAKnB,OAJAC,OAAOC,OAAO,CAACzJ,GAAW,CAAC,GAAG0J,OAAO,CAAC,OAAC,CAACC,EAAK5O,EAAM,CAAAlC,EAC7CkC,GAAOkF,EAAO2J,MAAM,CAACD,EAAK5O,EAAMV,QAAQ,GAC9C,GAEOqF,CADU,MAAM6H,EAAIC,GAAG,CAAC,uCAAyDnL,MAAA,CAAlB4D,EAAO5F,QAAQ,MACrEwF,IAAI,CAExB,EAGaiV,EAAsB,CAEjCC,WAAY,MAAOlV,GAEVH,CADU,MAAM6H,EAAIK,IAAI,CAAC,+BAAgC/H,EAAAA,EAChDA,IAAI,CAItBmV,SAAU,MAAOhV,IACf,IAAMC,EAAS,IAAIsJ,gBAKnB,OAJAC,OAAOC,OAAO,CAACzJ,GAAW,CAAC,GAAG0J,OAAO,CAAC,OAAC,CAACC,EAAK5O,EAAM,CAAAlC,EAC7CkC,GAAOkF,EAAO2J,MAAM,CAACD,EAAK5O,EAAMV,QAAQ,GAC9C,GAEOqF,CADU,MAAM6H,EAAIC,GAAG,CAAC,gCAAkDnL,MAAA,CAAlB4D,EAAO5F,QAAQ,MAC9DwF,IAAI,EAItBoV,QAAS,MAAOC,GAEPxV,CADU,MAAM6H,EAAIC,GAAG,CAAC,gCAAuCnL,MAAA,CAAP6Y,GAAAA,EAC/CrV,IAAI,CAItBsV,qBAAsB,MAAOtV,GAEpBH,CADU,MAAM6H,EAAIoG,GAAG,CAAC,wCAAyC9N,EAAAA,EACxDA,IAAI,CAItB8T,mBAAoB,MAAOuB,GAElBxV,CADU,MAAM6H,EAAIC,GAAG,CAAC,gCAAuCnL,MAAA,CAAP6Y,EAAO,sBACtDrV,IAAI,CAItBuV,iBAAkB,MAAOF,GAEhBxV,CADU,MAAM6H,EAAIC,GAAG,CAAC,gCAAuCnL,MAAA,CAAP6Y,EAAO,gBACtDrV,IAAI,EAKXwV,EAAsB,CAEjCC,kBAAmB,MAAOzV,GAEjBH,CADU,MAAM6H,EAAIK,IAAI,CAAC,kCAAmC/H,EAAAA,EACnDA,IAAI,CAItB6T,aAAc,MAAO1T,IACnB,IAAMC,EAAS,IAAIsJ,gBAKnB,OAJAC,OAAOC,OAAO,CAACzJ,GAAW,CAAC,GAAG0J,OAAO,CAAC,OAAC,CAACC,EAAK5O,EAAM,CAAAlC,EAC7CkC,GAAOkF,EAAO2J,MAAM,CAACD,EAAK5O,EAAMV,QAAQ,GAC9C,GAEOqF,CADU,MAAM6H,EAAIC,GAAG,CAAC,0BAA4CnL,MAAA,CAAlB4D,EAAO5F,QAAQ,MACxDwF,IAAI,EAItB0V,sBAAuB,MAAOvV,IAC5B,IAAMC,EAAS,IAAIsJ,gBAKnB,OAJAC,OAAOC,OAAO,CAACzJ,GAAW,CAAC,GAAG0J,OAAO,CAAC,OAAC,CAACC,EAAK5O,EAAM,CAAAlC,EAC7CkC,GAAOkF,EAAO2J,MAAM,CAACD,EAAK5O,EAAMV,QAAQ,GAC9C,GAEOqF,CADU,MAAM6H,EAAIC,GAAG,CAAC,8CAAgEnL,MAAA,CAAlB4D,EAAO5F,QAAQ,MAC5EwF,IAAI,EAItB2V,mBAAoB,MAAOxV,IACzB,IAAMC,EAAS,IAAIsJ,gBAKnB,OAJAC,OAAOC,OAAO,CAACzJ,GAAW,CAAC,GAAG0J,OAAO,CAAC,OAAC,CAACC,EAAK5O,EAAM,CAAAlC,EAC7CkC,GAAOkF,EAAO2J,MAAM,CAACD,EAAK5O,EAAMV,QAAQ,GAC9C,GAEOqF,CADU,MAAM6H,EAAIC,GAAG,CAAC,2CAA6DnL,MAAA,CAAlB4D,EAAO5F,QAAQ,MACzEwF,IAAI,EAItB4V,qBAAsB,MAAOzV,IAC3B,IAAMC,EAAS,IAAIsJ,gBAKnB,OAJAC,OAAOC,OAAO,CAACzJ,GAAW,CAAC,GAAG0J,OAAO,CAAC,OAAC,CAACC,EAAK5O,EAAM,CAAAlC,EAC7CkC,GAAOkF,EAAO2J,MAAM,CAACD,EAAK5O,EAAMV,QAAQ,GAC9C,GAEOqF,CADU,MAAM6H,EAAIC,GAAG,CAAC,qCAAuDnL,MAAA,CAAlB4D,EAAO5F,QAAQ,MACnEwF,IAAI,CAExB,EAGa6V,EAAgB,CAE3BC,qBAAsB,MAAO9V,GAEpBH,CADU,MAAM6H,EAAIK,IAAI,CAAC,qCAAsC/H,EAAAA,EACtDA,IAAI,CAGtB+V,oBAAqB,MAAO3B,EAAmBpU,IAEtCH,CADU,MAAM6H,EAAIK,IAAI,CAAC,sCAAgDvL,MAAA,CAAV4X,EAAU,aAAYpU,EAAAA,EAC5EA,IAAI,CAGtBgW,mBAAoB,MAAO5B,GAElBvU,CADU,MAAM6H,EAAIoG,GAAG,CAAC,sCAAgDtR,MAAA,CAAV4X,EAAU,UAC/DpU,IAAI,CAGtBiW,oBAAqB,MAAO9V,IAC1B,IAAMC,EAAS,IAAIsJ,gBAKnB,OAJAC,OAAOC,OAAO,CAACzJ,GAAW,CAAC,GAAG0J,OAAO,CAAC,OAAC,CAACC,EAAK5O,EAAM,CAAAlC,EAC7CkC,GAAOkF,EAAO2J,MAAM,CAACD,EAAK5O,EAAMV,QAAQ,GAC9C,GAEOqF,CADU,MAAM6H,EAAIC,GAAG,CAAC,sCAAwDnL,MAAA,CAAlB4D,EAAO5F,QAAQ,MACpEwF,IAAI,EAGtBkW,mBAAoB,MAAO9B,GAElBvU,CADU,MAAM6H,EAAIC,GAAG,CAAC,sCAAgDnL,MAAA,CAAV4X,GAAAA,EACrDpU,IAAI,CAItBmW,gBAAiB,MAAOnW,GAEfH,CADU,MAAM6H,EAAIK,IAAI,CAAC,oCAAqC/H,EAAAA,EACrDA,IAAI,CAGtBoW,oBAAqB,MAAOjW,IAC1B,IAAMC,EAAS,IAAIsJ,gBAKnB,OAJAC,OAAOC,OAAO,CAACzJ,GAAW,CAAC,GAAG0J,OAAO,CAAC,OAAC,CAACC,EAAK5O,EAAM,CAAAlC,EAC7CkC,GAAOkF,EAAO2J,MAAM,CAACD,EAAK5O,EAAMV,QAAQ,GAC9C,GAEOqF,CADU,MAAM6H,EAAIC,GAAG,CAAC,4BAA8CnL,MAAA,CAAlB4D,EAAO5F,QAAQ,MAC1DwF,IAAI,EAGtBqW,WAAY,MAAOC,GAEVzW,CADU,MAAM6H,EAAIC,GAAG,CAAC,4BAAsCnL,MAAA,CAAV8Z,GAAAA,EAC3CtW,IAAI,CAGtBuW,cAAe,MAAOD,EAAmBtW,IAEhCH,CADU,MAAM6H,EAAIoG,GAAG,CAAC,4BAAsCtR,MAAA,CAAV8Z,EAAU,WAAUtW,EAAAA,EAC/DA,IAAI,CAGtBwW,cAAe,MAAOF,EAAmBtW,IAEhCH,CADU,MAAM6H,EAAIoG,GAAG,CAAC,4BAAsCtR,MAAA,CAAV8Z,GAAatW,EAAAA,EACxDA,IAAI,CAGtByW,cAAe,MAAOH,GAEbzW,CADU,MAAM6H,EAAI7B,MAAM,CAAC,4BAAsCrJ,MAAA,CAAV8Z,GAAAA,EAC9CtW,IAAI,CAItB6T,aAAc,MAAO1T,IACnB,IAAMC,EAAS,IAAIsJ,gBAKnB,OAJAC,OAAOC,OAAO,CAACzJ,GAAW,CAAC,GAAG0J,OAAO,CAAC,OAAC,CAACC,EAAK5O,EAAM,CAAAlC,EAC7CkC,GAAOkF,EAAO2J,MAAM,CAACD,EAAK5O,EAAMV,QAAQ,GAC9C,GAEOqF,CADU,MAAM6H,EAAIC,GAAG,CAAC,8BAAgDnL,MAAA,CAAlB4D,EAAO5F,QAAQ,MAC5DwF,IAAI,EAGtB0W,gBAAiB,MAAOvW,IACtB,IAAMC,EAAS,IAAIsJ,gBAKnB,OAJAC,OAAOC,OAAO,CAACzJ,GAAW,CAAC,GAAG0J,OAAO,CAAC,OAAC,CAACC,EAAK5O,EAAM,CAAAlC,EAC7CkC,GAAOkF,EAAO2J,MAAM,CAACD,EAAK5O,EAAMV,QAAQ,GAC9C,GAEOqF,CADU,MAAM6H,EAAIC,GAAG,CAAC,kCAAoDnL,MAAA,CAAlB4D,EAAO5F,QAAQ,MAChEwF,IAAI,EAItB8T,mBAAoB,SAEXjU,CADU,MAAM6H,EAAIC,GAAG,CAAC,qCACf3H,IAAI,CAGtB+T,uBAAwB,MAAOC,GAEtBnU,CADU,MAAM6H,EAAIK,IAAI,CAAC,oCAAqDvL,MAAA,CAAjBwX,EAAiB,eACrEhU,IAAI,CAItB2W,aAAc,SAEL9W,CADU,MAAM6H,EAAIC,GAAG,CAAC,gCACf3H,IAAI,CAGtB4W,oBAAqB,MAAO5W,GAEnBH,CADU,MAAM6H,EAAIoG,GAAG,CAAC,kCAAmC9N,EAAAA,EAClDA,IAAI,CAIxB6W,CAAAA,EAAAC,EAAA,CAAepP,uHCnnCf,IAAMqP,EAAcnd,CAAAA,EAAAA,EAAAA,aAAAA,EAA4CtB,KAAAA,GAgsB1D0e,EAA6C,CAAEC,GA9rBhC,CACnB,mBAAoB,UACpB,mBAAoB,QACpB,sBAAuB,WACvB,oBAAqB,UACrB,qBAAsB,wCACtB,8BAA+B,mBAC/B,iCAAkC,sBAClC,sBAAuB,cACvB,oBAAqB,wBACrB,uBAAwB,gBACxB,gBAAiB,mBACjB,oBAAqB,sBACrB,qBAAsB,uBACtB,mBAAoB,qBACpB,iBAAkB,iBAClB,kBAAmB,WAEnB,sBAAuB,iBACvB,wBAAyB,+BACzB,qBAAsB,YACtB,gCAAiC,uBACjC,sBAAuB,gBACvB,iCAAkC,mBAClC,yBAA0B,WAC1B,oCAAqC,2BACrC,qBAAsB,oBACtB,6BAA8B,0BAC9B,6BAA8B,oDAC9B,yBAA0B,sBAC1B,uBAAwB,iBACxB,mBAAoB,kBACpB,uBAAwB,uBACxB,wBAAyB,wBACzB,sBAAuB,sBACvB,qBAAsB,2BACtB,uBAAwB,eAExB,cAAe,UACf,gBAAiB,YACjB,iBAAkB,aAClB,oBAAqB,iBACrB,oBAAqB,iBACrB,gBAAiB,aACjB,iBAAkB,0BAClB,iBAAkB,wBAClB,eAAgB,oBAChB,gBAAiB,wBACjB,WAAY,OACZ,gBAAiB,YACjB,eAAgB,WAEhB,eAAgB,eAChB,6BAA8B,sBAC9B,wBAAyB,0BACzB,2BAA4B,8BAC5B,eAAgB,OAChB,gBAAiB,QACjB,cAAe,MAEf,eAAgB,kBAChB,eAAgB,QAChB,gBAAiB,kBAEjB,cAAe,iBACf,YAAa,6BACb,gBAAiB,mBACjB,eAAgB,iBAEhB,eAAgB,eAChB,iBAAkB,8DAClB,qBAAsB,kBAEtB,iBAAkB,iBAClB,eAAgB,mBAChB,cAAe,cACf,gBAAiB,uBAGjB,uBAAwB,WACxB,kBAAmB,eACnB,uBAAwB,WACxB,sBAAuB,UACvB,wBAAyB,kBACzB,qBAAsB,UACtB,yBAA0B,cAC1B,0BAA2B,kBAE3B,sBAAuB,sBACvB,sBAAuB,kBACvB,wBAAyB,mJACzB,qBAAsB,sBACtB,oBAAqB,aAErB,yBAA0B,qBAC1B,4BAA6B,6GAC7B,iCAAkC,wBAClC,gCAAiC,mFACjC,mCAAoC,wBACpC,kCAAmC,gEACnC,gCAAiC,iBACjC,+BAAgC,mEAChC,sCAAuC,iBACvC,qCAAsC,yDACtC,6BAA8B,aAC9B,4BAA6B,kEAC7B,kCAAmC,qBACnC,iCAAkC,gEAGlC,kCAAmC,qBACnC,qCAAsC,kDACtC,oCAAqC,WAErC,oBAAqB,eACrB,uBAAwB,qDACxB,0BAA2B,UAC3B,yBAA0B,sDAC1B,0BAA2B,sBAC3B,yBAA0B,sDAC1B,0BAA2B,mBAC3B,yBAA0B,gDAC1B,0BAA2B,iBAC3B,yBAA0B,oDAE1B,yBAA0B,2BAC1B,4BAA6B,mEAC7B,wBAAyB,cAEzB,wBAAyB,mBACzB,2BAA4B,0DAC5B,0BAA2B,eAC3B,sBAAuB,cAGvB,uBAAwB,qBACxB,wBAAyB,eACzB,qBAAsB,4BACtB,qBAAsB,qBACtB,qBAAsB,qBACtB,qBAAsB,6CACtB,sBAAuB,oBACvB,uBAAwB,8BACxB,oBAAqB,wBACrB,oBAAqB,mBACrB,oBAAqB,sDACrB,qBAAsB,uBACtB,sBAAuB,6CACvB,mBAAoB,yCACpB,mBAAoB,gDACpB,mBAAoB,8BAEpB,oBAAqB,uCACrB,uBAAwB,uDACxB,oBAAqB,sBACrB,wBAAyB,aAGzB,6BAA8B,oBAC9B,0BAA2B,8DAC3B,0BAA2B,yBAC3B,0BAA2B,2DAC3B,0BAA2B,4BAC3B,0BAA2B,kDAC3B,0BAA2B,0BAC3B,oBAAqB,6BACrB,iBAAkB,4BAClB,iBAAkB,2EAClB,iBAAkB,wBAClB,iBAAkB,kEAClB,iBAAkB,2BAClB,iBAAkB,uDAClB,iBAAkB,6BAClB,iBAAkB,oDAGlB,yBAA0B,kBAC1B,wBAAyB,yBACzB,yBAA0B,kBAC1B,uBAAwB,iBAGxB,eAAgB,wGAChB,iBAAkB,UAClB,iBAAkB,UAClB,iBAAkB,UAClB,wBAAyB,WACzB,uBAAwB,UACxB,wBAAyB,WACzB,yBAA0B,YAC1B,qBAAsB,QACtB,uBAAwB,UACxB,oBAAqB,OACrB,uBAAwB,UACxB,gBAAiB,gBAGjB,cAAe,wCACf,iBAAkB,sGAClB,aAAc,OACd,aAAc,6FACd,eAAgB,wFAChB,cAAe,gFACf,aAAc,6FACd,gBAAiB,uGACjB,aAAc,6GAGd,iBAAkB,aAClB,gBAAiB,SACjB,cAAe,OACf,gBAAiB,SACjB,iBAAkB,UAClB,oBAAqB,gBAGrB,aAAc,OACd,oBAAqB,uBACrB,sBAAuB,mBACvB,mBAAoB,kBACpB,uBAAwB,qBACxB,yBAA0B,gBAC1B,qBAAsB,kBACtB,0BAA2B,iBAC3B,qBAAsB,aACtB,gBAAiB,wBACjB,eAAgB,WAChB,qBAAsB,0BACtB,sBAAuB,4BACvB,aAAc,wBACd,kBAAmB,+BACnB,cAAe,SACf,cAAe,SACf,YAAa,OACb,eAAgB,UAChB,cAAe,SAGf,iBAAkB,gBAClB,kBAAmB,kBACnB,iBAAkB,oBAClB,kBAAmB,UACnB,wBAAyB,6BACzB,mBAAoB,WACpB,oBAAqB,WACrB,gBAAiB,cACjB,kBAAmB,sBACnB,qBAAsB,+BAGtB,kBAAmB,cACnB,gBAAiB,qBACjB,iBAAkB,OAClB,iBAAkB,OAClB,qBAAsB,iBACtB,mBAAoB,WACpB,iBAAkB,wBAClB,kBAAmB,sBAGnB,mBAAoB,eACpB,oBAAqB,sBACrB,wBAAyB,QACzB,mBAAoB,QACpB,sBAAuB,WACvB,yBAA0B,cAC1B,kBAAmB,OACnB,uBAAwB,SACxB,kBAAmB,gBAGnB,kBAAmB,cACnB,kBAAmB,kBAGnB,kBAAmB,WACnB,kBAAmB,kBACnB,kBAAmB,iBACnB,kBAAmB,aACnB,qBAAsB,gBAGtB,YAAa,YACb,eAAgB,aAGhB,eAAgB,YAChB,YAAa,MACb,gBAAiB,UACjB,iBAAkB,WAClB,iBAAkB,WAClB,gBAAiB,UACjB,aAAc,OACd,cAAe,QACf,aAAc,OACd,gBAAiB,UACjB,eAAgB,SAChB,eAAgB,SAChB,aAAc,OACd,aAAc,OACd,aAAc,OACd,aAAc,OACd,eAAgB,SAChB,gBAAiB,UACjB,gBAAiB,UACjB,gBAAiB,UACjB,cAAe,QACf,gBAAiB,UACjB,eAAgB,SAGhB,wBAAyB,oBACzB,2BAA4B,QAC5B,wBAAyB,QACzB,2BAA4B,WAC5B,2BAA4B,WAC5B,yBAA0B,SAC1B,0BAA2B,UAC3B,yBAA0B,YAC1B,wBAAyB,eAEzB,uBAAwB,mBACxB,wBAAyB,SACzB,kBAAmB,YACnB,iBAAkB,WAClB,eAAgB,SAChB,uBAAwB,cAExB,mBAAoB,eACpB,mBAAoB,UAEpB,oBAAqB,kBACrB,sBAAuB,+BACvB,wBAAyB,0BACzB,kBAAmB,YACnB,oBAAqB,iBAGrB,qBAAsB,kBACtB,qBAAsB,sBAGtB,kBAAmB,iBACnB,mBAAoB,mBACpB,kBAAmB,qBAGnB,aAAc,mBACd,aAAc,oBAChB,EAiWyDC,GA/VpC,CACnB,mBAAoB,YACpB,mBAAoB,UACpB,sBAAuB,QACvB,oBAAqB,YACrB,qBAAsB,gDACtB,8BAA+B,oBAC/B,iCAAkC,kBAClC,sBAAuB,eACvB,oBAAqB,0BACrB,uBAAwB,qBACxB,gBAAiB,0BACjB,oBAAqB,uBACrB,qBAAsB,wBACtB,mBAAoB,sBACpB,iBAAkB,0BAClB,kBAAmB,cAEnB,sBAAuB,gBACvB,wBAAyB,+BACzB,qBAAsB,WACtB,gCAAiC,8BACjC,sBAAuB,iBACvB,iCAAkC,oBAClC,yBAA0B,QAC1B,oCAAqC,qCACrC,qBAAsB,yBACtB,6BAA8B,kCAC9B,6BAA8B,yDAC9B,yBAA0B,yBAC1B,uBAAwB,gBACxB,mBAAoB,yBACpB,uBAAwB,sBACxB,wBAAyB,uBACzB,sBAAuB,qBACvB,qBAAsB,wBACtB,uBAAwB,oBAExB,cAAe,SACf,gBAAiB,QACjB,iBAAkB,aAClB,oBAAqB,0BACrB,oBAAqB,kBACrB,gBAAiB,gBACjB,iBAAkB,iCAClB,iBAAkB,oCAClB,eAAgB,2BAChB,gBAAiB,0BACjB,WAAY,SACZ,gBAAiB,cACjB,eAAgB,cAEhB,eAAgB,wBAChB,6BAA8B,yCAC9B,wBAAyB,yBACzB,2BAA4B,2BAC5B,eAAgB,KAChB,gBAAiB,UACjB,cAAe,YAEf,eAAgB,kBAChB,eAAgB,UAChB,gBAAiB,iCAEjB,cAAe,kBACf,YAAa,gCACb,gBAAiB,kBACjB,eAAgB,kBAEhB,eAAgB,oBAChB,iBAAkB,yEAClB,qBAAsB,aAEtB,iBAAkB,sBAClB,eAAgB,oBAChB,cAAe,iBACf,gBAAiB,2BAGjB,uBAAwB,gBACxB,kBAAmB,mBACnB,uBAAwB,iBACxB,sBAAuB,gBACvB,wBAAyB,+BACzB,qBAAsB,YACtB,yBAA0B,cAC1B,0BAA2B,aAE3B,sBAAuB,cACvB,sBAAuB,oCACvB,wBAAyB,kHACzB,qBAAsB,oBACtB,oBAAqB,cAErB,yBAA0B,gBAC1B,4BAA6B,wFAC7B,iCAAkC,2BAClC,gCAAiC,qGACjC,mCAAoC,yBACpC,kCAAmC,4EACnC,gCAAiC,kBACjC,+BAAgC,yEAChC,sCAAuC,0BACvC,qCAAsC,iEACtC,6BAA8B,gBAC9B,4BAA6B,oEAC7B,kCAAmC,qBACnC,iCAAkC,0DAGlC,kCAAmC,8BACnC,qCAAsC,0EACtC,oCAAqC,yBAErC,oBAAqB,mBACrB,uBAAwB,6CACxB,0BAA2B,WAC3B,yBAA0B,8DAC1B,0BAA2B,qBAC3B,yBAA0B,0DAC1B,0BAA2B,aAC3B,yBAA0B,+CAC1B,0BAA2B,qBAC3B,yBAA0B,8DAE1B,yBAA0B,qCAC1B,4BAA6B,yDAC7B,wBAAyB,aAEzB,wBAAyB,iBACzB,2BAA4B,yDAC5B,0BAA2B,gBAC3B,sBAAuB,cAGvB,uBAAwB,kBACxB,wBAAyB,iBACzB,qBAAsB,4BACtB,qBAAsB,iCACtB,qBAAsB,0BACtB,qBAAsB,0CACtB,sBAAuB,mBACvB,uBAAwB,oCACxB,oBAAqB,0BACrB,oBAAqB,sBACrB,oBAAqB,iDACrB,qBAAsB,wBACtB,sBAAuB,wCACvB,mBAAoB,kEACpB,mBAAoB,0CACpB,mBAAoB,sCAEpB,oBAAqB,uCACrB,uBAAwB,qDACxB,oBAAqB,oBACrB,wBAAyB,mBAGzB,6BAA8B,yBAC9B,0BAA2B,8DAC3B,0BAA2B,kCAC3B,0BAA2B,iEAC3B,0BAA2B,oCAC3B,0BAA2B,+CAC3B,0BAA2B,6BAC3B,oBAAqB,sBACrB,iBAAkB,kCAClB,iBAAkB,uFAClB,iBAAkB,oCAClB,iBAAkB,gFAClB,iBAAkB,4CAClB,iBAAkB,qEAClB,iBAAkB,6BAClB,iBAAkB,+EAGlB,yBAA0B,mBAC1B,wBAAyB,iCACzB,yBAA0B,oBAC1B,uBAAwB,gBAGxB,eAAgB,6HAChB,iBAAkB,aAClB,iBAAkB,SAClB,iBAAkB,SAClB,wBAAyB,gBACzB,uBAAwB,gBACxB,wBAAyB,iBACzB,yBAA0B,cAC1B,qBAAsB,aACtB,uBAAwB,UACxB,oBAAqB,OACrB,uBAAwB,WACxB,gBAAiB,sBAGjB,cAAe,uCACf,iBAAkB,iHAClB,aAAc,QACd,aAAc,0FACd,eAAgB,0GAChB,cAAe,6FACf,aAAc,oGACd,gBAAiB,uGACjB,aAAc,yGAGd,iBAAkB,mBAClB,gBAAiB,MACjB,cAAe,SACf,gBAAiB,QACjB,iBAAkB,cAClB,oBAAqB,qBAGrB,aAAc,YACd,oBAAqB,qBACrB,sBAAuB,mBACvB,mBAAoB,0BACpB,uBAAwB,8BACxB,yBAA0B,kBAC1B,qBAAsB,qBACtB,0BAA2B,0BAC3B,qBAAsB,gBACtB,gBAAiB,qBACjB,eAAgB,yBAChB,qBAAsB,oBACtB,sBAAuB,+BACvB,aAAc,6BACd,kBAAmB,kBACnB,cAAe,OACf,cAAe,WACf,YAAa,MACb,eAAgB,UAChB,cAAe,QAGf,iBAAkB,kBAClB,kBAAmB,kBACnB,iBAAkB,yBAClB,kBAAmB,cACnB,wBAAyB,0BACzB,mBAAoB,iBACpB,oBAAqB,aACrB,gBAAiB,aACjB,kBAAmB,0BACnB,qBAAsB,6BAGtB,kBAAmB,YACnB,gBAAiB,sBACjB,iBAAkB,QAClB,iBAAkB,OAClB,qBAAsB,eACtB,mBAAoB,YACpB,iBAAkB,2BAClB,kBAAmB,4BAGnB,mBAAoB,gBACpB,oBAAqB,yBACrB,wBAAyB,SACzB,mBAAoB,SACpB,sBAAuB,WACvB,yBAA0B,cAC1B,kBAAmB,QACnB,uBAAwB,WACxB,kBAAmB,uBAGnB,kBAAmB,kBACnB,kBAAmB,0BAGnB,kBAAmB,eACnB,kBAAmB,yBACnB,kBAAmB,mBACnB,kBAAmB,QACnB,qBAAsB,oBAGtB,YAAa,cACb,eAAgB,eAGhB,eAAgB,SAChB,YAAa,aACb,gBAAiB,YACjB,iBAAkB,SAClB,iBAAkB,aAClB,gBAAiB,aACjB,aAAc,KACd,cAAe,UACf,aAAc,YACd,gBAAiB,cACjB,eAAgB,MAChB,eAAgB,OAChB,aAAc,YACd,aAAc,UACd,aAAc,QACd,aAAc,MACd,eAAgB,QAChB,gBAAiB,SACjB,gBAAiB,aACjB,gBAAiB,cACjB,cAAe,QACf,gBAAiB,SACjB,eAAgB,SAGhB,wBAAyB,sBACzB,2BAA4B,SAC5B,wBAAyB,SACzB,2BAA4B,WAC5B,2BAA4B,cAC5B,yBAA0B,QAC1B,0BAA2B,SAC3B,yBAA0B,eAC1B,wBAAyB,eAEzB,uBAAwB,sBACxB,wBAAyB,QACzB,kBAAmB,WACnB,iBAAkB,cAClB,eAAgB,YAChB,uBAAwB,eAExB,mBAAoB,iBACpB,mBAAoB,UAEpB,oBAAqB,wBACrB,sBAAuB,mCACvB,wBAAyB,uBACzB,kBAAmB,sBACnB,oBAAqB,uBAGrB,qBAAsB,mBACtB,qBAAsB,kBAGtB,kBAAmB,0BACnB,mBAAoB,eACpB,kBAAmB,sBAGnB,aAAc,qBACd,aAAc,eAChB,CAE4D,EAErD,SAAS7d,EAAaL,CAA2C,KAA3C,CAAEa,SAAAA,CAAQ,CAAiC,CAA3Cb,EACrB,CAACme,EAAQC,EAAU,CAAGpd,CAAAA,EAAAA,EAAAA,QAAAA,EAAiB,MAE7CqI,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,KACR,IAAMgV,EAAyC/C,aAAagD,OAAO,CAAC,UACpE,GAAID,GAAUA,CAAAA,OAAAA,GAAkBA,OAAAA,CAAU,EACxCD,EAAUC,QACL,GAAI,oBAAOE,UAA2B,KAC9BA,EACTC,CADSD,CAAAA,OAAAA,CAAAA,EAAAA,UAAUE,QAAQ,GAAlBF,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAoB3K,WAAW,KAAM,IACzC8K,UAAU,CAAC,OAAON,EAAU,KACvC,CACF,EAAG,EAAE,EAEL,IAAMlc,EAAQmO,CAAAA,EAAAA,EAAAA,OAAAA,EAA0B,IAAO,EAC7C8N,OAAAA,EACAC,UAAW,IACTA,EAAUO,GACyBrD,aAAaC,OAAO,CAAC,SAAUoD,EACpE,EACAC,EAAG,CAAC9N,EAAa+N,SAAsBb,EAAAA,SAAAA,OAAAA,CAAAA,EAAAA,OAAAA,CAAAA,EAAAA,CAAgB,CAACG,EAAO,CAACrN,EAAI,GAA7BkN,KAAAA,IAAAA,EAAAA,EAAiCa,CAAAA,GAAjCb,KAAAA,IAAAA,EAAAA,EAA6ClN,CAAE,CACxF,GAAI,CAACqN,EAAO,EAEZ,MAAO,GAAAhe,EAAAC,GAAA,EAAC2d,EAAY9b,QAAQ,EAACC,MAAOA,WAAQrB,GAC9C,CAEO,SAASie,IACd,IAAMC,EAAMrc,CAAAA,EAAAA,EAAAA,UAAAA,EAAWqb,GACvB,GAAI,CAACgB,EAAK,MAAM,MAAU,4CAC1B,OAAOA,CACT,sMCtuBA,IAAMC,EAAY,eACZC,EAAW,aA4BjB,OAAMC,EACJ3D,QAAQzK,CAAW,CAAE5O,CAAa,CAAQ,CAGxC,IAAMid,EAAU,IAAIlP,KACpBkP,EAAQC,OAAO,CAACD,EAAQE,OAAO,GAAM,QAErCxL,SAASE,MAAM,CAAG,GAAUuL,MAAAA,CAAPxO,EAAI,KAAyCqO,MAAAA,CAAtCG,mBAAmBpd,GAAO,cAAkCsB,MAAA,CAAtB2b,EAAQI,WAAW,GAAG,oCAC1F,CAEAjB,QAAQxN,CAAW,CAAiB,CAGlC,IAAM0O,EAAS1O,EAAM,IACf2O,EAAK5L,SAASE,MAAM,CAAC2L,KAAK,CAAC,KAEjC,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAG9c,MAAM,CAAEgd,IAAK,CAClC,IAAIC,EAAIH,CAAE,CAACE,EAAE,CACb,KAAOC,MAAAA,EAAEC,MAAM,CAAC,IAAYD,EAAIA,EAAEne,SAAS,CAAC,EAAGme,EAAEjd,MAAM,EACvD,GAAIid,IAAAA,EAAEE,OAAO,CAACN,GACZ,OAAOvL,mBAAmB2L,EAAEne,SAAS,CAAC+d,EAAO7c,MAAM,CAAEid,EAAEjd,MAAM,EAEjE,CAEA,OAAO,IACT,CAEAod,WAAWjP,CAAW,CAAQ,CAG5B+C,SAASE,MAAM,CAAG,GAAOvQ,MAAA,CAAJsN,EAAI,mDAC3B,CAEA/G,OAAc,CAGZ,IAAMiW,EAAUnM,SAASE,MAAM,CAAC2L,KAAK,CAAC,KAEtC,IAAK,IAAIC,EAAI,EAAGA,EAAIK,EAAQrd,MAAM,CAAEgd,IAAK,CACvC,IAAM5L,EAASiM,CAAO,CAACL,EAAE,CACnBM,EAAQlM,EAAO+L,OAAO,CAAC,KACvB1R,EAAO6R,EAAQ,GAAKlM,EAAOmM,MAAM,CAAC,EAAGD,GAASlM,CACpDF,CAAAA,SAASE,MAAM,CAAG,GAAQvQ,MAAA,CAAL4K,EAAK,mDAC5B,CACF,CACF,CAGA,MAAM+R,EACJ5E,QAAQzK,CAAW,CAAE5O,CAAa,CAAQ,CAGxC,GAAI,CACFke,eAAe7E,OAAO,CAACzK,EAAK5O,EAC9B,CAAE,MAAOE,EAAO,CACdoC,QAAQC,IAAI,CAAC,gEAEZxF,OAAeohB,uBAAuB,CAAGphB,OAAgBohB,uBAAuB,EAAI,CAAC,EACrFphB,OAAeohB,uBAAuB,CAACvP,EAAI,CAAG5O,CACjD,CACF,CAEAoc,QAAQxN,CAAW,CAAiB,CAGlC,GAAI,CACF,OAAOsP,eAAe9B,OAAO,CAACxN,EAChC,CAAE,MAAO1O,EAAO,KAEPke,EAAP,MAAO,QAAAA,CAAAA,EAAArhB,OAAgBohB,uBAAuB,GAAvCC,KAAA,IAAAA,EAAA,OAAAA,CAAyC,CAACxP,EAAI,GAAI,IAC3D,CACF,CAEAiP,WAAWjP,CAAW,CAAQ,CAG5B,GAAI,CACFsP,eAAeL,UAAU,CAACjP,EAC5B,CAAE,MAAO1O,EAAO,CAEVnD,OAAgBohB,uBAAuB,EACzC,OAAOphB,OAAgBohB,uBAAuB,CAACvP,EAAI,CAGzD,CAEA/G,OAAc,CAGZ,GAAI,CACFqW,eAAerW,KAAK,EACtB,CAAE,MAAO3H,EAAO,CAEbnD,OAAeohB,uBAAuB,CAAG,CAAC,CAC7C,CACF,CACF,CAGA,IAAME,EAAyBC,CAzHH,KAG1B,GAAI,CACF3M,SAASE,MAAM,CAAG,SAClB,IAAM0M,EAAY5M,KAAAA,SAASE,MAAM,CAAC+L,OAAO,CAAC,SAE1C,OADAjM,SAASE,MAAM,CAAG,gDACX0M,CACT,CAAE,MAAAzO,EAAM,CACN,MAAO,EACT,CACF,KA8GuD,IAAIkN,EAAkB,IAAIiB,EAGpEzW,EAAe,CAC1BiB,SAAU,IACR4V,EAAQhF,OAAO,CAACyD,EAAWxU,EAC7B,EAEAb,SAAU,IACD4W,EAAQjC,OAAO,CAACU,GAGzB0B,YAAa,KACXH,EAAQR,UAAU,CAACf,EACrB,EAEAhW,QAAS,IACPuX,EAAQhF,OAAO,CAAC0D,EAAU0B,KAAKC,SAAS,CAACva,GAC3C,EAEAwa,QAAS,KACP,IAAMC,EAAUP,EAAQjC,OAAO,CAACW,GAChC,GAAI,CAAC6B,EAAS,OAAO,KAErB,GAAI,CACF,OAAOH,KAAKI,KAAK,CAACD,EACpB,CAAE,MAAA9O,EAAM,CACN,OAAO,IACT,CACF,EAEAgP,WAAY,KACVT,EAAQR,UAAU,CAACd,EACrB,EAEAlV,MAAO,KACLwW,EAAQxW,KAAK,EACf,CACF,EAGakX,EAAiB,IACrBvX,EAAaC,QAAQ,GAGjBuX,EAAiB,IAC5BxX,EAAaiB,QAAQ,CAACH,EACxB,EAEa2W,EAAoB,KAC/BzX,EAAagX,WAAW,EAC1B","sources":["webpack://_N_E/","webpack://_N_E/./sentry.client.config.ts","webpack://_N_E/./pages/_app.tsx","webpack://_N_E/./src/components/common/Toast.tsx","webpack://_N_E/./src/context/AdminContext.tsx","webpack://_N_E/./src/context/AuthContext.tsx","webpack://_N_E/./src/context/ChatContext.tsx","webpack://_N_E/./src/context/NotificationContext.tsx","webpack://_N_E/./src/lib/api.ts","webpack://_N_E/./src/lib/i18n.tsx","webpack://_N_E/./src/utils/secureStorage.ts","webpack://_N_E/./src/styles/globals.css"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/_app\",\n      function () {\n        return require(\"private-next-pages/_app.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/_app\"])\n      });\n    }\n  ","var _sentryCollisionFreeGlobalObject = typeof window != \"undefined\" ? window : typeof global != \"undefined\" ? global : typeof self != \"undefined\" ? self : {};\n_sentryCollisionFreeGlobalObject[\"__sentryRewritesTunnelPath__\"] = undefined;\n_sentryCollisionFreeGlobalObject[\"SENTRY_RELEASE\"] = {\"id\":\"GjKbDnfT9pR7_IRjKqTAz\"};\n_sentryCollisionFreeGlobalObject[\"__sentryBasePath\"] = undefined;\n_sentryCollisionFreeGlobalObject[\"__rewriteFramesAssetPrefixPath__\"] = \"\";\n\nimport * as Sentry from '@sentry/nextjs';\r\n\r\nconst dsn = process.env.NEXT_PUBLIC_SENTRY_DSN;\r\nif (dsn && dsn !== 'your-sentry-dsn') {\r\n  Sentry.init({\r\n    dsn,\r\n    tracesSampleRate: 0.0,\r\n    replaysOnErrorSampleRate: 0.0,\r\n    replaysSessionSampleRate: 0.0,\r\n  });\r\n}\r\n\r\n\r\n","import type { AppProps } from 'next/app';\r\nimport { AuthProvider } from '@/context/AuthContext';\r\nimport { ToastProvider } from '@/components/common/Toast';\r\nimport { ChatProvider } from '@/context/ChatContext';\r\nimport { NotificationProvider } from '@/context/NotificationContext';\r\nimport { AdminProvider } from '@/context/AdminContext';\r\nimport '@/styles/globals.css';\r\nimport { I18nProvider } from '@/lib/i18n';\r\n\r\nexport default function App({ Component, pageProps }: AppProps) {\r\n  return (\r\n    <I18nProvider>\r\n      <AuthProvider>\r\n        <ToastProvider>\r\n          <ChatProvider>\r\n            <NotificationProvider>\r\n              <AdminProvider>\r\n                <Component {...pageProps} />\r\n              </AdminProvider>\r\n            </NotificationProvider>\r\n          </ChatProvider>\r\n        </ToastProvider>\r\n      </AuthProvider>\r\n    </I18nProvider>\r\n  );\r\n} ","import React, { createContext, useContext, useState, ReactNode } from 'react';\r\n\r\n// Toast types\r\nexport type ToastType = 'success' | 'error' | 'warning' | 'info';\r\n\r\n// Toast interface\r\ninterface Toast {\r\n  id: string;\r\n  type: ToastType;\r\n  message: string;\r\n  duration?: number;\r\n}\r\n\r\n// Toast context interface\r\ninterface ToastContextType {\r\n  toasts: Toast[];\r\n  showToast: (type: ToastType, message: string, duration?: number) => void;\r\n  removeToast: (id: string) => void;\r\n  success: (message: string, duration?: number) => void;\r\n  error: (message: string, duration?: number) => void;\r\n  warning: (message: string, duration?: number) => void;\r\n  info: (message: string, duration?: number) => void;\r\n}\r\n\r\n// Create context\r\nconst ToastContext = createContext<ToastContextType | undefined>(undefined);\r\n\r\n// Provider component\r\ninterface ToastProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport function ToastProvider({ children }: ToastProviderProps) {\r\n  const [toasts, setToasts] = useState<Toast[]>([]);\r\n\r\n  // Show toast\r\n  const showToast = (type: ToastType, message: string, duration = 5000) => {\r\n    const id = Math.random().toString(36).substring(2, 9);\r\n    const newToast: Toast = { id, type, message, duration };\r\n    \r\n    setToasts(prev => [...prev, newToast]);\r\n\r\n    // Auto remove after duration\r\n    if (duration > 0) {\r\n      setTimeout(() => {\r\n        removeToast(id);\r\n      }, duration);\r\n    }\r\n  };\r\n\r\n  // Remove toast\r\n  const removeToast = (id: string) => {\r\n    setToasts(prev => prev.filter(toast => toast.id !== id));\r\n  };\r\n\r\n  // Convenience methods\r\n  const success = (message: string, duration?: number) => showToast('success', message, duration);\r\n  const error = (message: string, duration?: number) => showToast('error', message, duration);\r\n  const warning = (message: string, duration?: number) => showToast('warning', message, duration);\r\n  const info = (message: string, duration?: number) => showToast('info', message, duration);\r\n\r\n  const value: ToastContextType = {\r\n    toasts,\r\n    showToast,\r\n    removeToast,\r\n    success,\r\n    error,\r\n    warning,\r\n    info,\r\n  };\r\n\r\n  return (\r\n    <ToastContext.Provider value={value}>\r\n      {children}\r\n      <ToastContainer />\r\n    </ToastContext.Provider>\r\n  );\r\n}\r\n\r\n// Custom hook to use toast context\r\nexport function useToast() {\r\n  const context = useContext(ToastContext);\r\n  \r\n  if (context === undefined) {\r\n    throw new Error('useToast must be used within a ToastProvider');\r\n  }\r\n  \r\n  return context;\r\n}\r\n\r\n// Toast container component\r\nfunction ToastContainer() {\r\n  const { toasts, removeToast } = useToast();\r\n\r\n  if (toasts.length === 0) return null;\r\n\r\n  return (\r\n    <div className=\"fixed top-4 right-4 z-50 space-y-2\">\r\n      {toasts.map((toast) => (\r\n        <ToastItem key={toast.id} toast={toast} onRemove={removeToast} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Individual toast item component\r\ninterface ToastItemProps {\r\n  toast: Toast;\r\n  onRemove: (id: string) => void;\r\n}\r\n\r\nfunction ToastItem({ toast, onRemove }: ToastItemProps) {\r\n  const { type, message, id } = toast;\r\n\r\n  // Get icon and colors based on type\r\n  const getToastStyles = (type: ToastType) => {\r\n    switch (type) {\r\n      case 'success':\r\n        return {\r\n          icon: '✅',\r\n          bgColor: 'bg-green-50 dark:bg-green-900/20',\r\n          borderColor: 'border-green-200 dark:border-green-800',\r\n          textColor: 'text-green-800 dark:text-green-200',\r\n          iconColor: 'text-green-400',\r\n        };\r\n      case 'error':\r\n        return {\r\n          icon: '❌',\r\n          bgColor: 'bg-red-50 dark:bg-red-900/20',\r\n          borderColor: 'border-red-200 dark:border-red-800',\r\n          textColor: 'text-red-800 dark:text-red-200',\r\n          iconColor: 'text-red-400',\r\n        };\r\n      case 'warning':\r\n        return {\r\n          icon: '⚠️',\r\n          bgColor: 'bg-yellow-50 dark:bg-yellow-900/20',\r\n          borderColor: 'border-yellow-200 dark:border-yellow-800',\r\n          textColor: 'text-yellow-800 dark:text-yellow-200',\r\n          iconColor: 'text-yellow-400',\r\n        };\r\n      case 'info':\r\n        return {\r\n          icon: 'ℹ️',\r\n          bgColor: 'bg-blue-50 dark:bg-blue-900/20',\r\n          borderColor: 'border-blue-200 dark:border-blue-800',\r\n          textColor: 'text-blue-800 dark:text-blue-200',\r\n          iconColor: 'text-blue-400',\r\n        };\r\n      default:\r\n        return {\r\n          icon: '📢',\r\n          bgColor: 'bg-gray-50 dark:bg-gray-900/20',\r\n          borderColor: 'border-gray-200 dark:border-gray-800',\r\n          textColor: 'text-gray-800 dark:text-gray-200',\r\n          iconColor: 'text-gray-400',\r\n        };\r\n    }\r\n  };\r\n\r\n  const styles = getToastStyles(type);\r\n\r\n  return (\r\n    <div\r\n      className={`\r\n        max-w-sm w-full ${styles.bgColor} border ${styles.borderColor} rounded-lg shadow-lg\r\n        p-4 flex items-start space-x-3 transform transition-all duration-300 ease-in-out\r\n        hover:scale-105\r\n      `}\r\n      role=\"alert\"\r\n      aria-live=\"assertive\"\r\n    >\r\n      {/* Icon */}\r\n      <div className={`flex-shrink-0 text-lg ${styles.iconColor}`}>\r\n        {styles.icon}\r\n      </div>\r\n\r\n      {/* Message */}\r\n      <div className=\"flex-1 min-w-0\">\r\n        <p className={`text-sm font-medium ${styles.textColor}`}>\r\n          {message}\r\n        </p>\r\n      </div>\r\n\r\n      {/* Close button */}\r\n      <button\r\n        onClick={() => onRemove(id)}\r\n        className={`\r\n          flex-shrink-0 ml-2 p-1 rounded-md ${styles.textColor} hover:bg-black/10\r\n          focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-transparent\r\n          focus:ring-current transition-colors duration-200\r\n        `}\r\n        aria-label=\"Close notification\"\r\n      >\r\n        <svg className=\"w-4 h-4\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n        </svg>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Global toast functions (for use outside of React components)\r\nlet toastContext: ToastContextType | null = null;\r\n\r\nexport const setToastContext = (context: ToastContextType) => {\r\n  toastContext = context;\r\n};\r\n\r\nexport const toast = {\r\n  success: (message: string, duration?: number) => {\r\n    if (toastContext) {\r\n      toastContext.success(message, duration);\r\n    } else {\r\n      console.warn('Toast context not available');\r\n    }\r\n  },\r\n  error: (message: string, duration?: number) => {\r\n    if (toastContext) {\r\n      toastContext.error(message, duration);\r\n    } else {\r\n      console.warn('Toast context not available');\r\n    }\r\n  },\r\n  warning: (message: string, duration?: number) => {\r\n    if (toastContext) {\r\n      toastContext.warning(message, duration);\r\n    } else {\r\n      console.warn('Toast context not available');\r\n    }\r\n  },\r\n  info: (message: string, duration?: number) => {\r\n    if (toastContext) {\r\n      toastContext.info(message, duration);\r\n    } else {\r\n      console.warn('Toast context not available');\r\n    }\r\n  },\r\n}; ","import React, { createContext, useContext, useReducer, ReactNode } from 'react';\r\nimport { toast } from 'react-hot-toast';\r\nimport { adminAPI } from '../lib/api';\r\nimport {\r\n  AdminUser,\r\n  AdminMaterial,\r\n  AdminPayment,\r\n  AdminLog,\r\n  AdminOverview,\r\n  UserFilters,\r\n  MaterialFilters,\r\n  PaymentFilters,\r\n  LogFilters,\r\n  UpdateUserRoleData,\r\n  UpdateUserStatusData,\r\n  ApproveMaterialData,\r\n  RefundPaymentData\r\n} from '../types/admin';\r\n\r\n// State interface\r\ninterface AdminState {\r\n  // Overview data\r\n  overview: AdminOverview | null;\r\n  overviewLoading: boolean;\r\n  \r\n  // Users\r\n  users: AdminUser[];\r\n  usersLoading: boolean;\r\n  usersPagination: {\r\n    page: number;\r\n    limit: number;\r\n    total: number;\r\n    pages: number;\r\n  } | null;\r\n  selectedUser: AdminUser | null;\r\n  \r\n  // Materials\r\n  materials: AdminMaterial[];\r\n  materialsLoading: boolean;\r\n  materialsPagination: {\r\n    page: number;\r\n    limit: number;\r\n    total: number;\r\n    pages: number;\r\n  } | null;\r\n  selectedMaterial: AdminMaterial | null;\r\n  \r\n  // Payments\r\n  payments: AdminPayment[];\r\n  paymentsLoading: boolean;\r\n  paymentsPagination: {\r\n    page: number;\r\n    limit: number;\r\n    total: number;\r\n    pages: number;\r\n  } | null;\r\n  selectedPayment: AdminPayment | null;\r\n  \r\n  // Logs\r\n  logs: AdminLog[];\r\n  logsLoading: boolean;\r\n  logsPagination: {\r\n    page: number;\r\n    limit: number;\r\n    total: number;\r\n    pages: number;\r\n  } | null;\r\n  \r\n  // Filters\r\n  userFilters: UserFilters;\r\n  materialFilters: MaterialFilters;\r\n  paymentFilters: PaymentFilters;\r\n  logFilters: LogFilters;\r\n}\r\n\r\n// Action types\r\ntype AdminAction =\r\n  | { type: 'SET_OVERVIEW'; payload: AdminOverview }\r\n  | { type: 'SET_OVERVIEW_LOADING'; payload: boolean }\r\n  | { type: 'SET_USERS'; payload: { users: AdminUser[]; pagination: any } }\r\n  | { type: 'SET_USERS_LOADING'; payload: boolean }\r\n  | { type: 'SET_SELECTED_USER'; payload: AdminUser | null }\r\n  | { type: 'SET_MATERIALS'; payload: { materials: AdminMaterial[]; pagination: any } }\r\n  | { type: 'SET_MATERIALS_LOADING'; payload: boolean }\r\n  | { type: 'SET_SELECTED_MATERIAL'; payload: AdminMaterial | null }\r\n  | { type: 'SET_PAYMENTS'; payload: { payments: AdminPayment[]; pagination: any } }\r\n  | { type: 'SET_PAYMENTS_LOADING'; payload: boolean }\r\n  | { type: 'SET_SELECTED_PAYMENT'; payload: AdminPayment | null }\r\n  | { type: 'SET_LOGS'; payload: { logs: AdminLog[]; pagination: any } }\r\n  | { type: 'SET_LOGS_LOADING'; payload: boolean }\r\n  | { type: 'SET_USER_FILTERS'; payload: UserFilters }\r\n  | { type: 'SET_MATERIAL_FILTERS'; payload: MaterialFilters }\r\n  | { type: 'SET_PAYMENT_FILTERS'; payload: PaymentFilters }\r\n  | { type: 'SET_LOG_FILTERS'; payload: LogFilters }\r\n  | { type: 'UPDATE_USER'; payload: AdminUser }\r\n  | { type: 'UPDATE_MATERIAL'; payload: AdminMaterial }\r\n  | { type: 'UPDATE_PAYMENT'; payload: AdminPayment }\r\n  | { type: 'REMOVE_USER'; payload: string }\r\n  | { type: 'REMOVE_MATERIAL'; payload: string };\r\n\r\n// Initial state\r\nconst initialState: AdminState = {\r\n  overview: null,\r\n  overviewLoading: false,\r\n  users: [],\r\n  usersLoading: false,\r\n  usersPagination: null,\r\n  selectedUser: null,\r\n  materials: [],\r\n  materialsLoading: false,\r\n  materialsPagination: null,\r\n  selectedMaterial: null,\r\n  payments: [],\r\n  paymentsLoading: false,\r\n  paymentsPagination: null,\r\n  selectedPayment: null,\r\n  logs: [],\r\n  logsLoading: false,\r\n  logsPagination: null,\r\n  userFilters: {},\r\n  materialFilters: {},\r\n  paymentFilters: {},\r\n  logFilters: {}\r\n};\r\n\r\n// Reducer\r\nfunction adminReducer(state: AdminState, action: AdminAction): AdminState {\r\n  switch (action.type) {\r\n    case 'SET_OVERVIEW':\r\n      return { ...state, overview: action.payload };\r\n    case 'SET_OVERVIEW_LOADING':\r\n      return { ...state, overviewLoading: action.payload };\r\n    case 'SET_USERS':\r\n      return { \r\n        ...state, \r\n        users: action.payload.users, \r\n        usersPagination: action.payload.pagination \r\n      };\r\n    case 'SET_USERS_LOADING':\r\n      return { ...state, usersLoading: action.payload };\r\n    case 'SET_SELECTED_USER':\r\n      return { ...state, selectedUser: action.payload };\r\n    case 'SET_MATERIALS':\r\n      return { \r\n        ...state, \r\n        materials: action.payload.materials, \r\n        materialsPagination: action.payload.pagination \r\n      };\r\n    case 'SET_MATERIALS_LOADING':\r\n      return { ...state, materialsLoading: action.payload };\r\n    case 'SET_SELECTED_MATERIAL':\r\n      return { ...state, selectedMaterial: action.payload };\r\n    case 'SET_PAYMENTS':\r\n      return { \r\n        ...state, \r\n        payments: action.payload.payments, \r\n        paymentsPagination: action.payload.pagination \r\n      };\r\n    case 'SET_PAYMENTS_LOADING':\r\n      return { ...state, paymentsLoading: action.payload };\r\n    case 'SET_SELECTED_PAYMENT':\r\n      return { ...state, selectedPayment: action.payload };\r\n    case 'SET_LOGS':\r\n      return { \r\n        ...state, \r\n        logs: action.payload.logs, \r\n        logsPagination: action.payload.pagination \r\n      };\r\n    case 'SET_LOGS_LOADING':\r\n      return { ...state, logsLoading: action.payload };\r\n    case 'SET_USER_FILTERS':\r\n      return { ...state, userFilters: action.payload };\r\n    case 'SET_MATERIAL_FILTERS':\r\n      return { ...state, materialFilters: action.payload };\r\n    case 'SET_PAYMENT_FILTERS':\r\n      return { ...state, paymentFilters: action.payload };\r\n    case 'SET_LOG_FILTERS':\r\n      return { ...state, logFilters: action.payload };\r\n    case 'UPDATE_USER':\r\n      return {\r\n        ...state,\r\n        users: state.users.map(user => \r\n          user._id === action.payload._id ? action.payload : user\r\n        ),\r\n        selectedUser: state.selectedUser?._id === action.payload._id \r\n          ? action.payload \r\n          : state.selectedUser\r\n      };\r\n    case 'UPDATE_MATERIAL':\r\n      return {\r\n        ...state,\r\n        materials: state.materials.map(material => \r\n          material._id === action.payload._id ? action.payload : material\r\n        ),\r\n        selectedMaterial: state.selectedMaterial?._id === action.payload._id \r\n          ? action.payload \r\n          : state.selectedMaterial\r\n      };\r\n    case 'UPDATE_PAYMENT':\r\n      return {\r\n        ...state,\r\n        payments: state.payments.map(payment => \r\n          payment._id === action.payload._id ? action.payload : payment\r\n        ),\r\n        selectedPayment: state.selectedPayment?._id === action.payload._id \r\n          ? action.payload \r\n          : state.selectedPayment\r\n      };\r\n    case 'REMOVE_USER':\r\n      return {\r\n        ...state,\r\n        users: state.users.filter(user => user._id !== action.payload),\r\n        selectedUser: state.selectedUser?._id === action.payload ? null : state.selectedUser\r\n      };\r\n    case 'REMOVE_MATERIAL':\r\n      return {\r\n        ...state,\r\n        materials: state.materials.filter(material => material._id !== action.payload),\r\n        selectedMaterial: state.selectedMaterial?._id === action.payload ? null : state.selectedMaterial\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// Context interface\r\ninterface AdminContextType {\r\n  state: AdminState;\r\n  \r\n  // Overview actions\r\n  loadOverview: () => Promise<void>;\r\n  \r\n  // User actions\r\n  loadUsers: (page?: number, filters?: UserFilters) => Promise<void>;\r\n  loadUserById: (id: string) => Promise<AdminUser | null>;\r\n  updateUserRole: (id: string, data: UpdateUserRoleData) => Promise<void>;\r\n  updateUserStatus: (id: string, data: UpdateUserStatusData) => Promise<void>;\r\n  deleteUser: (id: string) => Promise<void>;\r\n  setSelectedUser: (user: AdminUser | null) => void;\r\n  setUserFilters: (filters: UserFilters) => void;\r\n  \r\n  // Material actions\r\n  loadMaterials: (page?: number, filters?: MaterialFilters) => Promise<void>;\r\n  approveMaterial: (id: string, data: ApproveMaterialData) => Promise<void>;\r\n  deleteMaterial: (id: string) => Promise<void>;\r\n  setSelectedMaterial: (material: AdminMaterial | null) => void;\r\n  setMaterialFilters: (filters: MaterialFilters) => void;\r\n  \r\n  // Payment actions\r\n  loadPayments: (page?: number, filters?: PaymentFilters) => Promise<void>;\r\n  refundPayment: (id: string, data: RefundPaymentData) => Promise<void>;\r\n  setSelectedPayment: (payment: AdminPayment | null) => void;\r\n  setPaymentFilters: (filters: PaymentFilters) => void;\r\n  \r\n  // Log actions\r\n  loadLogs: (page?: number, filters?: LogFilters) => Promise<void>;\r\n  setLogFilters: (filters: LogFilters) => void;\r\n}\r\n\r\n// Create context\r\nconst AdminContext = createContext<AdminContextType | undefined>(undefined);\r\n\r\n// Provider component\r\ninterface AdminProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AdminProvider: React.FC<AdminProviderProps> = ({ children }) => {\r\n  const [state, dispatch] = useReducer(adminReducer, initialState);\r\n\r\n  // Overview actions\r\n  const loadOverview = async () => {\r\n    try {\r\n      dispatch({ type: 'SET_OVERVIEW_LOADING', payload: true });\r\n      const response = await adminAPI.getOverview();\r\n      if (response.data.success) {\r\n        dispatch({ type: 'SET_OVERVIEW', payload: response.data.data });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading overview:', error);\r\n      toast.error('Failed to load overview data');\r\n    } finally {\r\n      dispatch({ type: 'SET_OVERVIEW_LOADING', payload: false });\r\n    }\r\n  };\r\n\r\n  // User actions\r\n  const loadUsers = async (page = 1, filters = {}) => {\r\n    try {\r\n      dispatch({ type: 'SET_USERS_LOADING', payload: true });\r\n      const params = { page, limit: 20, ...filters };\r\n      const response = await adminAPI.getUsers(params);\r\n      if (response.data.success) {\r\n        dispatch({ \r\n          type: 'SET_USERS', \r\n          payload: { \r\n            users: response.data.data.users, \r\n            pagination: response.data.data.pagination \r\n          } \r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading users:', error);\r\n      toast.error('Failed to load users');\r\n    } finally {\r\n      dispatch({ type: 'SET_USERS_LOADING', payload: false });\r\n    }\r\n  };\r\n\r\n  const loadUserById = async (id: string): Promise<AdminUser | null> => {\r\n    try {\r\n      const response = await adminAPI.getUserById(id);\r\n      if (response.data.success) {\r\n        return response.data.data;\r\n      }\r\n      return null;\r\n    } catch (error) {\r\n      console.error('Error loading user:', error);\r\n      toast.error('Failed to load user details');\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const updateUserRole = async (id: string, data: UpdateUserRoleData) => {\r\n    try {\r\n      const response = await adminAPI.updateUserRole(id, data.role);\r\n      if (response.data.success) {\r\n        dispatch({ type: 'UPDATE_USER', payload: response.data.data });\r\n        toast.success('User role updated successfully');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating user role:', error);\r\n      toast.error('Failed to update user role');\r\n    }\r\n  };\r\n\r\n  const updateUserStatus = async (id: string, data: UpdateUserStatusData) => {\r\n    try {\r\n      const response = await adminAPI.updateUserStatus(id, data.status);\r\n      if (response.data.success) {\r\n        dispatch({ type: 'UPDATE_USER', payload: response.data.data });\r\n        toast.success('User status updated successfully');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating user status:', error);\r\n      toast.error('Failed to update user status');\r\n    }\r\n  };\r\n\r\n  const deleteUser = async (id: string) => {\r\n    try {\r\n      const response = await adminAPI.deleteUser(id);\r\n      if (response.data.success) {\r\n        dispatch({ type: 'REMOVE_USER', payload: id });\r\n        toast.success('User deleted successfully');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting user:', error);\r\n      toast.error('Failed to delete user');\r\n    }\r\n  };\r\n\r\n  const setSelectedUser = (user: AdminUser | null) => {\r\n    dispatch({ type: 'SET_SELECTED_USER', payload: user });\r\n  };\r\n\r\n  const setUserFilters = (filters: UserFilters) => {\r\n    dispatch({ type: 'SET_USER_FILTERS', payload: filters });\r\n  };\r\n\r\n  // Material actions\r\n  const loadMaterials = async (page = 1, filters = {}) => {\r\n    try {\r\n      dispatch({ type: 'SET_MATERIALS_LOADING', payload: true });\r\n      const params = { page, limit: 20, ...filters };\r\n      const response = await adminAPI.getMaterials(params);\r\n      if (response.data.success) {\r\n        dispatch({ \r\n          type: 'SET_MATERIALS', \r\n          payload: { \r\n            materials: response.data.data.materials, \r\n            pagination: response.data.data.pagination \r\n          } \r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading materials:', error);\r\n      toast.error('Failed to load materials');\r\n    } finally {\r\n      dispatch({ type: 'SET_MATERIALS_LOADING', payload: false });\r\n    }\r\n  };\r\n\r\n  const approveMaterial = async (id: string, data: ApproveMaterialData) => {\r\n    try {\r\n      const response = await adminAPI.approveMaterial(id, data);\r\n      if (response.data.success) {\r\n        dispatch({ type: 'UPDATE_MATERIAL', payload: response.data.data });\r\n        toast.success(`Material ${data.approved ? 'approved' : 'rejected'} successfully`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error approving material:', error);\r\n      toast.error('Failed to update material status');\r\n    }\r\n  };\r\n\r\n  const deleteMaterial = async (id: string) => {\r\n    try {\r\n      const response = await adminAPI.deleteMaterial(id);\r\n      if (response.data.success) {\r\n        dispatch({ type: 'REMOVE_MATERIAL', payload: id });\r\n        toast.success('Material deleted successfully');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting material:', error);\r\n      toast.error('Failed to delete material');\r\n    }\r\n  };\r\n\r\n  const setSelectedMaterial = (material: AdminMaterial | null) => {\r\n    dispatch({ type: 'SET_SELECTED_MATERIAL', payload: material });\r\n  };\r\n\r\n  const setMaterialFilters = (filters: MaterialFilters) => {\r\n    dispatch({ type: 'SET_MATERIAL_FILTERS', payload: filters });\r\n  };\r\n\r\n  // Payment actions\r\n  const loadPayments = async (page = 1, filters = {}) => {\r\n    try {\r\n      dispatch({ type: 'SET_PAYMENTS_LOADING', payload: true });\r\n      const params = { page, limit: 20, ...filters };\r\n      const response = await adminAPI.getPayments(params);\r\n      if (response.data.success) {\r\n        dispatch({ \r\n          type: 'SET_PAYMENTS', \r\n          payload: { \r\n            payments: response.data.data.payments, \r\n            pagination: response.data.data.pagination \r\n          } \r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading payments:', error);\r\n      toast.error('Failed to load payments');\r\n    } finally {\r\n      dispatch({ type: 'SET_PAYMENTS_LOADING', payload: false });\r\n    }\r\n  };\r\n\r\n  const refundPayment = async (id: string, data: RefundPaymentData) => {\r\n    try {\r\n      const response = await adminAPI.refundPayment(id, data);\r\n      if (response.data.success) {\r\n        dispatch({ type: 'UPDATE_PAYMENT', payload: response.data.data });\r\n        toast.success('Payment refunded successfully');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error refunding payment:', error);\r\n      toast.error('Failed to refund payment');\r\n    }\r\n  };\r\n\r\n  const setSelectedPayment = (payment: AdminPayment | null) => {\r\n    dispatch({ type: 'SET_SELECTED_PAYMENT', payload: payment });\r\n  };\r\n\r\n  const setPaymentFilters = (filters: PaymentFilters) => {\r\n    dispatch({ type: 'SET_PAYMENT_FILTERS', payload: filters });\r\n  };\r\n\r\n  // Log actions\r\n  const loadLogs = async (page = 1, filters = {}) => {\r\n    try {\r\n      dispatch({ type: 'SET_LOGS_LOADING', payload: true });\r\n      const params = { page, limit: 50, ...filters };\r\n      const response = await adminAPI.getLogs(params);\r\n      if (response.data.success) {\r\n        dispatch({ \r\n          type: 'SET_LOGS', \r\n          payload: { \r\n            logs: response.data.data.logs, \r\n            pagination: response.data.data.pagination \r\n          } \r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading logs:', error);\r\n      toast.error('Failed to load logs');\r\n    } finally {\r\n      dispatch({ type: 'SET_LOGS_LOADING', payload: false });\r\n    }\r\n  };\r\n\r\n  const setLogFilters = (filters: LogFilters) => {\r\n    dispatch({ type: 'SET_LOG_FILTERS', payload: filters });\r\n  };\r\n\r\n  const value: AdminContextType = {\r\n    state,\r\n    loadOverview,\r\n    loadUsers,\r\n    loadUserById,\r\n    updateUserRole,\r\n    updateUserStatus,\r\n    deleteUser,\r\n    setSelectedUser,\r\n    setUserFilters,\r\n    loadMaterials,\r\n    approveMaterial,\r\n    deleteMaterial,\r\n    setSelectedMaterial,\r\n    setMaterialFilters,\r\n    loadPayments,\r\n    refundPayment,\r\n    setSelectedPayment,\r\n    setPaymentFilters,\r\n    loadLogs,\r\n    setLogFilters\r\n  };\r\n\r\n  return (\r\n    <AdminContext.Provider value={value}>\r\n      {children}\r\n    </AdminContext.Provider>\r\n  );\r\n};\r\n\r\n// Hook to use admin context\r\nexport const useAdmin = () => {\r\n  const context = useContext(AdminContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAdmin must be used within an AdminProvider');\r\n  }\r\n  return context;\r\n}; ","import React, { createContext, useContext, useEffect, useState, ReactNode } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport api, { authAPI } from '../lib/api';\r\nimport { tokenStorage } from '../utils/secureStorage';\r\n\r\n// User interface\r\nexport interface User {\r\n  _id: string;\r\n  id: string; // Alias for backward compatibility\r\n  name: string;\r\n  email: string;\r\n  role: 'student' | 'teacher' | 'admin';\r\n  avatar?: string;\r\n  profileImage?: string;\r\n  bio?: string;\r\n  phone?: string;\r\n  emailVerified?: boolean;\r\n  isApproved?: boolean;\r\n  approvalStatus?: 'pending' | 'approved' | 'rejected';\r\n  // Learning progress fields\r\n  cefrLevel?: string;\r\n  overallProgress?: number;\r\n  currentStreak?: number;\r\n  longestStreak?: number;\r\n  totalStudyTime?: number;\r\n  achievements?: string[];\r\n  // Subscription fields\r\n  subscriptionStatus?: 'active' | 'inactive' | 'expired';\r\n  subscriptionType?: string;\r\n  subscriptionExpiry?: string;\r\n  // Lesson tokens\r\n  lessonTokens?: number;\r\n  createdAt: string;\r\n  updatedAt: string;\r\n}\r\n\r\n// Auth context interface\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  isAuthenticated: boolean;\r\n  isLoading: boolean;\r\n  loading: boolean; // Alias for backward compatibility\r\n  login: (email: string, password: string) => Promise<boolean>;\r\n  register: (userData: RegisterData) => Promise<boolean>;\r\n  logout: () => void;\r\n  refreshUser: () => Promise<void>;\r\n  setUser: (user: User | null) => void; // For backward compatibility\r\n  setAccessToken: (token: string) => void; // For backward compatibility\r\n}\r\n\r\n// Register data interface\r\ninterface RegisterData {\r\n  name: string;\r\n  email: string;\r\n  password: string;\r\n  role: 'student' | 'teacher';\r\n}\r\n\r\n// Create context\r\nexport const AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\n// Provider component\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport function AuthProvider({ children }: AuthProviderProps) {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const router = useRouter();\r\n\r\n  // Check if user is authenticated\r\n  const isAuthenticated = !!user;\r\n\r\n  // Load user on mount and when route changes\r\n  useEffect(() => {\r\n    const publicAuthPages = ['/login', '/register', '/forgot-password', '/reset-password', '/landing'];\r\n    if (publicAuthPages.includes(router.pathname)) {\r\n      setIsLoading(false);\r\n      return;\r\n    }\r\n    loadUser();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [router.pathname]);\r\n\r\n  // Load user from token\r\n  const loadUser = async () => {\r\n    try {\r\n      const token = tokenStorage.getToken();\r\n      if (!token) {\r\n        setIsLoading(false);\r\n        return;\r\n      }\r\n\r\n      console.log('Loading user with token: Token exists');\r\n      const response = await authAPI.getCurrentUser();\r\n      \r\n      console.log('Auth response:', response);\r\n      console.log('Response structure:', response);\r\n      console.log('Response.data:', response.data);\r\n      console.log('Response.data.success:', response.data?.success);\r\n      console.log('Response.data.user:', response.data?.user);\r\n\r\n      if (response.data?.success && response.data?.user) {\r\n        setUser(response.data.user);\r\n        console.log('Setting user:', response.data.user);\r\n      } else {\r\n        console.warn('Unexpected auth response structure:', response);\r\n        tokenStorage.clear();\r\n      }\r\n    } catch (error: any) {\r\n      console.error('Error loading user:', error);\r\n      \r\n      // Handle rate limiting specifically\r\n      if (error.response?.status === 429) {\r\n        const retryAfter = error.response?.data?.retryAfter || 15;\r\n        console.warn(`⚠️ Rate limited while loading user. Retry after ${retryAfter} minutes.`);\r\n        // Don't redirect to login for rate limiting, just show message\r\n        return;\r\n      }\r\n      \r\n      // For other errors, redirect to login\r\n      console.log('Error loading user, redirecting to login');\r\n      tokenStorage.clear();\r\n      if (typeof window !== 'undefined' && !window.location.pathname.includes('/login')) {\r\n        window.location.href = '/login';\r\n      }\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Login function\r\n  const login = async (email: string, password: string): Promise<boolean> => {\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await authAPI.login({ email, password });\r\n      if (response.success) {\r\n        const { accessToken, user: userData, token } = response;\r\n        const userWithId = { ...userData, id: userData._id } as User;\r\n        const provided = accessToken || token;\r\n        if (provided) tokenStorage.setToken(provided);\r\n        tokenStorage.setUser(userWithId);\r\n        setUser(userWithId);\r\n        return true;\r\n      }\r\n      return false;\r\n    } catch (_error) {\r\n      return false;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Register function\r\n  const register = async (userData: RegisterData): Promise<boolean> => {\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await authAPI.register(userData);\r\n      if (response.success) {\r\n        const { accessToken, user: newUser, token } = response;\r\n        const userWithId = { ...newUser, id: newUser._id } as User;\r\n        tokenStorage.setUser(userWithId);\r\n        setUser(userWithId);\r\n        return true;\r\n      }\r\n      return false;\r\n    } catch (_error) {\r\n      return false;\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = async () => {\r\n    try {\r\n      // Call logout API\r\n      await authAPI.logout();\r\n    } catch (error) {\r\n      console.error('Logout API error:', error);\r\n    } finally {\r\n      // Clear secure storage\r\n      tokenStorage.clear();\r\n      \r\n      // Clear user state\r\n      setUser(null);\r\n      \r\n      // Redirect to login\r\n      router.push('/login');\r\n    }\r\n  };\r\n\r\n  // Set user function for backward compatibility\r\n  const setUserFunction = (newUser: User | null) => {\r\n    setUser(newUser);\r\n  };\r\n\r\n  // Refresh user data\r\n  const refreshUser = async () => {\r\n    try {\r\n      const response = await authAPI.getCurrentUser();\r\n      \r\n      if (response.data.success) {\r\n        const updatedUser = response.data.user;\r\n        \r\n        // Add id alias for backward compatibility\r\n        const userWithId = {\r\n          ...updatedUser,\r\n          id: updatedUser._id\r\n        };\r\n        \r\n        setUser(userWithId);\r\n        tokenStorage.setUser(userWithId);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error refreshing user:', error);\r\n      // If refresh fails, logout\r\n      logout();\r\n    }\r\n  };\r\n\r\n  // Context value\r\n  const value: AuthContextType = {\r\n    user,\r\n    isAuthenticated,\r\n    isLoading,\r\n    loading: isLoading, // Alias for backward compatibility\r\n    login,\r\n    register,\r\n    logout,\r\n    refreshUser,\r\n    setUser: setUserFunction, // For backward compatibility\r\n    setAccessToken: (token: string) => {\r\n      tokenStorage.setToken(token);\r\n    }, // For backward compatibility\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\n// Custom hook to use auth context\r\nexport function useAuth() {\r\n  const context = useContext(AuthContext);\r\n  \r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  \r\n  return context;\r\n}\r\n\r\n// Alias for backward compatibility\r\nexport const useAuthContext = useAuth;\r\n\r\n// Role guard hook\r\nexport function useRoleGuard(allowedRoles: ('student' | 'teacher' | 'admin')[]) {\r\n  const { user, isAuthenticated, isLoading } = useAuth();\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    if (!isLoading) {\r\n      if (!isAuthenticated) {\r\n        router.push('/login');\r\n        return;\r\n      }\r\n\r\n      if (user && !allowedRoles.includes(user.role)) {\r\n        // Redirect to appropriate dashboard based on user role\r\n        switch (user.role) {\r\n          case 'student':\r\n            router.push('/dashboard/student');\r\n            break;\r\n          case 'teacher':\r\n            router.push('/dashboard/teacher');\r\n            break;\r\n          case 'admin':\r\n            router.push('/dashboard/admin');\r\n            break;\r\n          default:\r\n            router.push('/login');\r\n        }\r\n      }\r\n    }\r\n  }, [user, isAuthenticated, isLoading, allowedRoles, router]);\r\n\r\n  return {\r\n    hasAccess: user ? allowedRoles.includes(user.role) : false,\r\n    isLoading,\r\n    user,\r\n  };\r\n} ","import React, { createContext, useContext, useEffect, useReducer, useRef, ReactNode } from 'react';\nimport { io, Socket } from 'socket.io-client';\nimport { tokenStorage } from '../utils/secureStorage';\nimport { useAuth } from './AuthContext';\nimport { useToast } from '../components/common/Toast';\nimport api from '../lib/api';\nimport {\n  ChatState,\n  ChatContextType,\n  Conversation,\n  Message,\n  SendMessageData,\n  SocketMessage,\n  TypingData,\n  UserTypingData\n} from '../types/chat';\n\n// Initial state\nconst initialState: ChatState = {\n  conversations: [],\n  currentConversation: null,\n  messages: [],\n  loading: false,\n  error: null,\n  unreadCount: 0,\n  typingUsers: new Set()\n};\n\n// Action types\ntype ChatAction =\n  | { type: 'SET_LOADING'; payload: boolean }\n  | { type: 'SET_ERROR'; payload: string | null }\n  | { type: 'SET_CONVERSATIONS'; payload: Conversation[] }\n  | { type: 'SET_CURRENT_CONVERSATION'; payload: Conversation | null }\n  | { type: 'SET_MESSAGES'; payload: Message[] }\n  | { type: 'ADD_MESSAGE'; payload: Message }\n  | { type: 'UPDATE_CONVERSATION_LAST_MESSAGE'; payload: { conversationId: string; message: Message } }\n  | { type: 'SET_UNREAD_COUNT'; payload: number }\n  | { type: 'SET_TYPING_USER'; payload: { userId: string; isTyping: boolean } }\n  | { type: 'CLEAR_TYPING_USERS' };\n\n// Reducer\nfunction chatReducer(state: ChatState, action: ChatAction): ChatState {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return { ...state, loading: action.payload };\n    \n    case 'SET_ERROR':\n      return { ...state, error: action.payload };\n    \n    case 'SET_CONVERSATIONS':\n      return { ...state, conversations: action.payload };\n    \n    case 'SET_CURRENT_CONVERSATION':\n      return { ...state, currentConversation: action.payload };\n    \n    case 'SET_MESSAGES':\n      return { ...state, messages: action.payload };\n    \n    case 'ADD_MESSAGE':\n      return {\n        ...state,\n        messages: [...state.messages, action.payload]\n      };\n    \n    case 'UPDATE_CONVERSATION_LAST_MESSAGE':\n      return {\n        ...state,\n        conversations: state.conversations.map(conv =>\n          conv._id === action.payload.conversationId\n            ? {\n                ...conv,\n                lastMessage: {\n                  content: action.payload.message.content,\n                  sender: action.payload.message.sender._id,\n                  timestamp: action.payload.message.createdAt\n                },\n                updatedAt: action.payload.message.createdAt\n              }\n            : conv\n        )\n      };\n    \n    case 'SET_UNREAD_COUNT':\n      return { ...state, unreadCount: action.payload };\n    \n    case 'SET_TYPING_USER':\n      const newTypingUsers = new Set(state.typingUsers);\n      if (action.payload.isTyping) {\n        newTypingUsers.add(action.payload.userId);\n      } else {\n        newTypingUsers.delete(action.payload.userId);\n      }\n      return { ...state, typingUsers: newTypingUsers };\n    \n    case 'CLEAR_TYPING_USERS':\n      return { ...state, typingUsers: new Set() };\n    \n    default:\n      return state;\n  }\n}\n\n// Create context\nconst ChatContext = createContext<ChatContextType | undefined>(undefined);\n\n// Provider component\ninterface ChatProviderProps {\n  children: ReactNode;\n}\n\nexport function ChatProvider({ children }: ChatProviderProps) {\n  const [state, dispatch] = useReducer(chatReducer, initialState);\n  const { user, isAuthenticated } = useAuth();\n  const { error: showError, success: showSuccess } = useToast();\n  const socketRef = useRef<Socket | null>(null);\n  const typingTimeoutRef = useRef<NodeJS.Timeout | null>(null);\n\n  // Initialize Socket.IO connection\n  useEffect(() => {\n    if (isAuthenticated && user) {\n      const base = (process.env.NEXT_PUBLIC_API_BASE_URL || 'https://api.verbfy.com').replace(/\\/$/, '');\n      const socket = io(base, {\n        path: '/chat',\n        transports: ['websocket', 'polling'], // Prioritize WebSocket, fallback to polling\n        withCredentials: true,\n        reconnectionAttempts: 5, // Maximum 5 reconnection attempts\n        reconnectionDelay: 1000, // Start with 1 second delay\n        reconnectionDelayMax: 5000, // Maximum 5 second delay\n        forceNew: true, // Force new connection\n        auth: {\n          token: tokenStorage.getToken() || undefined\n        }\n      });\n\n      socketRef.current = socket;\n\n      // Socket event listeners\n      socket.on('connect', () => {\n        console.log('🔌 Connected to chat server via', socket.io.engine.transport.name);\n      });\n\n      socket.on('disconnect', (reason) => {\n        console.log('🔌 Disconnected from chat server:', reason);\n        if (reason === 'io server disconnect') {\n          // Server disconnected us, try to reconnect\n          socket.connect();\n        }\n      });\n\n      socket.on('receiveMessage', (message: Message) => {\n        dispatch({ type: 'ADD_MESSAGE', payload: message });\n        dispatch({\n          type: 'UPDATE_CONVERSATION_LAST_MESSAGE',\n          payload: { conversationId: message.conversationId, message }\n        });\n      });\n\n      socket.on('userTyping', (data: UserTypingData) => {\n        dispatch({\n          type: 'SET_TYPING_USER',\n          payload: { userId: data.userId, isTyping: data.isTyping }\n        });\n      });\n\n      socket.on('connect_error', (error: any) => {\n        console.error('🔌 Socket connection error:', error?.message || error);\n        console.log('🔌 Transport type:', socket.io.engine.transport.name);\n        showError('Failed to connect to chat server');\n      });\n\n      socket.on('reconnect', (attemptNumber) => {\n        console.log('🔌 Reconnected to chat server after', attemptNumber, 'attempts');\n        showSuccess('Reconnected to chat server');\n      });\n\n      socket.on('reconnect_attempt', (attemptNumber) => {\n        console.log('🔌 Attempting to reconnect:', attemptNumber);\n      });\n\n      socket.on('reconnect_failed', () => {\n        console.log('🔌 Failed to reconnect after maximum attempts');\n        showError('Failed to reconnect to chat server');\n      });\n\n      return () => {\n        socket.disconnect();\n      };\n    }\n  }, [isAuthenticated, user, showError, showSuccess]);\n\n  // Load conversations\n  const loadConversations = async () => {\n    // Only load if user is authenticated\n    if (!isAuthenticated || !user) {\n      return;\n    }\n\n    try {\n      dispatch({ type: 'SET_LOADING', payload: true });\n      dispatch({ type: 'SET_ERROR', payload: null });\n\n      const response = await api.get('/api/chat/conversations');\n      \n      if (response.data.success) {\n        dispatch({ type: 'SET_CONVERSATIONS', payload: response.data.data });\n      }\n    } catch (error: any) {\n      console.error('Error loading conversations:', error);\n      const errorMessage = error.response?.data?.message || 'Failed to load conversations';\n      dispatch({ type: 'SET_ERROR', payload: errorMessage });\n      showError(errorMessage);\n    } finally {\n      dispatch({ type: 'SET_LOADING', payload: false });\n    }\n  };\n\n  // Load messages for a conversation\n  const loadMessages = async (conversationId: string, page = 1) => {\n    // Only load if user is authenticated\n    if (!isAuthenticated || !user) {\n      return;\n    }\n\n    try {\n      dispatch({ type: 'SET_LOADING', payload: true });\n      dispatch({ type: 'SET_ERROR', payload: null });\n\n      const response = await api.get(`/chat/conversations/${conversationId}/messages?page=${page}&limit=50`);\n      \n      if (response.data.success) {\n        if (page === 1) {\n          dispatch({ type: 'SET_MESSAGES', payload: response.data.data.messages });\n        } else {\n          // For pagination, prepend older messages\n          dispatch({ type: 'SET_MESSAGES', payload: [...response.data.data.messages, ...state.messages] });\n        }\n      }\n    } catch (error: any) {\n      console.error('Error loading messages:', error);\n      const errorMessage = error.response?.data?.message || 'Failed to load messages';\n      dispatch({ type: 'SET_ERROR', payload: errorMessage });\n      showError(errorMessage);\n    } finally {\n      dispatch({ type: 'SET_LOADING', payload: false });\n    }\n  };\n\n  // Send a message\n  const sendMessage = async (data: SendMessageData) => {\n    // Only send if user is authenticated\n    if (!isAuthenticated || !user) {\n      return;\n    }\n\n    try {\n      dispatch({ type: 'SET_ERROR', payload: null });\n\n      const response = await api.post('/api/chat/messages', data);\n      \n      if (response.data.success) {\n        const message = response.data.data;\n        \n        // Add message to local state\n        dispatch({ type: 'ADD_MESSAGE', payload: message });\n        \n        // Update conversation's last message\n        dispatch({\n          type: 'UPDATE_CONVERSATION_LAST_MESSAGE',\n          payload: { conversationId: data.conversationId, message }\n        });\n\n        // Emit message via Socket.IO\n        if (socketRef.current) {\n          socketRef.current.emit('sendMessage', {\n            conversationId: data.conversationId,\n            message\n          });\n        }\n\n        showSuccess('Message sent');\n      }\n    } catch (error: any) {\n      console.error('Error sending message:', error);\n      const errorMessage = error.response?.data?.message || 'Failed to send message';\n      dispatch({ type: 'SET_ERROR', payload: errorMessage });\n      showError(errorMessage);\n    }\n  };\n\n  // Mark messages as read\n  const markAsRead = async (conversationId: string) => {\n    // Only mark as read if user is authenticated\n    if (!isAuthenticated || !user) {\n      return;\n    }\n\n    try {\n      await api.patch(`/api/chat/conversations/${conversationId}/read`);\n    } catch (error: any) {\n      console.error('Error marking messages as read:', error);\n    }\n  };\n\n  // Join a conversation room\n  const joinConversation = (conversationId: string) => {\n    if (socketRef.current) {\n      socketRef.current.emit('joinRoom', conversationId);\n    }\n  };\n\n  // Leave a conversation room\n  const leaveConversation = (conversationId: string) => {\n    if (socketRef.current) {\n      socketRef.current.emit('leaveRoom', conversationId);\n    }\n    dispatch({ type: 'CLEAR_TYPING_USERS' });\n  };\n\n  // Set typing indicator\n  const setTyping = (conversationId: string, isTyping: boolean) => {\n    if (socketRef.current && user) {\n      socketRef.current.emit('typing', {\n        conversationId,\n        userId: user._id,\n        isTyping\n      });\n\n      // Clear typing indicator after 3 seconds\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n\n      if (isTyping) {\n        typingTimeoutRef.current = setTimeout(() => {\n          setTyping(conversationId, false);\n        }, 3000);\n      }\n    }\n  };\n\n  // Load unread count\n  const loadUnreadCount = async () => {\n    // Only load if user is authenticated\n    if (!isAuthenticated || !user) {\n      return;\n    }\n\n    try {\n      const response = await api.get('/api/chat/unread-count');\n      \n      if (response.data.success) {\n        dispatch({ type: 'SET_UNREAD_COUNT', payload: response.data.data.unreadCount });\n      }\n    } catch (error: any) {\n      console.error('Error loading unread count:', error);\n    }\n  };\n\n  // Load initial data\n  useEffect(() => {\n    if (isAuthenticated && user) {\n      loadConversations();\n      loadUnreadCount();\n    }\n  }, [isAuthenticated, user]);\n\n  // Cleanup typing timeout on unmount\n  useEffect(() => {\n    return () => {\n      if (typingTimeoutRef.current) {\n        clearTimeout(typingTimeoutRef.current);\n      }\n    };\n  }, []);\n\n  const value: ChatContextType = {\n    state,\n    actions: {\n      loadConversations,\n      loadMessages,\n      sendMessage,\n      markAsRead,\n      joinConversation,\n      leaveConversation,\n      setTyping,\n      loadUnreadCount\n    }\n  };\n\n  return (\n    <ChatContext.Provider value={value}>\n      {children}\n    </ChatContext.Provider>\n  );\n}\n\n// Custom hook to use chat context\nexport function useChat() {\n  const context = useContext(ChatContext);\n  \n  if (context === undefined) {\n    throw new Error('useChat must be used within a ChatProvider');\n  }\n  \n  return context;\n} ","import React, { createContext, useContext, useReducer, useEffect, ReactNode, useRef, useCallback, useMemo } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { io, Socket } from 'socket.io-client';\nimport { tokenStorage } from '../utils/secureStorage';\nimport api from '../lib/api';\nimport { authAPI } from '../lib/api';\nimport { useAuth } from './AuthContext';\nimport {\n  Notification,\n  NotificationState,\n  NotificationAction,\n  NotificationContextType,\n  NotificationFilters\n} from '../types/notifications';\n\n// Initial state\nconst initialState: NotificationState = {\n  notifications: [],\n  unreadCount: 0,\n  loading: false,\n  error: null,\n  pagination: {\n    page: 1,\n    limit: 20,\n    total: 0,\n    pages: 0\n  }\n};\n\n// Reducer\nfunction notificationReducer(state: NotificationState, action: NotificationAction): NotificationState {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return { ...state, loading: action.payload };\n    \n    case 'SET_ERROR':\n      return { ...state, error: action.payload, loading: false };\n    \n    case 'SET_NOTIFICATIONS':\n      return {\n        ...state,\n        notifications: action.payload.notifications,\n        pagination: action.payload.pagination,\n        unreadCount: action.payload.unreadCount,\n        loading: false,\n        error: null\n      };\n    \n    case 'ADD_NOTIFICATION':\n      return {\n        ...state,\n        notifications: [action.payload, ...state.notifications],\n        unreadCount: state.unreadCount + 1\n      };\n    \n    case 'UPDATE_NOTIFICATION':\n      return {\n        ...state,\n        notifications: state.notifications.map(notification =>\n          notification._id === action.payload._id ? action.payload : notification\n        )\n      };\n    \n    case 'DELETE_NOTIFICATION':\n      return {\n        ...state,\n        notifications: state.notifications.filter(notification =>\n          notification._id !== action.payload\n        )\n      };\n    \n    case 'MARK_AS_READ':\n      return {\n        ...state,\n        notifications: state.notifications.map(notification =>\n          notification._id === action.payload._id\n            ? { ...notification, isRead: true, readAt: new Date().toISOString() }\n            : notification\n        ),\n        unreadCount: Math.max(0, state.unreadCount - 1)\n      };\n    \n    case 'MARK_ALL_AS_READ':\n      return {\n        ...state,\n        notifications: state.notifications.map(notification => ({\n          ...notification,\n          isRead: true,\n          readAt: new Date().toISOString()\n        })),\n        unreadCount: 0\n      };\n    \n    case 'SET_UNREAD_COUNT':\n      return { ...state, unreadCount: action.payload };\n    \n    default:\n      return state;\n  }\n}\n\n// Create context\nconst NotificationContext = createContext<NotificationContextType | undefined>(undefined);\n\n// Provider component\ninterface NotificationProviderProps {\n  children: ReactNode;\n}\n\nexport function NotificationProvider({ children }: NotificationProviderProps) {\n  const [state, dispatch] = useReducer(notificationReducer, initialState);\n  const { user, isAuthenticated } = useAuth();\n  const socketRef = useRef<Socket | null>(null);\n\n  const token = useMemo(() => tokenStorage.getToken(), []);\n\n  const socket = useMemo(() => {\n    if (!token) return null;\n    \n    console.log('🔌 Creating socket with token');\n    \n    return io(process.env.NEXT_PUBLIC_API_URL || 'https://api.verbfy.com', {\n      path: '/notifications',\n      transports: ['websocket', 'polling'],\n      forceNew: true,\n      withCredentials: true,\n      upgrade: true,\n      rememberUpgrade: true,\n      auth: {\n        token: token\n      }\n    });\n  }, [token]);\n\n\n\n  // Fetch notifications from API\n  const fetchNotifications = async (filters: NotificationFilters = {}) => {\n    // Only fetch if user is authenticated\n    if (!isAuthenticated || !user) {\n      return;\n    }\n\n    try {\n      dispatch({ type: 'SET_LOADING', payload: true });\n\n      const params = new URLSearchParams();\n      Object.entries(filters).forEach(([key, value]) => {\n        if (value !== undefined && value !== null) {\n          params.append(key, value.toString());\n        }\n      });\n\n      const response = await api.get(`/api/notifications?${params.toString()}`);\n      \n      if (response.data.success) {\n        dispatch({\n          type: 'SET_NOTIFICATIONS',\n          payload: response.data.data\n        });\n      }\n    } catch (error: any) {\n      console.error('Error fetching notifications:', error);\n      const errorMessage = error.response?.data?.message || 'Failed to load notifications';\n      dispatch({ type: 'SET_ERROR', payload: errorMessage });\n      toast.error(errorMessage);\n    }\n  };\n\n  // Mark notification as read\n  const markAsRead = async (id: string) => {\n    // Only mark as read if user is authenticated\n    if (!isAuthenticated || !user) {\n      return;\n    }\n\n    try {\n      const response = await api.patch(`/api/notifications/${id}/read`);\n      \n      if (response.data.success) {\n        dispatch({\n          type: 'MARK_AS_READ',\n          payload: response.data.data.notification\n        });\n      }\n    } catch (error: any) {\n      console.error('Error marking notification as read:', error);\n      const errorMessage = error.response?.data?.message || 'Failed to mark notification as read';\n      toast.error(errorMessage);\n    }\n  };\n\n  // Mark all notifications as read\n  const markAllAsRead = async () => {\n    // Only mark all as read if user is authenticated\n    if (!isAuthenticated || !user) {\n      return;\n    }\n\n    try {\n      const response = await api.patch('/api/notifications/read-all');\n      \n      if (response.data.success) {\n        dispatch({ type: 'MARK_ALL_AS_READ' });\n        toast.success('All notifications marked as read');\n      }\n    } catch (error: any) {\n      console.error('Error marking all notifications as read:', error);\n      const errorMessage = error.response?.data?.message || 'Failed to mark all notifications as read';\n      toast.error(errorMessage);\n    }\n  };\n\n  // Delete notification\n  const deleteNotification = async (id: string) => {\n    // Only delete if user is authenticated\n    if (!isAuthenticated || !user) {\n      return;\n    }\n\n    try {\n      const response = await api.delete(`/api/notifications/${id}`);\n      \n      if (response.data.success) {\n        dispatch({ type: 'DELETE_NOTIFICATION', payload: id });\n        toast.success('Notification deleted');\n      }\n    } catch (error: any) {\n      console.error('Error deleting notification:', error);\n      const errorMessage = error.response?.data?.message || 'Failed to delete notification';\n      toast.error(errorMessage);\n    }\n  };\n\n  // Add notification to state (for real-time updates)\n  const addNotification = (notification: Notification) => {\n    dispatch({ type: 'ADD_NOTIFICATION', payload: notification });\n    \n    // Show toast for new notifications\n    const config = getNotificationConfig(notification.type);\n    toast.success(\n      <div>\n        <div className=\"font-semibold\">{notification.title}</div>\n        <div className=\"text-sm opacity-90\">{notification.body}</div>\n      </div>,\n      {\n        duration: 5000,\n        icon: config.icon,\n        style: {\n          background: '#363636',\n          color: '#fff',\n        }\n      }\n    );\n  };\n\n  const getUnreadCount = async () => {\n    // Only get unread count if user is authenticated\n    if (!isAuthenticated || !user) {\n      return;\n    }\n\n    try {\n      const response = await api.get('/api/notifications/unread-count');\n      \n      if (response.data.success) {\n        dispatch({\n          type: 'SET_UNREAD_COUNT',\n          payload: response.data.data.unreadCount\n        });\n      }\n    } catch (error: any) {\n      console.error('Error getting unread count:', error);\n    }\n  };\n\n  // Socket.IO connection and event listeners for real-time notifications\n  useEffect(() => {\n    if (!isAuthenticated || !user || !socket) return;\n\n    console.log('🔌 Initiating socket connection...');\n    \n    // Set up event listeners\n    socket.on('connect', () => {\n      console.log('🔌 Socket connected successfully via polling');\n      \n      // After successful connection, try to upgrade to websocket silently\n      setTimeout(() => {\n        try {\n          console.log('🔄 Socket connected and ready for real-time communication');\n        } catch (e) {\n          console.log('Socket setup completed');\n        }\n      }, 1000);\n      \n      // Join user's notification room\n      if (user?._id) {\n        socket.emit('joinNotificationRoom', user._id);\n      }\n    });\n\n    socket.on('connect_error', (error) => {\n      console.log('🔌 Socket connection error (expected during initial setup):', error.message);\n      // Don't show error to user, this is normal during connection setup\n    });\n\n    socket.on('disconnect', (reason) => {\n      console.log('🔌 Socket disconnected:', reason);\n      if (reason === 'io server disconnect') {\n        console.log('🔄 Server disconnected, attempting reconnect...');\n        setTimeout(() => {\n          socket.connect();\n        }, 1000);\n      }\n    });\n\n    socket.on('reconnect', (attemptNumber) => {\n      console.log('🔄 Socket reconnected after', attemptNumber, 'attempts');\n      if (user?._id) {\n        socket.emit('joinNotificationRoom', user._id);\n      }\n    });\n\n    // Listen for new notifications\n    socket.on('notification:new', (data: { notification: Notification }) => {\n      addNotification(data.notification);\n    });\n\n    // Listen for notification updates\n    socket.on('notification:updated', (data: { notification: Notification }) => {\n      dispatch({\n        type: 'UPDATE_NOTIFICATION',\n        payload: data.notification\n      });\n    });\n\n    // Listen for notification deletions\n    socket.on('notification:deleted', (data: { id: string }) => {\n      dispatch({\n        type: 'DELETE_NOTIFICATION',\n        payload: data.id\n      });\n    });\n\n    // Connect the socket\n    socket.connect();\n    \n    // Store reference\n    socketRef.current = socket;\n\n    return () => {\n      if (socket) {\n        socket.off('connect');\n        socket.off('connect_error');\n        socket.off('disconnect');\n        socket.off('reconnect');\n        socket.off('reconnect_error');\n        socket.off('reconnect_failed');\n        socket.off('notification:new');\n        socket.off('notification:updated');\n        socket.off('notification:deleted');\n        socket.disconnect();\n      }\n      socketRef.current = null;\n    };\n  }, [isAuthenticated, user, socket]);\n\n  // Initial load - only when user is authenticated\n  useEffect(() => {\n    if (isAuthenticated && user) {\n      fetchNotifications();\n      getUnreadCount();\n    }\n  }, [isAuthenticated, user]);\n\n  // Poll for unread count every 30 seconds as fallback - only when authenticated\n  useEffect(() => {\n    if (!isAuthenticated || !user) return;\n\n    const interval = setInterval(() => {\n      getUnreadCount();\n    }, 30000);\n\n    return () => clearInterval(interval);\n  }, [isAuthenticated, user]);\n\n  const value: NotificationContextType = {\n    state,\n    fetchNotifications,\n    markAsRead,\n    markAllAsRead,\n    deleteNotification,\n    addNotification,\n    getUnreadCount\n  };\n\n  return (\n    <NotificationContext.Provider value={value}>\n      {children}\n    </NotificationContext.Provider>\n  );\n}\n\n// Custom hook to use notification context\nexport function useNotifications() {\n  const context = useContext(NotificationContext);\n  \n  if (context === undefined) {\n    throw new Error('useNotifications must be used within a NotificationProvider');\n  }\n  \n  return context;\n}\n\n// Helper function to get notification config\nfunction getNotificationConfig(type: Notification['type']) {\n  const configs = {\n    message: { icon: '💬' },\n    reservation: { icon: '📅' },\n    material: { icon: '📚' },\n    admin: { icon: '⚙️' },\n    lesson: { icon: '🎓' },\n    payment: { icon: '💰' },\n    system: { icon: '🔔' }\n  };\n  \n  return configs[type] || configs.system;\n} ","import axios from 'axios';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { RoomFilters, RoomsResponse, CreateRoomData, RoomResponse, JoinRoomData } from '@/types/verbfyTalk';\r\nimport { MaterialFilters, MaterialsResponse, FreeMaterial, UploadMaterialData } from '@/types/freeMaterials';\r\nimport { LessonFilters, LessonResponse, StartLessonResponse, SubmitLessonRequest, SubmitLessonResponse, LessonStats, VerbfyLesson } from '@/types/verbfyLessons';\r\nimport { TestFilters, TestResponse, StartTestResponse, SubmitTestRequest, SubmitTestResponse, PlacementRecommendation, TestStats, CEFRTest, TestAttempt } from '@/types/cefrTests';\r\nimport { PersonalizedCurriculum, CreateCurriculumRequest, UpdateProgressRequest, UpdateStudyScheduleRequest, CurriculumAnalytics, CurriculumRecommendation } from '@/types/personalizedCurriculum';\r\nimport { AchievementsData } from '@/types/achievements';\r\nimport { StudyGroupsData, CreateStudyGroupData, StudyGroupFilters } from '@/types/studyGroups';\r\nimport { AILearningSession, CreateAISessionData, AIResponseData, AIResponse, SessionProgressData, AISessionsResponse, Recommendation, GenerateRecommendationsData, AISessionAnalytics, AISessionAnalyticsFilters } from '@/types/aiLearning';\r\nimport { AdaptivePath, CreateAdaptivePathData, UpdateModuleProgressData, AdaptivePathFilters, AdaptivePathResponse, AdaptivePathsResponse, AdaptivePathAnalytics, AdaptiveRecommendation } from '@/types/adaptiveLearning';\r\nimport { TeacherAnalytics, GenerateAnalyticsData, StudentPerformanceData, LessonAnalyticsData, EngagementMetricsData, AnalyticsFilters, TeacherAnalyticsResponse, StudentPerformanceResponse, LessonAnalyticsResponse, EngagementMetricsResponse } from '@/types/teacherAnalytics';\r\nimport { AITutoringSession, AITutoringMessage, AIContentGeneration, AIContentGenerationRequest, AIContentGenerationResponse, AIAnalytics, AIUserProgress, AIRecommendation, AISessionFilters, AIContentFilters, AIAnalyticsFilters, AISessionResponse, AIContentResponse, AIAnalyticsResponse } from '@/types/aiFeatures';\r\nimport { tokenStorage } from '../utils/secureStorage';\r\n\r\n// Create axios instance with fallback for test environment\r\nlet api: any;\r\ntry {\r\n  // Build base URL so that all calls hit /api/*\r\n  // If NEXT_PUBLIC_API_BASE_URL is not set (Cloudflare Pages), use same-origin and rely on _redirects\r\n  // Otherwise allow pointing directly to backend like https://api.verbfy.com\r\n  api = (axios as any).create?.({\r\n    baseURL: (() => {\r\n      const raw = process.env.NEXT_PUBLIC_API_BASE_URL || '';\r\n      const trimmed = raw.replace(/\\/$/, '');\r\n      \r\n      // Check if we're in production (verbfy.com domain)\r\n      if (typeof window !== 'undefined') {\r\n        const hostname = window.location.hostname;\r\n        if (hostname === 'verbfy.com' || hostname === 'www.verbfy.com') {\r\n          return 'https://api.verbfy.com';\r\n        }\r\n      }\r\n      \r\n      // If no env is provided, default to production API domain\r\n      if (!trimmed) return 'https://api.verbfy.com';\r\n      return trimmed;\r\n    })(),\r\n    timeout: 30000,\r\n    withCredentials: true,\r\n    headers: { \r\n      'Content-Type': 'application/json'\r\n    },\r\n  });\r\n} catch {\r\n  api = undefined;\r\n}\r\nif (!api || !api.get || !api.post) {\r\n  api = axios as any;\r\n}\r\n\r\n// Add CORS test function\r\nexport const corsTestAPI = {\r\n  testCORS: () => {\r\n    return api.get('/api/cors-test');\r\n  }\r\n};\r\n\r\n// Request interceptor to add auth token\r\nif ((api as any)?.interceptors?.request) {\r\n  api.interceptors.request.use(\r\n    (config: any) => {\r\n      const token = tokenStorage.getToken();\r\n      if (token) {\r\n        config.headers = config.headers || {};\r\n        config.headers.Authorization = `Bearer ${token}`;\r\n      }\r\n      try {\r\n        const isWrite = ['post', 'put', 'patch', 'delete'].includes((config.method || 'get').toLowerCase());\r\n        if (isWrite && typeof document !== 'undefined') {\r\n          const match = document.cookie.match(/(?:^|; )XSRF-TOKEN=([^;]+)/);\r\n          const csrf = match ? decodeURIComponent(match[1]) : undefined;\r\n          if (csrf) {\r\n            (config.headers as any)['X-CSRF-Token'] = csrf;\r\n          }\r\n          (config.headers as any)['Idempotency-Key'] = uuidv4();\r\n        }\r\n      } catch {}\r\n      return config;\r\n    },\r\n    (error: any) => Promise.reject(error)\r\n  );\r\n}\r\n\r\n// Response interceptor for error handling\r\nif ((api as any)?.interceptors?.response) {\r\n  api.interceptors.response.use(\r\n    (response: any) => response,\r\n    (error: any) => {\r\n      // Handle rate limiting\r\n      if (error.response?.status === 429) {\r\n        const retryAfter = error.response?.data?.retryAfter || 15;\r\n        console.warn(`⚠️ Rate limited (429). Retry after ${retryAfter} minutes.`);\r\n        \r\n        // Show user-friendly message\r\n        if (typeof window !== 'undefined') {\r\n          // Use toast if available, otherwise alert\r\n          try {\r\n            const { toast } = require('react-hot-toast');\r\n            toast.error(`Too many requests. Please wait ${retryAfter} minutes before trying again.`);\r\n          } catch {\r\n            alert(`Too many requests. Please wait ${retryAfter} minutes before trying again.`);\r\n          }\r\n        }\r\n        \r\n        // Don't redirect to login for rate limiting\r\n        return Promise.reject(error);\r\n      }\r\n      \r\n      if (error.response?.status === 401) {\r\n        tokenStorage.clear();\r\n        if (typeof window !== 'undefined' && !window.location.pathname.includes('/login')) {\r\n          window.location.href = '/login';\r\n        }\r\n      }\r\n      if (!error.response) {\r\n        console.error('Network error:', error.message);\r\n      }\r\n      return Promise.reject(error);\r\n    }\r\n  );\r\n}\r\n\r\n// API helper functions\r\nexport const materialsAPI = {\r\n  // Get all materials with filters\r\n  getMaterials: (filters: any = {}) => {\r\n    const params = new URLSearchParams();\r\n    Object.entries(filters).forEach(([key, value]) => {\r\n      if (value) params.append(key, (value as any).toString());\r\n    });\r\n    return api.get(`/api/materials?${params.toString()}`).then((r: any) => r.data);\r\n  },\r\n\r\n  // Get material by ID\r\n  getMaterial: (id: string) => {\r\n    return api.get(`/api/materials/${id}`).then((r: any) => r.data);\r\n  },\r\n\r\n  // Upload material\r\n  uploadMaterial: (formData: FormData) => {\r\n    return api.post('/api/materials/upload', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    }).then((r: any) => r.data);\r\n  },\r\n\r\n  // Update material\r\n  updateMaterial: (id: string, data: any) => {\r\n    return api.put(`/api/materials/${id}`, data).then((r: any) => r.data);\r\n  },\r\n\r\n  // Delete material\r\n  deleteMaterial: (id: string) => {\r\n    return api.delete(`/api/materials/${id}`).then((r: any) => r.data);\r\n  },\r\n\r\n  // Preview material\r\n  previewMaterial: (id: string) => {\r\n    return api.get(`/api/materials/${id}/preview`).then((r: any) => r.data);\r\n  },\r\n\r\n  // Download material\r\n  downloadMaterial: (id: string) => {\r\n    return api.get(`/api/materials/${id}/download`, { responseType: 'blob' }).then((r: any) => r.data);\r\n  },\r\n};\r\n\r\nexport const authAPI = {\r\n  // Login\r\n  login: (credentials: { email: string; password: string }) => {\r\n    return api.post('/api/auth/login', credentials).then((r: any) => r.data);\r\n  },\r\n\r\n  // Register\r\n  register: (userData: { name: string; email: string; password: string; role: string }) => {\r\n    return api.post('/api/auth/register', userData).then((r: any) => r.data);\r\n  },\r\n\r\n  // Logout\r\n  logout: () => {\r\n    return api.post('/api/auth/logout').then((r: any) => r.data);\r\n  },\r\n\r\n  // Get current user\r\n  getCurrentUser: () => {\r\n    return api.get('/api/auth/me');\r\n  },\r\n\r\n  // Refresh token\r\n  refreshToken: () => {\r\n    return api.post('/api/auth/refresh').then((r: any) => r.data);\r\n  },\r\n};\r\n\r\nexport const userAPI = {\r\n  // Get user profile\r\n  getProfile: () => {\r\n    return api.get('/api/users/profile').then((r: any) => r.data);\r\n  },\r\n\r\n  // Update user profile\r\n  updateProfile: (data: any) => {\r\n    return api.put('/api/users/profile', data).then((r: any) => r.data);\r\n  },\r\n\r\n  // Upload avatar\r\n  uploadAvatar: (file: File) => {\r\n    const form = new FormData();\r\n    form.append('avatar', file);\r\n    return api.post('/api/users/profile/avatar', form, {\r\n      headers: { 'Content-Type': 'multipart/form-data' },\r\n    }).then((r: any) => r.data);\r\n  },\r\n\r\n  // Get S3 presigned upload URL\r\n  getPresignedUploadUrl: (key: string, contentType: string) => {\r\n    return api.get(`/api/users/uploads/presign`, { params: { key, contentType } }).then((r: any) => r.data);\r\n  },\r\n};\r\n\r\nexport const reservationAPI = {\r\n  // Get reservations\r\n  getReservations: (filters: any = {}) => {\r\n    const params = new URLSearchParams();\r\n    Object.entries(filters).forEach(([key, value]) => {\r\n      if (value) params.append(key, value.toString());\r\n    });\r\n    return api.get(`/api/reservations?${params.toString()}`);\r\n  },\r\n\r\n  // Create reservation\r\n  createReservation: (data: any) => {\r\n    return api.post('/api/reservations', data);\r\n  },\r\n\r\n  // Update reservation\r\n  updateReservation: (id: string, data: any) => {\r\n    return api.put(`/api/reservations/${id}`, data);\r\n  },\r\n\r\n  // Delete reservation\r\n  deleteReservation: (id: string) => {\r\n    return api.delete(`/api/reservations/${id}`);\r\n  },\r\n};\r\n\r\nexport const availabilityAPI = {\r\n  // Get availability\r\n  getAvailability: (teacherId: string) => {\r\n    return api.get(`/api/availability/${teacherId}`);\r\n  },\r\n\r\n  // Set availability\r\n  setAvailability: (data: any) => {\r\n    return api.post('/api/availability', data);\r\n  },\r\n\r\n  // Update availability\r\n  updateAvailability: (id: string, data: any) => {\r\n    return api.put(`/api/availability/${id}`, data);\r\n  },\r\n\r\n  // Delete availability\r\n  deleteAvailability: (id: string) => {\r\n    return api.delete(`/api/availability/${id}`);\r\n  },\r\n};\r\n\r\nexport const notificationAPI = {\r\n  // Get notifications\r\n  getNotifications: () => {\r\n    return api.get('/api/notifications');\r\n  },\r\n\r\n  // Mark notification as read\r\n  markAsRead: (id: string) => {\r\n    return api.patch(`/api/notifications/${id}/read`);\r\n  },\r\n\r\n  // Mark all notifications as read\r\n  markAllAsRead: () => {\r\n    return api.patch('/api/notifications/read-all');\r\n  },\r\n};\r\n\r\nexport const messagesAPI = {\r\n  // Get conversations\r\n  getConversations: () => {\r\n    return api.get('/api/messages/conversations');\r\n  },\r\n\r\n  // Get messages for conversation\r\n  getMessages: (conversationId: string) => {\r\n    return api.get(`/api/messages/conversations/${conversationId}`);\r\n  },\r\n\r\n  // Send message\r\n  sendMessage: (conversationId: string, data: { content: string; type?: string }) => {\r\n    return api.post(`/api/messages/conversations/${conversationId}`, data);\r\n  },\r\n\r\n  // Create conversation\r\n  createConversation: (data: { participantId: string; initialMessage?: string }) => {\r\n    return api.post('/api/messages/conversations', data);\r\n  },\r\n\r\n  // Mark messages as read\r\n  markAsRead: (conversationId: string) => {\r\n    return api.patch(`/api/messages/conversations/${conversationId}/read`);\r\n  },\r\n};\r\n\r\nexport const analyticsAPI = {\r\n  // Get teacher analytics\r\n  getTeacherAnalytics: () => {\r\n    return api.get('/api/analytics/teacher');\r\n  },\r\n\r\n  // Get student analytics\r\n  getStudentAnalytics: () => {\r\n    return api.get('/api/analytics/student');\r\n  },\r\n\r\n  // Get admin analytics\r\n  getAdminAnalytics: () => {\r\n    return api.get('/api/analytics/admin');\r\n  },\r\n\r\n  // Get earnings report\r\n  getEarningsReport: (period = 'month', startDate?: string, endDate?: string) => {\r\n    const params = new URLSearchParams({ period });\r\n    if (startDate) params.append('startDate', startDate);\r\n    if (endDate) params.append('endDate', endDate);\r\n    return api.get(`/api/analytics/earnings?${params.toString()}`);\r\n  },\r\n\r\n  // Get progress report\r\n  getProgressReport: (skill?: string, period = 'month') => {\r\n    const params = new URLSearchParams({ period });\r\n    if (skill) params.append('skill', skill);\r\n    return api.get(`/api/analytics/progress?${params.toString()}`);\r\n  },\r\n};\r\n\r\nexport const paymentAPI = {\r\n  // Create checkout session\r\n  createCheckoutSession: (data: { productId: string; couponCode?: string }) => {\r\n    return api.post('/api/payments/create-session', data);\r\n  },\r\n\r\n  // Get payment history\r\n  getPaymentHistory: (params?: any) => {\r\n    return api.get('/api/payments/history', { params });\r\n  },\r\n\r\n  // Get available products\r\n  getProducts: (params?: any) => {\r\n    return api.get('/api/payments/products', { params });\r\n  },\r\n\r\n  // Get payment statistics\r\n  getPaymentStats: () => {\r\n    return api.get('/api/payments/stats');\r\n  },\r\n\r\n  // Refund payment (admin only)\r\n  refundPayment: (paymentId: string, data: { reason?: string }) => {\r\n    return api.post(`/api/payments/${paymentId}/refund`, data);\r\n  },\r\n};\r\n\r\nexport const adminAPI = {\r\n  // Overview & Analytics\r\n  getOverview: () => {\r\n    return api.get('/api/admin/overview');\r\n  },\r\n\r\n  // Get admin stats (legacy)\r\n  getStats: () => {\r\n    return api.get('/api/admin/stats');\r\n  },\r\n\r\n  // Get recent activities (legacy)\r\n  getActivities: () => {\r\n    return api.get('/api/admin/activities');\r\n  },\r\n\r\n  // User Management\r\n  getUsers: (params?: any) => {\r\n    return api.get('/api/admin/users', { params });\r\n  },\r\n\r\n  getUserById: (id: string) => {\r\n    return api.get(`/api/admin/users/${id}`);\r\n  },\r\n\r\n  updateUserRole: (id: string, role: string) => {\r\n    return api.patch(`/api/admin/users/${id}/role`, { role });\r\n  },\r\n\r\n  updateUserStatus: (userId: string, status: string) => {\r\n    return api.patch(`/api/admin/users/${userId}/status`, { status });\r\n  },\r\n\r\n  deleteUser: (id: string) => {\r\n    return api.delete(`/api/admin/users/${id}`);\r\n  },\r\n\r\n  // Material Moderation\r\n  getMaterials: (params?: any) => {\r\n    return api.get('/api/admin/materials', { params });\r\n  },\r\n\r\n  approveMaterial: (id: string, data: { approved: boolean; reason?: string }) => {\r\n    return api.patch(`/api/admin/materials/${id}/approve`, data);\r\n  },\r\n\r\n  deleteMaterial: (id: string) => {\r\n    return api.delete(`/api/admin/materials/${id}`);\r\n  },\r\n\r\n  // Payment Management\r\n  getPayments: (params?: any) => {\r\n    return api.get('/api/admin/payments', { params });\r\n  },\r\n\r\n  refundPayment: (id: string, data: { reason?: string }) => {\r\n    return api.patch(`/api/admin/payments/${id}/refund`, data);\r\n  },\r\n\r\n  // Logs & Activity\r\n  getLogs: (params?: any) => {\r\n    return api.get('/api/admin/logs', { params });\r\n  },\r\n};\r\n\r\n// VerbfyTalk API functions\r\nexport const verbfyTalkAPI = {\r\n  // Get all available rooms\r\n  getRooms: async (filters?: RoomFilters): Promise<RoomsResponse> => {\r\n    const params = new URLSearchParams();\r\n    if (filters?.level) params.append('level', filters.level);\r\n    if (filters?.isPrivate !== undefined) params.append('isPrivate', filters.isPrivate.toString());\r\n    if (filters?.page) params.append('page', filters.page.toString());\r\n    if (filters?.limit) params.append('limit', filters.limit.toString());\r\n\r\n    const response = await api.get(`/api/verbfy-talk?${params.toString()}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Get user's rooms\r\n  getUserRooms: async (page = 1, limit = 10): Promise<RoomsResponse> => {\r\n    const response = await api.get(`/api/verbfy-talk/my-rooms?page=${page}&limit=${limit}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Create a new room\r\n  createRoom: async (roomData: CreateRoomData): Promise<RoomResponse> => {\r\n    const response = await api.post('/api/verbfy-talk', roomData);\r\n    return response.data;\r\n  },\r\n\r\n  // Get room details\r\n  getRoomDetails: async (roomId: string): Promise<RoomResponse> => {\r\n    const response = await api.get(`/api/verbfy-talk/${roomId}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Join a room\r\n  joinRoom: async (roomId: string, joinData?: JoinRoomData): Promise<RoomResponse> => {\r\n    const response = await api.post(`/api/verbfy-talk/${roomId}/join`, joinData || {});\r\n    return response.data;\r\n  },\r\n\r\n  // Leave a room\r\n  leaveRoom: async (roomId: string): Promise<{ success: boolean; message: string }> => {\r\n    const response = await api.post(`/api/verbfy-talk/${roomId}/leave`);\r\n    return response.data;\r\n  },\r\n\r\n  // Update room\r\n  updateRoom: async (roomId: string, roomData: Partial<CreateRoomData>): Promise<RoomResponse> => {\r\n    const response = await api.put(`/api/verbfy-talk/${roomId}`, roomData);\r\n    return response.data;\r\n  },\r\n\r\n  // Delete room\r\n  deleteRoom: async (roomId: string): Promise<{ success: boolean; message: string }> => {\r\n    const response = await api.delete(`/api/verbfy-talk/${roomId}`);\r\n    return response.data;\r\n  }\r\n};\r\n\r\n// Free Materials API functions\r\nexport const freeMaterialsAPI = {\r\n  // Get all materials\r\n  getMaterials: async (filters?: MaterialFilters): Promise<MaterialsResponse> => {\r\n    const params = new URLSearchParams();\r\n    if (filters?.category) params.append('category', filters.category);\r\n    if (filters?.level) params.append('level', filters.level);\r\n    if (filters?.search) params.append('search', filters.search);\r\n    if (filters?.sortBy) params.append('sortBy', filters.sortBy);\r\n    if (filters?.sortOrder) params.append('sortOrder', filters.sortOrder);\r\n    if (filters?.page) params.append('page', filters.page.toString());\r\n    if (filters?.limit) params.append('limit', filters.limit.toString());\r\n    if (filters?.featured) params.append('featured', filters.featured.toString());\r\n\r\n    const response = await api.get(`/api/free-materials?${params.toString()}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Get featured materials\r\n  getFeaturedMaterials: async (): Promise<{ success: boolean; data: FreeMaterial[] }> => {\r\n    const response = await api.get('/api/free-materials/featured');\r\n    return response.data;\r\n  },\r\n\r\n  // Get material categories\r\n  getCategories: async (): Promise<{ success: boolean; data: string[] }> => {\r\n    const response = await api.get('/api/free-materials/categories');\r\n    return response.data;\r\n  },\r\n\r\n  // Get material levels\r\n  getLevels: async (): Promise<{ success: boolean; data: string[] }> => {\r\n    const response = await api.get('/api/free-materials/levels');\r\n    return response.data;\r\n  },\r\n\r\n  // Get material by ID\r\n  getMaterial: async (id: string): Promise<{ success: boolean; data: FreeMaterial }> => {\r\n    const response = await api.get(`/api/free-materials/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Upload material\r\n  uploadMaterial: async (materialData: UploadMaterialData): Promise<{ success: boolean; data: FreeMaterial }> => {\r\n    const formData = new FormData();\r\n    formData.append('title', materialData.title);\r\n    formData.append('description', materialData.description);\r\n    formData.append('category', materialData.category);\r\n    formData.append('level', materialData.level);\r\n    if (materialData.tags) formData.append('tags', materialData.tags);\r\n    if (materialData.isFeatured) formData.append('isFeatured', materialData.isFeatured.toString());\r\n    formData.append('file', materialData.file);\r\n\r\n    const response = await api.post('/api/free-materials', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data'\r\n      }\r\n    });\r\n    return response.data;\r\n  },\r\n\r\n  // Rate material\r\n  rateMaterial: async (id: string, rating: number): Promise<{ success: boolean; message: string }> => {\r\n    const response = await api.post(`/api/free-materials/${id}/rate`, { rating });\r\n    return response.data;\r\n  },\r\n\r\n  // Update material\r\n  updateMaterial: async (id: string, materialData: Partial<UploadMaterialData>): Promise<{ success: boolean; data: FreeMaterial }> => {\r\n    const response = await api.put(`/api/free-materials/${id}`, materialData);\r\n    return response.data;\r\n  },\r\n\r\n  // Delete material\r\n  deleteMaterial: async (id: string): Promise<{ success: boolean; message: string }> => {\r\n    const response = await api.delete(`/api/free-materials/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Download material\r\n  downloadMaterial: async (id: string): Promise<Blob> => {\r\n    const response = await api.get(`/api/free-materials/${id}/download`, {\r\n      responseType: 'blob'\r\n    });\r\n    return response.data;\r\n  }\r\n};\r\n\r\n// Student Lessons API\r\nexport const lessonAPI = {\r\n  // Get student's lessons\r\n  getStudentLessons: async (filters?: any): Promise<any> => {\r\n    const params = new URLSearchParams();\r\n    Object.entries(filters || {}).forEach(([key, value]) => {\r\n      if (value && value !== 'all') params.append(key, value.toString());\r\n    });\r\n    const response = await api.get(`/api/lessons/student?${params.toString()}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Get lesson details\r\n  getLesson: async (id: string): Promise<any> => {\r\n    const response = await api.get(`/api/lessons/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Join lesson\r\n  joinLesson: async (lessonId: string): Promise<any> => {\r\n    const response = await api.post(`/api/lessons/${lessonId}/join`);\r\n    return response.data;\r\n  },\r\n\r\n  // Leave lesson\r\n  leaveLesson: async (lessonId: string): Promise<any> => {\r\n    const response = await api.post(`/api/lessons/${lessonId}/leave`);\r\n    return response.data;\r\n  }\r\n};\r\n\r\n// Verbfy Lessons API\r\nexport const verbfyLessonsAPI = {\r\n  // Get all lessons with filters\r\n  getLessons: async (filters?: any): Promise<any> => {\r\n    const params = new URLSearchParams();\r\n    Object.entries(filters || {}).forEach(([key, value]) => {\r\n      if (value) params.append(key, value.toString());\r\n    });\r\n    const response = await api.get(`/api/verbfy-lessons?${params.toString()}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Get lesson by ID\r\n  getLesson: async (id: string): Promise<any> => {\r\n    const response = await api.get(`/api/verbfy-lessons/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Create lesson (admin/teacher only)\r\n  createLesson: async (data: any): Promise<any> => {\r\n    const response = await api.post('/api/verbfy-lessons', data);\r\n    return response.data;\r\n  },\r\n\r\n  // Update lesson (admin/teacher only)\r\n  updateLesson: async (id: string, data: any): Promise<any> => {\r\n    const response = await api.put(`/api/verbfy-lessons/${id}`, data);\r\n    return response.data;\r\n  },\r\n\r\n  // Delete lesson (admin/teacher only)\r\n  deleteLesson: async (id: string): Promise<any> => {\r\n    const response = await api.delete(`/api/verbfy-lessons/${id}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Start lesson attempt\r\n  startLesson: async (lessonId: string): Promise<any> => {\r\n    const response = await api.post(`/api/verbfy-lessons/${lessonId}/start`);\r\n    return response.data;\r\n  },\r\n\r\n  // Submit lesson attempt\r\n  submitLesson: async (attemptId: string, data: any): Promise<any> => {\r\n    const response = await api.post(`/api/verbfy-lessons/attempt/${attemptId}/submit`, data);\r\n    return response.data;\r\n  },\r\n\r\n  // Get lesson categories\r\n  getCategories: async (): Promise<any> => {\r\n    const response = await api.get('/api/verbfy-lessons/categories');\r\n    return response.data;\r\n  },\r\n\r\n  // Get lesson statistics\r\n  getStats: async (lessonId: string): Promise<any> => {\r\n    const response = await api.get(`/api/verbfy-lessons/${lessonId}/stats`);\r\n    return response.data;\r\n  },\r\n};\r\n\r\n// CEFR Tests API\r\nexport const cefrTestsAPI = {\r\n  // Get all tests with filters\r\n  getTests: async (filters: any = {}): Promise<TestResponse> => {\r\n    const params = new URLSearchParams();\r\n    Object.entries(filters).forEach(([key, value]) => {\r\n      if (value !== undefined && value !== null) params.append(key, value.toString());\r\n    });\r\n    const response = await api.get(`/api/cefr-tests?${params.toString()}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Get test by ID\r\n  getTest: async (testId: string): Promise<CEFRTest> => {\r\n    const response = await api.get(`/api/cefr-tests/${testId}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Start test\r\n  startTest: async (testId: string): Promise<StartTestResponse> => {\r\n    const response = await api.post(`/api/cefr-tests/${testId}/start`);\r\n    return response.data;\r\n  },\r\n\r\n  // Submit test\r\n  submitTest: async (attemptId: string, data: SubmitTestRequest): Promise<SubmitTestResponse> => {\r\n    const response = await api.post(`/api/cefr-tests/attempt/${attemptId}/submit`, data);\r\n    return response.data;\r\n  },\r\n\r\n  // Get test attempt details (may not be available on all backends)\r\n  getTestAttempt: async (attemptId: string): Promise<TestAttempt> => {\r\n    const response = await api.get(`/api/cefr-tests/attempt/${attemptId}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Get test statistics\r\n  getTestStats: async (testId: string): Promise<TestStats> => {\r\n    const response = await api.get(`/api/cefr-tests/${testId}/stats`);\r\n    return response.data;\r\n  },\r\n\r\n  // Get placement recommendation\r\n  getPlacementRecommendation: async (): Promise<PlacementRecommendation> => {\r\n    const response = await api.get('/api/cefr-tests/placement/recommendation');\r\n    return response.data;\r\n  },\r\n\r\n  // Seed 50Q Global Placement (admin only)\r\n  seedGlobalPlacement: async () => {\r\n    const response = await api.post('/api/cefr-tests/seed/global-placement');\r\n    return response.data;\r\n  },\r\n  // Seed Kids A1–B1 (admin only)\r\n  seedKidsA1B1: async () => {\r\n    const response = await api.post('/api/cefr-tests/seed/kids-a1-b1');\r\n    return response.data;\r\n  },\r\n  // Seed Adults A1–B2 (admin only)\r\n  seedAdultsA1B2: async () => {\r\n    const response = await api.post('/api/cefr-tests/seed/adults-a1-b2');\r\n    return response.data;\r\n  },\r\n  // Seed Advanced B1–C2 (admin only)\r\n  seedAdvancedB1C2: async () => {\r\n    return api.post('/api/cefr-tests/seed/advanced-b1-c2');\r\n  },\r\n};\r\n\r\n// Personalized Curriculum API\r\nexport const personalizedCurriculumAPI = {\r\n  // Create curriculum\r\n  createCurriculum: async (data: CreateCurriculumRequest): Promise<{ curriculum: PersonalizedCurriculum }> => {\r\n    const response = await api.post('/api/personalized-curriculum', data);\r\n    return response.data;\r\n  },\r\n\r\n  // Get user's curriculum\r\n  getCurriculum: async (): Promise<PersonalizedCurriculum> => {\r\n    const response = await api.get('/api/personalized-curriculum');\r\n    return response.data;\r\n  },\r\n\r\n  // Update curriculum progress\r\n  updateProgress: async (data: UpdateProgressRequest): Promise<{ message: string }> => {\r\n    const response = await api.put('/api/personalized-curriculum/progress', data);\r\n    return response.data;\r\n  },\r\n\r\n  // Update study schedule\r\n  updateStudySchedule: async (data: UpdateStudyScheduleRequest): Promise<{ message: string }> => {\r\n    const response = await api.put('/api/personalized-curriculum/schedule', data);\r\n    return response.data;\r\n  },\r\n\r\n  // Get curriculum analytics\r\n  getAnalytics: async (): Promise<{ analytics: CurriculumAnalytics }> => {\r\n    const response = await api.get('/api/personalized-curriculum/analytics');\r\n    return response.data;\r\n  },\r\n\r\n  // Get recommendations\r\n  getRecommendations: async (): Promise<{ recommendations: CurriculumRecommendation[] }> => {\r\n    const response = await api.get('/api/personalized-curriculum/recommendations');\r\n    return response.data;\r\n  },\r\n\r\n  // Complete recommendation\r\n  completeRecommendation: async (recommendationId: string): Promise<{ message: string }> => {\r\n    const response = await api.post(`/api/personalized-curriculum/recommendations/${recommendationId}/complete`);\r\n    return response.data;\r\n  },\r\n\r\n  // Get study schedule\r\n  getStudySchedule: async (): Promise<any> => {\r\n    const response = await api.get('/api/personalized-curriculum/schedule');\r\n    return response.data;\r\n  },\r\n\r\n  // Add study session\r\n  addStudySession: async (data: any): Promise<any> => {\r\n    const response = await api.post('/api/personalized-curriculum/schedule/sessions', data);\r\n    return response.data;\r\n  },\r\n\r\n  // Complete study session\r\n  completeStudySession: async (sessionId: number): Promise<any> => {\r\n    const response = await api.post(`/api/personalized-curriculum/schedule/sessions/${sessionId}/complete`);\r\n    return response.data;\r\n  },\r\n};\r\n\r\n// Function to set API access token (for backward compatibility)\r\nexport const setApiAccessToken = (token: string) => {\r\n  localStorage.setItem('verbfy_token', token);\r\n};\r\n\r\n// Achievements API\r\nexport const achievementsAPI = {\r\n  // Get user achievements\r\n  getAchievements: async (): Promise<any> => {\r\n    const response = await api.get('/api/achievements');\r\n    return response.data;\r\n  },\r\n\r\n  // Get achievement progress\r\n  getProgress: async (achievementId: number): Promise<any> => {\r\n    const response = await api.get(`/api/achievements/${achievementId}/progress`);\r\n    return response.data;\r\n  },\r\n\r\n  // Get leaderboard\r\n  getLeaderboard: async (): Promise<any> => {\r\n    const response = await api.get('/api/achievements/leaderboard');\r\n    return response.data;\r\n  },\r\n\r\n  // Unlock achievement\r\n  unlockAchievement: async (achievementId: number): Promise<any> => {\r\n    const response = await api.post(`/api/achievements/${achievementId}/unlock`);\r\n    return response.data;\r\n  },\r\n};\r\n\r\n// Games API\r\nexport const gamesAPI = {\r\n  list: async (params?: any) => {\r\n    return api.get('/api/games', { params });\r\n  },\r\n  create: async (data: { title: string; description?: string; category?: string; level?: string; thumbnailUrl?: string; gameUrl: string }) => {\r\n    return api.post('/api/games', data);\r\n  },\r\n  delete: async (id: string) => {\r\n    return api.delete(`/api/games/${id}`);\r\n  },\r\n};\r\n\r\n// Study Groups API\r\nexport const studyGroupsAPI = {\r\n  // Get user's study groups\r\n  getMyGroups: async (): Promise<any> => {\r\n    const response = await api.get('/api/study-groups/my');\r\n    return response.data;\r\n  },\r\n\r\n  // Get discoverable groups\r\n  getDiscoverGroups: async (filters?: any): Promise<any> => {\r\n    const response = await api.get('/api/study-groups/discover', { params: filters });\r\n    return response.data;\r\n  },\r\n\r\n  // Create study group\r\n  createGroup: async (data: any): Promise<any> => {\r\n    const response = await api.post('/api/study-groups', data);\r\n    return response.data;\r\n  },\r\n\r\n  // Join study group\r\n  joinGroup: async (groupId: number, password?: string): Promise<any> => {\r\n    const response = await api.post(`/api/study-groups/${groupId}/join`, { password });\r\n    return response.data;\r\n  },\r\n\r\n  // Leave study group\r\n  leaveGroup: async (groupId: number): Promise<any> => {\r\n    const response = await api.post(`/api/study-groups/${groupId}/leave`);\r\n    return response.data;\r\n  },\r\n\r\n  // Get group details\r\n  getGroupDetails: async (groupId: number): Promise<any> => {\r\n    const response = await api.get(`/api/study-groups/${groupId}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Send message to group\r\n  sendMessage: async (groupId: number, message: string): Promise<any> => {\r\n    const response = await api.post(`/api/study-groups/${groupId}/messages`, { message });\r\n    return response.data;\r\n  },\r\n\r\n  // Get group messages\r\n  getMessages: async (groupId: number): Promise<any> => {\r\n    const response = await api.get(`/api/study-groups/${groupId}/messages`);\r\n    return response.data;\r\n  },\r\n};\r\n\r\n// AI Learning API\r\nexport const aiLearningAPI = {\r\n  // Create AI learning session\r\n  createSession: async (data: CreateAISessionData): Promise<{ session: AILearningSession }> => {\r\n    const response = await api.post('/api/ai-learning/sessions', data);\r\n    return response.data;\r\n  },\r\n\r\n  // Get AI response\r\n  getAIResponse: async (data: AIResponseData): Promise<AIResponse> => {\r\n    const response = await api.post('/api/ai-learning/response', data);\r\n    return response.data;\r\n  },\r\n\r\n  // Get user sessions\r\n  getSessions: async (filters?: AISessionFilters): Promise<AISessionsResponse> => {\r\n    const params = new URLSearchParams();\r\n    Object.entries(filters || {}).forEach(([key, value]) => {\r\n      if (value) params.append(key, value.toString());\r\n    });\r\n    const response = await api.get(`/api/ai-learning/sessions?${params.toString()}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Update session progress\r\n  updateSessionProgress: async (sessionId: string, data: SessionProgressData): Promise<{ message: string }> => {\r\n    const response = await api.put(`/api/ai-learning/sessions/${sessionId}/progress`, data);\r\n    return response.data;\r\n  },\r\n\r\n  // Generate recommendations\r\n  generateRecommendations: async (data: GenerateRecommendationsData): Promise<{ recommendations: Recommendation[] }> => {\r\n    const response = await api.post('/api/ai-learning/recommendations', data);\r\n    return response.data;\r\n  },\r\n\r\n  // Get session analytics\r\n  getSessionAnalytics: async (filters?: AISessionAnalyticsFilters): Promise<{ analytics: AISessionAnalytics }> => {\r\n    const params = new URLSearchParams();\r\n    Object.entries(filters || {}).forEach(([key, value]) => {\r\n      if (value) params.append(key, value.toString());\r\n    });\r\n    const response = await api.get(`/api/ai-learning/sessions/analytics?${params.toString()}`);\r\n    return response.data;\r\n  },\r\n};\r\n\r\n// Adaptive Learning API\r\nexport const adaptiveLearningAPI = {\r\n  // Create adaptive path\r\n  createPath: async (data: CreateAdaptivePathData): Promise<AdaptivePathResponse> => {\r\n    const response = await api.post('/api/adaptive-learning/paths', data);\r\n    return response.data;\r\n  },\r\n\r\n  // Get user's adaptive paths\r\n  getPaths: async (filters?: AdaptivePathFilters): Promise<AdaptivePathsResponse> => {\r\n    const params = new URLSearchParams();\r\n    Object.entries(filters || {}).forEach(([key, value]) => {\r\n      if (value) params.append(key, value.toString());\r\n    });\r\n    const response = await api.get(`/api/adaptive-learning/paths?${params.toString()}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Get adaptive path by ID\r\n  getPath: async (pathId: string): Promise<AdaptivePathResponse> => {\r\n    const response = await api.get(`/api/adaptive-learning/paths/${pathId}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Update module progress\r\n  updateModuleProgress: async (data: UpdateModuleProgressData): Promise<{ message: string }> => {\r\n    const response = await api.put('/api/adaptive-learning/paths/progress', data);\r\n    return response.data;\r\n  },\r\n\r\n  // Get adaptive recommendations\r\n  getRecommendations: async (pathId: string): Promise<{ recommendations: AdaptiveRecommendation[] }> => {\r\n    const response = await api.get(`/api/adaptive-learning/paths/${pathId}/recommendations`);\r\n    return response.data;\r\n  },\r\n\r\n  // Get path analytics\r\n  getPathAnalytics: async (pathId: string): Promise<{ analytics: AdaptivePathAnalytics }> => {\r\n    const response = await api.get(`/api/adaptive-learning/paths/${pathId}/analytics`);\r\n    return response.data;\r\n  },\r\n};\r\n\r\n// Teacher Analytics API\r\nexport const teacherAnalyticsAPI = {\r\n  // Generate analytics\r\n  generateAnalytics: async (data: GenerateAnalyticsData): Promise<TeacherAnalyticsResponse> => {\r\n    const response = await api.post('/api/teacher-analytics/generate', data);\r\n    return response.data;\r\n  },\r\n\r\n  // Get teacher analytics\r\n  getAnalytics: async (filters?: AnalyticsFilters): Promise<TeacherAnalyticsResponse> => {\r\n    const params = new URLSearchParams();\r\n    Object.entries(filters || {}).forEach(([key, value]) => {\r\n      if (value) params.append(key, value.toString());\r\n    });\r\n    const response = await api.get(`/api/teacher-analytics?${params.toString()}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Get student performance\r\n  getStudentPerformance: async (filters?: AnalyticsFilters): Promise<StudentPerformanceResponse> => {\r\n    const params = new URLSearchParams();\r\n    Object.entries(filters || {}).forEach(([key, value]) => {\r\n      if (value) params.append(key, value.toString());\r\n    });\r\n    const response = await api.get(`/api/teacher-analytics/student-performance?${params.toString()}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Get lesson analytics\r\n  getLessonAnalytics: async (filters?: AnalyticsFilters): Promise<LessonAnalyticsResponse> => {\r\n    const params = new URLSearchParams();\r\n    Object.entries(filters || {}).forEach(([key, value]) => {\r\n      if (value) params.append(key, value.toString());\r\n    });\r\n    const response = await api.get(`/api/teacher-analytics/lesson-analytics?${params.toString()}`);\r\n    return response.data;\r\n  },\r\n\r\n  // Get engagement metrics\r\n  getEngagementMetrics: async (filters?: AnalyticsFilters): Promise<EngagementMetricsResponse> => {\r\n    const params = new URLSearchParams();\r\n    Object.entries(filters || {}).forEach(([key, value]) => {\r\n      if (value) params.append(key, value.toString());\r\n    });\r\n    const response = await api.get(`/api/teacher-analytics/engagement?${params.toString()}`);\r\n    return response.data;\r\n  },\r\n};\r\n\r\n// AI Features API\r\nexport const aiFeaturesAPI = {\r\n  // AI Tutoring Sessions\r\n  startTutoringSession: async (data: { sessionType: string; cefrLevel: string }): Promise<AITutoringSession> => {\r\n    const response = await api.post('/api/ai-features/tutoring/sessions', data);\r\n    return response.data;\r\n  },\r\n\r\n  sendTutoringMessage: async (sessionId: string, data: { content: string; messageType: string }): Promise<{ message: AITutoringMessage; session?: AITutoringSession }> => {\r\n    const response = await api.post(`/api/ai-features/tutoring/sessions/${sessionId}/messages`, data);\r\n    return response.data;\r\n  },\r\n\r\n  endTutoringSession: async (sessionId: string): Promise<AITutoringSession> => {\r\n    const response = await api.put(`/api/ai-features/tutoring/sessions/${sessionId}/end`);\r\n    return response.data;\r\n  },\r\n\r\n  getTutoringSessions: async (filters?: AISessionFilters): Promise<AISessionResponse> => {\r\n    const params = new URLSearchParams();\r\n    Object.entries(filters || {}).forEach(([key, value]) => {\r\n      if (value) params.append(key, value.toString());\r\n    });\r\n    const response = await api.get(`/api/ai-features/tutoring/sessions?${params.toString()}`);\r\n    return response.data;\r\n  },\r\n\r\n  getTutoringSession: async (sessionId: string): Promise<AITutoringSession> => {\r\n    const response = await api.get(`/api/ai-features/tutoring/sessions/${sessionId}`);\r\n    return response.data;\r\n  },\r\n\r\n  // AI Content Generation\r\n  generateContent: async (data: AIContentGenerationRequest): Promise<AIContentGenerationResponse> => {\r\n    const response = await api.post('/api/ai-features/content/generate', data);\r\n    return response.data;\r\n  },\r\n\r\n  getGeneratedContent: async (filters?: AIContentFilters): Promise<AIContentResponse> => {\r\n    const params = new URLSearchParams();\r\n    Object.entries(filters || {}).forEach(([key, value]) => {\r\n      if (value) params.append(key, value.toString());\r\n    });\r\n    const response = await api.get(`/api/ai-features/content?${params.toString()}`);\r\n    return response.data;\r\n  },\r\n\r\n  getContent: async (contentId: string): Promise<AIContentGeneration> => {\r\n    const response = await api.get(`/api/ai-features/content/${contentId}`);\r\n    return response.data;\r\n  },\r\n\r\n  reviewContent: async (contentId: string, data: { status: string; notes?: string }): Promise<{ message: string }> => {\r\n    const response = await api.put(`/api/ai-features/content/${contentId}/review`, data);\r\n    return response.data;\r\n  },\r\n\r\n  updateContent: async (contentId: string, data: Partial<AIContentGeneration>): Promise<AIContentGeneration> => {\r\n    const response = await api.put(`/api/ai-features/content/${contentId}`, data);\r\n    return response.data;\r\n  },\r\n\r\n  deleteContent: async (contentId: string): Promise<{ message: string }> => {\r\n    const response = await api.delete(`/api/ai-features/content/${contentId}`);\r\n    return response.data;\r\n  },\r\n\r\n  // AI Analytics\r\n  getAnalytics: async (filters?: AIAnalyticsFilters): Promise<{ analytics: AIAnalytics }> => {\r\n    const params = new URLSearchParams();\r\n    Object.entries(filters || {}).forEach(([key, value]) => {\r\n      if (value) params.append(key, value.toString());\r\n    });\r\n    const response = await api.get(`/api/ai-features/analytics?${params.toString()}`);\r\n    return response.data;\r\n  },\r\n\r\n  getUserProgress: async (filters?: AIAnalyticsFilters): Promise<AIUserProgress> => {\r\n    const params = new URLSearchParams();\r\n    Object.entries(filters || {}).forEach(([key, value]) => {\r\n      if (value) params.append(key, value.toString());\r\n    });\r\n    const response = await api.get(`/api/ai-features/user-progress?${params.toString()}`);\r\n    return response.data;\r\n  },\r\n\r\n  // AI Recommendations\r\n  getRecommendations: async (): Promise<{ recommendations: AIRecommendation[] }> => {\r\n    const response = await api.get('/api/ai-features/recommendations');\r\n    return response.data;\r\n  },\r\n\r\n  completeRecommendation: async (recommendationId: string): Promise<{ message: string }> => {\r\n    const response = await api.post(`/api/ai-features/recommendations/${recommendationId}/complete`);\r\n    return response.data;\r\n  },\r\n\r\n  // AI Model Management\r\n  getModelInfo: async (): Promise<{ model: string; version: string; status: string }> => {\r\n    const response = await api.get('/api/ai-features/model-info');\r\n    return response.data;\r\n  },\r\n\r\n  updateModelSettings: async (data: { model: string; settings: any }): Promise<{ message: string }> => {\r\n    const response = await api.put('/api/ai-features/model-settings', data);\r\n    return response.data;\r\n  },\r\n};\r\n\r\nexport default api; ","import { createContext, useContext, useEffect, useMemo, useState } from 'react';\r\n\r\ntype Locale = 'en' | 'tr';\r\n\r\ntype Messages = Record<string, string>;\r\n\r\ninterface I18nContextValue {\r\n  locale: Locale;\r\n  t: (key: string, fallback?: string) => string;\r\n  setLocale: (loc: Locale) => void;\r\n}\r\n\r\nconst I18nContext = createContext<I18nContextValue | undefined>(undefined);\r\n\r\nconst en: Messages = {\r\n  'auth.login.title': 'Sign in',\r\n  'auth.login.email': 'Email',\r\n  'auth.login.password': 'Password',\r\n  'auth.login.submit': 'Sign in',\r\n  'auth.login.welcome': 'Welcome back to your learning journey',\r\n  'auth.login.emailPlaceholder': 'Enter your email',\r\n  'auth.login.passwordPlaceholder': 'Enter your password',\r\n  'auth.login.remember': 'Remember me',\r\n  'auth.login.forgot': 'Forgot your password?',\r\n  'auth.login.signingin': 'Signing in...',\r\n  'auth.login.or': 'Or continue with',\r\n  'auth.login.google': 'Sign in with Google',\r\n  'auth.login.outlook': 'Sign in with Outlook',\r\n  'auth.login.apple': 'Sign in with Apple',\r\n  'auth.login.new': 'New to Verbfy?',\r\n  'auth.login.join': 'Join Now',\r\n\r\n  'auth.register.title': 'Create account',\r\n  'auth.register.tagline': 'Join the learning revolution',\r\n  'auth.register.name': 'Full Name',\r\n  'auth.register.namePlaceholder': 'Enter your full name',\r\n  'auth.register.email': 'Email Address',\r\n  'auth.register.emailPlaceholder': 'Enter your email',\r\n  'auth.register.password': 'Password',\r\n  'auth.register.passwordPlaceholder': 'Create a strong password',\r\n  'auth.register.role': 'I want to join as',\r\n  'auth.register.role.student': 'Student - Learn English',\r\n  'auth.register.role.teacher': 'Teacher - Teach English (requires admin approval)',\r\n  'auth.register.creating': 'Creating account...',\r\n  'auth.register.submit': 'Create account',\r\n  'auth.register.or': 'Or sign up with',\r\n  'auth.register.google': 'Continue with Google',\r\n  'auth.register.outlook': 'Continue with Outlook',\r\n  'auth.register.apple': 'Continue with Apple',\r\n  'auth.register.have': 'Already have an account?',\r\n  'auth.register.signin': 'Sign in here',\r\n\r\n  'nav.profile': 'Profile',\r\n  'nav.dashboard': 'Dashboard',\r\n  'nav.verbfytalk': 'VerbfyTalk',\r\n  'nav.freeMaterials': 'Free Materials',\r\n  'nav.verbfyLessons': 'Verbfy Lessons',\r\n  'nav.cefrTests': 'CEFR Tests',\r\n  'nav.curriculum': 'Personalized Curriculum',\r\n  'nav.aiLearning': 'AI Learning Assistant',\r\n  'nav.adaptive': 'Adaptive Learning',\r\n  'nav.aiContent': 'AI Content Generation',\r\n  'nav.chat': 'Chat',\r\n  'nav.materials': 'Materials',\r\n  'nav.payments': 'Payments',\r\n\r\n  'profile.save': 'Save Changes',\r\n  'profile.resendVerification': 'Resend verification',\r\n  'profile.emailVerified': 'Your email is verified.',\r\n  'profile.emailNotVerified': 'Your email is not verified.',\r\n  'profile.name': 'Name',\r\n  'profile.email': 'Email',\r\n  'profile.bio': 'Bio',\r\n\r\n  'forgot.title': 'Forgot Password',\r\n  'forgot.email': 'Email',\r\n  'forgot.submit': 'Send Reset Link',\r\n\r\n  'reset.title': 'Reset Password',\r\n  'reset.new': 'New Password (min 8 chars)',\r\n  'reset.confirm': 'Confirm Password',\r\n  'reset.submit': 'Reset Password',\r\n\r\n  'verify.title': 'Verify Email',\r\n  'verify.success': 'Email verified. You can close this page or go to dashboard.',\r\n  'verify.goDashboard': 'Go to dashboard',\r\n\r\n  'footer.privacy': 'Privacy Policy',\r\n  'footer.terms': 'Terms of Service',\r\n  'footer.help': 'Help Center',\r\n  'footer.rights': 'All rights reserved.',\r\n\r\n  // Landing\r\n  'landing.nav.features': 'Features',\r\n  'landing.nav.how': 'How it Works',\r\n  'landing.nav.teachers': 'Teachers',\r\n  'landing.nav.pricing': 'Pricing',\r\n  'landing.nav.levelTest': 'Free Level Test',\r\n  'landing.nav.signIn': 'Sign In',\r\n  'landing.nav.getStarted': 'Get Started',\r\n  'landing.nav.goDashboard': 'Go to Dashboard',\r\n\r\n  'landing.hero.title1': 'Master English with',\r\n  'landing.hero.title2': 'Expert Teachers',\r\n  'landing.hero.subtitle': 'Join thousands of learners worldwide and transform your English skills with live video lessons, personalized learning, and proven methodologies.',\r\n  'landing.hero.start': 'Start Learning Free',\r\n  'landing.hero.demo': 'Watch Demo',\r\n\r\n  'landing.features.title': 'Why Choose Verbfy?',\r\n  'landing.features.subtitle': 'Our platform combines cutting-edge technology with proven teaching methods to deliver exceptional results.',\r\n  'landing.feature.liveTalk.title': 'Live VerbfyTalk Rooms',\r\n  'landing.feature.liveTalk.desc': 'Real-time conversation practice powered by LiveKit with low-latency audio/video.',\r\n  'landing.feature.aiLearning.title': 'AI Learning Assistant',\r\n  'landing.feature.aiLearning.desc': 'Personalized recommendations, feedback and adaptive sessions.',\r\n  'landing.feature.lessons.title': 'Verbfy Lessons',\r\n  'landing.feature.lessons.desc': 'Curated lesson flows aligned with CEFR and real-world scenarios.',\r\n  'landing.feature.freeMaterials.title': 'Free Materials',\r\n  'landing.feature.freeMaterials.desc': 'Carefully designed materials, exercises and downloads.',\r\n  'landing.feature.cefr.title': 'CEFR Tests',\r\n  'landing.feature.cefr.desc': 'Placement and practice tests to track your progress accurately.',\r\n  'landing.feature.analytics.title': 'Progress Analytics',\r\n  'landing.feature.analytics.desc': 'Track skills, streaks and achievements with clear dashboards.',\r\n\r\n  // Featured materials\r\n  'landing.featuredMaterials.title': 'Featured Materials',\r\n  'landing.featuredMaterials.subtitle': 'Hand-picked free resources to boost your skills',\r\n  'landing.featuredMaterials.viewAll': 'View all',\r\n\r\n  'landing.how.title': 'How It Works',\r\n  'landing.how.subtitle': 'Get started with Verbfy in just four simple steps.',\r\n  'landing.how.step1.title': 'Sign Up',\r\n  'landing.how.step1.desc': 'Create your free account and complete your profile.',\r\n  'landing.how.step2.title': 'Choose Your Teacher',\r\n  'landing.how.step2.desc': 'Find the right teacher for your goals and schedule.',\r\n  'landing.how.step3.title': 'Book Your Lesson',\r\n  'landing.how.step3.desc': 'Pick a time that works and reserve instantly.',\r\n  'landing.how.step4.title': 'Start Learning',\r\n  'landing.how.step4.desc': 'Join live sessions and follow your adaptive path.',\r\n\r\n  'landing.teachers.title': 'Meet Our Expert Teachers',\r\n  'landing.teachers.subtitle': 'Certified teachers with strong track records of student success.',\r\n  'landing.teachers.book': 'Book Lesson',\r\n\r\n  'landing.pricing.title': 'Choose Your Plan',\r\n  'landing.pricing.subtitle': 'Flexible pricing designed to fit your goals and budget.',\r\n  'landing.pricing.popular': 'Most Popular',\r\n  'landing.pricing.cta': 'Get Started',\r\n\r\n  // Pricing details\r\n  'pricing.monthly.name': 'Monthly Membership',\r\n  'pricing.monthly.badge': '1 Token Gift',\r\n  'pricing.monthly.f1': 'Unlimited platform access',\r\n  'pricing.monthly.f2': 'All free materials',\r\n  'pricing.monthly.f3': 'Community features',\r\n  'pricing.monthly.f4': 'Includes 1 VerbfyToken (25 min 1:1 lesson)',\r\n  'pricing.yearly.name': 'Yearly Membership',\r\n  'pricing.yearly.badge': 'Best Value • 12 Tokens Gift',\r\n  'pricing.yearly.f1': 'Everything in Monthly',\r\n  'pricing.yearly.f2': 'Priority support',\r\n  'pricing.yearly.f3': 'Includes 12 VerbfyTokens (12×25 min 1:1 lessons)',\r\n  'pricing.token.name': 'VerbfyToken (Add-on)',\r\n  'pricing.token.title': '1 Token = 25 min One-to-one Private Lesson',\r\n  'pricing.token.f1': 'Spend 1 token per 25-minute 1:1 lesson',\r\n  'pricing.token.f2': 'Token bundles available to active subscribers',\r\n  'pricing.token.f3': 'Purchase after subscription',\r\n\r\n  'landing.cta.title': 'Ready to Start Your English Journey?',\r\n  'landing.cta.subtitle': 'Join thousands of learners who already trust Verbfy.',\r\n  'landing.cta.start': 'Start Learning Free',\r\n  'landing.cta.learnMore': 'Learn More',\r\n\r\n  // Testimonials & FAQ\r\n  'landing.testimonials.title': 'What learners say',\r\n  'landing.testimonials.q1': 'Verbfy helped me gain confidence to speak at work meetings.',\r\n  'landing.testimonials.a1': 'Aylin, Product Manager',\r\n  'landing.testimonials.q2': 'The AI recommendations kept me consistent and improving.',\r\n  'landing.testimonials.a2': 'Deniz, University Student',\r\n  'landing.testimonials.q3': 'Live lessons were super engaging and practical.',\r\n  'landing.testimonials.a3': 'Emre, Software Engineer',\r\n  'landing.faq.title': 'Frequently asked questions',\r\n  'landing.faq.q1': 'How do live lessons work?',\r\n  'landing.faq.a1': 'Join scheduled sessions with teachers via VerbfyTalk powered by LiveKit.',\r\n  'landing.faq.q2': 'Can I learn for free?',\r\n  'landing.faq.a2': 'Yes, explore hundreds of free materials and community sessions.',\r\n  'landing.faq.q3': 'Is Verbfy for beginners?',\r\n  'landing.faq.a3': 'Absolutely. Our CEFR-aligned modules cover A1 to C2.',\r\n  'landing.faq.q4': 'Do you offer certificates?',\r\n  'landing.faq.a4': 'Yes, complete paths award shareable certificates.',\r\n\r\n  // Stats labels\r\n  'landing.stats.learners': 'Active learners',\r\n  'landing.stats.lessons': 'Live lessons delivered',\r\n  'landing.stats.teachers': 'Expert teachers',\r\n  'landing.stats.rating': 'Average rating',\r\n\r\n  // Footer blocks\r\n  'footer.blurb': 'Empowering learners worldwide to master English through innovative technology and expert instruction.',\r\n  'footer.product': 'Product',\r\n  'footer.company': 'Company',\r\n  'footer.support': 'Support',\r\n  'footer.links.features': 'Features',\r\n  'footer.links.pricing': 'Pricing',\r\n  'footer.links.teachers': 'Teachers',\r\n  'footer.links.materials': 'Materials',\r\n  'footer.links.about': 'About',\r\n  'footer.links.careers': 'Careers',\r\n  'footer.links.blog': 'Blog',\r\n  'footer.links.contact': 'Contact',\r\n  'footer.cookie': 'Cookie Policy',\r\n\r\n  // Verbfy suite descriptions\r\n  'suite.title': 'Learn the language in all dimensions.',\r\n  'suite.subtitle': 'Modules specially designed for speaking, listening, writing, reading, grammar and exam preparation.',\r\n  'suite.more': 'More',\r\n  'suite.talk': 'Improve your fluency with live conversation rooms, natural dialogues and instant feedback.',\r\n  'suite.listen': 'Practice real-life listening with podcasts, daily conversations and accent diversity.',\r\n  'suite.write': 'Write more effectively with writing tasks, templates and AI-powered feedback.',\r\n  'suite.read': 'Develop reading with level-appropriate texts, vocabulary work and comprehension questions.',\r\n  'suite.grammar': 'Learn grammar systematically with topic explanations, interactive exercises and reinforcement tests.',\r\n  'suite.exam': 'Prepare for your target score with CEFR-aligned mock exams, timed tests and detailed performance analysis.',\r\n\r\n  // Common\r\n  'common.loading': 'Loading...',\r\n  'common.delete': 'Delete',\r\n  'common.save': 'Save',\r\n  'common.cancel': 'Cancel',\r\n  'common.preview': 'Preview',\r\n  'common.submitting': 'Submitting...',\r\n\r\n  // Home\r\n  'home.title': 'Home',\r\n  'home.stats.unread': 'Unread notifications',\r\n  'home.stats.upcoming': 'Upcoming lessons',\r\n  'home.stats.rooms': 'Open talk rooms',\r\n  'home.stats.materials': 'Featured materials',\r\n  'home.shortcut.teachers': 'Find Teachers',\r\n  'home.shortcut.talk': 'Join VerbfyTalk',\r\n  'home.shortcut.materials': 'Free Materials',\r\n  'home.shortcut.cefr': 'CEFR Tests',\r\n  'home.upcoming': 'Your upcoming lessons',\r\n  'home.viewAll': 'View all',\r\n  'home.upcomingEmpty': 'No upcoming lessons yet',\r\n  'home.materialsEmpty': 'No featured materials yet',\r\n  'home.rooms': 'Open VerbfyTalk rooms',\r\n  'home.roomsEmpty': 'No rooms available right now',\r\n  'home.lesson': 'Lesson',\r\n  'home.manage': 'Manage',\r\n  'home.room': 'Room',\r\n  'home.private': 'Private',\r\n  'home.public': 'Public',\r\n\r\n  // Teachers\r\n  'teachers.title': 'Find Teachers',\r\n  'teachers.search': 'Search teachers',\r\n  'teachers.empty': 'No teachers found',\r\n  'teachers.detail': 'Teacher',\r\n  'teachers.availability': 'Availability (next 7 days)',\r\n  'teachers.noSlots': 'No slots',\r\n  'teachers.selected': 'Selected',\r\n  'teachers.book': 'Book Lesson',\r\n  'teachers.booked': 'Reservation created',\r\n  'teachers.bookError': 'Could not create reservation',\r\n\r\n  // Teacher schedule\r\n  'tschedule.title': 'My Schedule',\r\n  'tschedule.add': 'Add available slot',\r\n  'tschedule.date': 'Date',\r\n  'tschedule.time': 'Time',\r\n  'tschedule.duration': 'Duration (min)',\r\n  'tschedule.addBtn': 'Add Slot',\r\n  'tschedule.list': 'Upcoming availability',\r\n  'tschedule.empty': 'No availability yet',\r\n\r\n  // Teacher materials\r\n  'tmaterials.title': 'My Materials',\r\n  'tmaterials.upload': 'Upload new material',\r\n  'tmaterials.titleLabel': 'Title',\r\n  'tmaterials.level': 'Level',\r\n  'tmaterials.category': 'Category',\r\n  'tmaterials.description': 'Description',\r\n  'tmaterials.file': 'File',\r\n  'tmaterials.uploadBtn': 'Upload',\r\n  'tmaterials.edit': 'Edit Material',\r\n\r\n  // Teacher students\r\n  'tstudents.title': 'My Students',\r\n  'tstudents.empty': 'No students yet',\r\n\r\n  // Teacher earnings\r\n  'tearnings.title': 'Earnings',\r\n  'tearnings.empty': 'No earnings yet',\r\n  'tearnings.total': 'Total Earnings',\r\n  'tearnings.month': 'This Month',\r\n  'tearnings.sessions': 'Paid Sessions',\r\n\r\n  // VerbfyTalk actions\r\n  'talk.join': 'Join Room',\r\n  'talk.joining': 'Joining...',\r\n\r\n  // Admin common\r\n  'admin.search': 'Search...',\r\n  'admin.all': 'All',\r\n  'admin.pending': 'Pending',\r\n  'admin.approved': 'Approved',\r\n  'admin.rejected': 'Rejected',\r\n  'admin.actions': 'Actions',\r\n  'admin.name': 'Name',\r\n  'admin.email': 'Email',\r\n  'admin.user': 'User',\r\n  'admin.created': 'Created',\r\n  'admin.delete': 'Delete',\r\n  'admin.refund': 'Refund',\r\n  'admin.prev': 'Prev',\r\n  'admin.next': 'Next',\r\n  'admin.page': 'Page',\r\n  'admin.role': 'Role',\r\n  'admin.status': 'Status',\r\n  'admin.refresh': 'Refresh',\r\n  'admin.student': 'Student',\r\n  'admin.teacher': 'Teacher',\r\n  'admin.admin': 'Admin',\r\n  'admin.approve': 'Approve',\r\n  'admin.reject': 'Reject',\r\n\r\n  // Admin pages\r\n  'admin.materials.title': 'Admin • Materials',\r\n  'admin.materials.titleCol': 'Title',\r\n  'admin.materials.level': 'Level',\r\n  'admin.materials.category': 'Category',\r\n  'admin.materials.uploader': 'Uploader',\r\n  'admin.materials.status': 'Status',\r\n  'admin.materials.approve': 'Approve',\r\n  'admin.materials.reject': 'Unapprove',\r\n  'admin.materials.empty': 'No materials',\r\n\r\n  'admin.payments.title': 'Admin • Payments',\r\n  'admin.payments.amount': 'Amount',\r\n  'admin.succeeded': 'Succeeded',\r\n  'admin.refunded': 'Refunded',\r\n  'admin.failed': 'Failed',\r\n  'admin.payments.empty': 'No payments',\r\n\r\n  'admin.logs.title': 'Admin • Logs',\r\n  'admin.logs.empty': 'No logs',\r\n\r\n  'admin.users.title': 'User Management',\r\n  'admin.users.pending': 'Pending Teacher Applications',\r\n  'admin.users.noPending': 'No pending applications',\r\n  'admin.users.all': 'All Users',\r\n  'admin.users.empty': 'No users found',\r\n\r\n  // Reservations\r\n  'reservations.title': 'My Reservations',\r\n  'reservations.empty': 'No reservations yet',\r\n\r\n  // Materials\r\n  'materials.title': 'Free Materials',\r\n  'materials.search': 'Search materials',\r\n  'materials.empty': 'No materials found',\r\n\r\n  // VerbfyTalk\r\n  'talk.title': 'VerbfyTalk Rooms',\r\n  'talk.empty': 'No rooms available',\r\n};\r\n\r\nconst tr: Messages = {\r\n  'auth.login.title': 'Giriş yap',\r\n  'auth.login.email': 'E-posta',\r\n  'auth.login.password': 'Şifre',\r\n  'auth.login.submit': 'Giriş yap',\r\n  'auth.login.welcome': 'Öğrenme yolculuğunuza yeniden hoş geldiniz',\r\n  'auth.login.emailPlaceholder': 'E-postanızı girin',\r\n  'auth.login.passwordPlaceholder': 'Şifrenizi girin',\r\n  'auth.login.remember': 'Beni hatırla',\r\n  'auth.login.forgot': 'Şifrenizi mi unuttunuz?',\r\n  'auth.login.signingin': 'Giriş yapılıyor...',\r\n  'auth.login.or': 'Veya şununla devam edin',\r\n  'auth.login.google': 'Google ile giriş yap',\r\n  'auth.login.outlook': 'Outlook ile giriş yap',\r\n  'auth.login.apple': 'Apple ile giriş yap',\r\n  'auth.login.new': 'Verbfy’ye yeni misiniz?',\r\n  'auth.login.join': 'Hemen Katıl',\r\n\r\n  'auth.register.title': 'Hesap oluştur',\r\n  'auth.register.tagline': 'Öğrenme devrimine katılın',\r\n  'auth.register.name': 'Ad Soyad',\r\n  'auth.register.namePlaceholder': 'Adınızı ve soyadınızı girin',\r\n  'auth.register.email': 'E‑posta Adresi',\r\n  'auth.register.emailPlaceholder': 'E‑postanızı girin',\r\n  'auth.register.password': 'Şifre',\r\n  'auth.register.passwordPlaceholder': 'Güçlü bir şifre oluşturun',\r\n  'auth.register.role': 'Katılmak istediğim rol',\r\n  'auth.register.role.student': 'Öğrenci – İngilizce öğren',\r\n  'auth.register.role.teacher': 'Öğretmen – İngilizce öğret (admin onayı gerekir)',\r\n  'auth.register.creating': 'Hesap oluşturuluyor...',\r\n  'auth.register.submit': 'Hesap oluştur',\r\n  'auth.register.or': 'Veya şu hesapla kaydol',\r\n  'auth.register.google': 'Google ile devam et',\r\n  'auth.register.outlook': 'Outlook ile devam et',\r\n  'auth.register.apple': 'Apple ile devam et',\r\n  'auth.register.have': 'Zaten hesabın var mı?',\r\n  'auth.register.signin': 'Buradan giriş yap',\r\n\r\n  'nav.profile': 'Profil',\r\n  'nav.dashboard': 'Panel',\r\n  'nav.verbfytalk': 'VerbfyTalk',\r\n  'nav.freeMaterials': 'Ücretsiz Materyaller',\r\n  'nav.verbfyLessons': 'Verbfy Dersleri',\r\n  'nav.cefrTests': 'CEFR Testleri',\r\n  'nav.curriculum': 'Kişiselleştirilmiş Müfredat',\r\n  'nav.aiLearning': 'Yapay Zekâ Öğrenme Asistanı',\r\n  'nav.adaptive': 'Uyarlanabilir Öğrenme',\r\n  'nav.aiContent': 'YZ İçerik Üretimi',\r\n  'nav.chat': 'Sohbet',\r\n  'nav.materials': 'Materyaller',\r\n  'nav.payments': 'Ödemeler',\r\n\r\n  'profile.save': 'Değişiklikleri Kaydet',\r\n  'profile.resendVerification': 'Doğrulama e-postasını tekrar gönder',\r\n  'profile.emailVerified': 'E-postanız doğrulandı.',\r\n  'profile.emailNotVerified': 'E-postanız doğrulanmadı.',\r\n  'profile.name': 'Ad',\r\n  'profile.email': 'E‑posta',\r\n  'profile.bio': 'Biyografi',\r\n\r\n  'forgot.title': 'Şifreyi Sıfırla',\r\n  'forgot.email': 'E‑posta',\r\n  'forgot.submit': 'Sıfırlama Bağlantısı Gönder',\r\n\r\n  'reset.title': 'Şifreyi Sıfırla',\r\n  'reset.new': 'Yeni Şifre (en az 8 karakter)',\r\n  'reset.confirm': 'Şifreyi Doğrula',\r\n  'reset.submit': 'Şifreyi Sıfırla',\r\n\r\n  'verify.title': 'E‑postayı Doğrula',\r\n  'verify.success': 'E‑posta doğrulandı. Bu sayfayı kapatabilir veya panele gidebilirsiniz.',\r\n  'verify.goDashboard': 'Panele git',\r\n\r\n  'footer.privacy': 'Gizlilik Politikası',\r\n  'footer.terms': 'Kullanım Şartları',\r\n  'footer.help': 'Yardım Merkezi',\r\n  'footer.rights': 'Tüm hakları saklıdır.',\r\n\r\n  // Landing\r\n  'landing.nav.features': 'Özellikler',\r\n  'landing.nav.how': 'Nasıl Çalışır',\r\n  'landing.nav.teachers': 'Öğretmenler',\r\n  'landing.nav.pricing': 'Fiyatlandırma',\r\n  'landing.nav.levelTest': 'Seviyeni Ücretsiz Test Et',\r\n  'landing.nav.signIn': 'Giriş Yap',\r\n  'landing.nav.getStarted': 'Hemen Başla',\r\n  'landing.nav.goDashboard': 'Panele Git',\r\n\r\n  'landing.hero.title1': 'İngilizceyi',\r\n  'landing.hero.title2': 'Uzman Öğretmenlerle Öğrenin',\r\n  'landing.hero.subtitle': 'Canlı dersler, kişiselleştirilmiş öğrenme ve kanıtlanmış yöntemlerle binlerce öğrenci arasına katılın.',\r\n  'landing.hero.start': 'Ücretsiz Başla',\r\n  'landing.hero.demo': 'Demoyu İzle',\r\n\r\n  'landing.features.title': 'Neden Verbfy?',\r\n  'landing.features.subtitle': 'Platformumuz, ileri teknoloji ile kanıtlanmış öğretim yöntemlerini birleştirir.',\r\n  'landing.feature.liveTalk.title': 'Canlı VerbfyTalk Odaları',\r\n  'landing.feature.liveTalk.desc': 'LiveKit destekli düşük gecikmeli ses/görüntü ile gerçek zamanlı konuşma pratiği.',\r\n  'landing.feature.aiLearning.title': 'YZ Öğrenme Asistanı',\r\n  'landing.feature.aiLearning.desc': 'Kişiselleştirilmiş öneriler, geri bildirim ve uyarlanabilir oturumlar.',\r\n  'landing.feature.lessons.title': 'Verbfy Dersleri',\r\n  'landing.feature.lessons.desc': 'CEFR uyumlu, gerçek yaşam senaryolarıyla kurgulanmış ders akışları.',\r\n  'landing.feature.freeMaterials.title': 'Ücretsiz Materyaller',\r\n  'landing.feature.freeMaterials.desc': 'Özenle hazırlanmış materyaller, alıştırmalar ve indirmeler.',\r\n  'landing.feature.cefr.title': 'CEFR Testleri',\r\n  'landing.feature.cefr.desc': 'İlerlemenizi doğru izlemek için yerleştirme ve pratik testler.',\r\n  'landing.feature.analytics.title': 'İlerleme Analitiği',\r\n  'landing.feature.analytics.desc': 'Beceri, seri ve rozetlerinizi net panolarla takip edin.',\r\n\r\n  // Featured materials\r\n  'landing.featuredMaterials.title': 'Öne Çıkan Materyaller',\r\n  'landing.featuredMaterials.subtitle': 'Becerilerinizi geliştirecek özenle seçilmiş ücretsiz kaynaklar',\r\n  'landing.featuredMaterials.viewAll': 'Tümünü gör',\r\n\r\n  'landing.how.title': 'Nasıl Çalışır',\r\n  'landing.how.subtitle': 'Sadece dört adımda Verbfy ile başlayın.',\r\n  'landing.how.step1.title': 'Kayıt Ol',\r\n  'landing.how.step1.desc': 'Ücretsiz hesabınızı oluşturun ve profilinizi tamamlayın.',\r\n  'landing.how.step2.title': 'Öğretmen Seç',\r\n  'landing.how.step2.desc': 'Hedeflerinize ve programınıza uygun öğretmeni bulun.',\r\n  'landing.how.step3.title': 'Ders Ayırt',\r\n  'landing.how.step3.desc': 'Size uyan zamanı seçin ve anında ayırtın.',\r\n  'landing.how.step4.title': 'Öğrenmeye Başla',\r\n  'landing.how.step4.desc': 'Canlı oturumlara katılın ve uyarlanabilir yolunuzu izleyin.',\r\n\r\n  'landing.teachers.title': 'Uzman Öğretmenlerimizle Tanışın',\r\n  'landing.teachers.subtitle': 'Başarı kanıtlı, sertifikalı İngilizce öğretmenleri.',\r\n  'landing.teachers.book': 'Ders Ayırt',\r\n\r\n  'landing.pricing.title': 'Planını Seç',\r\n  'landing.pricing.subtitle': 'Hedeflerinize ve bütçenize uygun esnek paketler.',\r\n  'landing.pricing.popular': 'En Popüler',\r\n  'landing.pricing.cta': 'Hemen Başla',\r\n\r\n  // Pricing details (TR)\r\n  'pricing.monthly.name': 'Aylık Üyelik',\r\n  'pricing.monthly.badge': 'Hediye 1 Token',\r\n  'pricing.monthly.f1': 'Sınırsız platform erişimi',\r\n  'pricing.monthly.f2': 'Tüm ücretsiz materyaller',\r\n  'pricing.monthly.f3': 'Topluluk özellikleri',\r\n  'pricing.monthly.f4': '1 VerbfyToken hediyeli (25 dk 1:1 ders)',\r\n  'pricing.yearly.name': 'Yıllık Üyelik',\r\n  'pricing.yearly.badge': 'En İyi Seçim • 12 Token Hediye',\r\n  'pricing.yearly.f1': 'Aylık paketteki her şey',\r\n  'pricing.yearly.f2': 'Öncelikli destek',\r\n  'pricing.yearly.f3': '12 VerbfyToken hediyeli (12×25 dk 1:1 ders)',\r\n  'pricing.token.name': 'VerbfyToken (Eklenti)',\r\n  'pricing.token.title': '1 Token = 25 dk Bire bir Özel Ders',\r\n  'pricing.token.f1': 'Her 25 dakikalık Bire bir Özel Ders için 1 token harcanır',\r\n  'pricing.token.f2': 'Token paketleri aktif abonelere sunulur',\r\n  'pricing.token.f3': 'Satın alma abonelik sonrası yapılır',\r\n\r\n  'landing.cta.title': 'İngilizce Yolculuğuna Hazır mısınız?',\r\n  'landing.cta.subtitle': 'Verbfy’e güvenen binlerce öğrenciye katılın.',\r\n  'landing.cta.start': 'Ücretsiz Başla',\r\n  'landing.cta.learnMore': 'Daha Fazla Bilgi',\r\n\r\n  // Testimonials & FAQ\r\n  'landing.testimonials.title': 'Öğrenciler ne diyor',\r\n  'landing.testimonials.q1': 'Verbfy iş toplantılarında konuşma özgüvenimi artırdı.',\r\n  'landing.testimonials.a1': 'Aylin, Ürün Yöneticisi',\r\n  'landing.testimonials.q2': 'YZ önerileri düzenli kalmama ve gelişmeme yardımcı oldu.',\r\n  'landing.testimonials.a2': 'Deniz, Üniversite Öğrencisi',\r\n  'landing.testimonials.q3': 'Canlı dersler çok etkileyici ve pratikti.',\r\n  'landing.testimonials.a3': 'Emre, Yazılım Mühendisi',\r\n  'landing.faq.title': 'Sık sorulan sorular',\r\n  'landing.faq.q1': 'Canlı dersler nasıl çalışır?',\r\n  'landing.faq.a1': 'LiveKit destekli VerbfyTalk üzerinden öğretmenlerle planlı oturumlara katılın.',\r\n  'landing.faq.q2': 'Ücretsiz öğrenebilir miyim?',\r\n  'landing.faq.a2': 'Evet, yüzlerce ücretsiz materyal ve topluluk oturumu keşfedebilirsiniz.',\r\n  'landing.faq.q3': 'Verbfy yeni başlayanlar için uygun mu?',\r\n  'landing.faq.a3': 'Kesinlikle. CEFR uyumlu modüllerimiz A1’den C2’ye kadar kapsar.',\r\n  'landing.faq.q4': 'Sertifika veriyor musunuz?',\r\n  'landing.faq.a4': 'Evet, yol haritalarını tamamladığınızda paylaşılabilir sertifikalar verilir.',\r\n\r\n  // Stats labels\r\n  'landing.stats.learners': 'Aktif öğrenci',\r\n  'landing.stats.lessons': 'Gerçekleştirilen canlı ders',\r\n  'landing.stats.teachers': 'Uzman öğretmen',\r\n  'landing.stats.rating': 'Ortalama puan',\r\n\r\n  // Footer blocks\r\n  'footer.blurb': 'Yenilikçi teknoloji ve uzman öğretimle dünyanın dört bir yanında İngilizce öğrenmeyi güçlendiriyoruz.',\r\n  'footer.product': 'Ürün',\r\n  'footer.company': 'Şirket',\r\n  'footer.support': 'Destek',\r\n  'footer.links.features': 'Özellikler',\r\n  'footer.links.pricing': 'Fiyatlandırma',\r\n  'footer.links.teachers': 'Öğretmenler',\r\n  'footer.links.materials': 'Materyaller',\r\n  'footer.links.about': 'Hakkımızda',\r\n  'footer.links.careers': 'Kariyer',\r\n  'footer.links.blog': 'Blog',\r\n  'footer.links.contact': 'İletişim',\r\n  'footer.cookie': 'Çerez Politikası',\r\n\r\n  // Verbfy suite descriptions\r\n  'suite.title': 'Dili tüm boyutlarıyla öğrenin.',\r\n  'suite.subtitle': 'Konuşma, dinleme, yazma, okuma, dil bilgisi ve sınav hazırlığı için özel olarak tasarlanmış modüller.',\r\n  'suite.more': 'Detay',\r\n  'suite.talk': 'Canlı konuşma odaları, doğal diyaloglar ve anlık geri bildirimle akıcılığınızı artırın.',\r\n  'suite.listen': 'Podcast’ler, günlük diyaloglar ve aksan çeşitliliğiyle gerçek hayata yakın dinleme pratiği.',\r\n  'suite.write': 'Yazma görevleri, şablonlar ve yapay zekâ destekli geri bildirimle daha etkili yazın.',\r\n  'suite.read': 'Seviyeye uygun metinler, kelime çalışmaları ve anlama sorularıyla okuma becerinizi geliştirin.',\r\n  'suite.grammar': 'Konu anlatımı, etkileşimli alıştırmalar ve pekiştirme testleriyle dil bilgisini sistemli öğrenin.',\r\n  'suite.exam': 'CEFR uyumlu denemeler, zamanlı sınavlar ve ayrıntılı performans analiziyle hedef puanınıza hazırlanın.',\r\n\r\n  // Common\r\n  'common.loading': 'Yükleniyor...',\r\n  'common.delete': 'Sil',\r\n  'common.save': 'Kaydet',\r\n  'common.cancel': 'İptal',\r\n  'common.preview': 'Önizleme',\r\n  'common.submitting': 'Gönderiliyor...',\r\n\r\n  // Home\r\n  'home.title': 'Ana Sayfa',\r\n  'home.stats.unread': 'Okunmamış bildirim',\r\n  'home.stats.upcoming': 'Yaklaşan dersler',\r\n  'home.stats.rooms': 'Açık konuşma odaları',\r\n  'home.stats.materials': 'Öne çıkan materyaller',\r\n  'home.shortcut.teachers': 'Öğretmen Bul',\r\n  'home.shortcut.talk': 'VerbfyTalk’a Katıl',\r\n  'home.shortcut.materials': 'Ücretsiz Materyaller',\r\n  'home.shortcut.cefr': 'CEFR Testleri',\r\n  'home.upcoming': 'Yaklaşan derslerin',\r\n  'home.viewAll': 'Tümünü gör',\r\n  'home.upcomingEmpty': 'Yaklaşan ders yok',\r\n  'home.materialsEmpty': 'Öne çıkan materyal yok',\r\n  'home.rooms': 'Açık VerbfyTalk odaları',\r\n  'home.roomsEmpty': 'Şu anda oda yok',\r\n  'home.lesson': 'Ders',\r\n  'home.manage': 'Yönet',\r\n  'home.room': 'Oda',\r\n  'home.private': 'Özel',\r\n  'home.public': 'Genel',\r\n\r\n  // Teachers\r\n  'teachers.title': 'Öğretmen Bul',\r\n  'teachers.search': 'Öğretmen ara',\r\n  'teachers.empty': 'Öğretmen bulunamadı',\r\n  'teachers.detail': 'Öğretmen',\r\n  'teachers.availability': 'Müsaitlik (7 gün)',\r\n  'teachers.noSlots': 'Uygun saat yok',\r\n  'teachers.selected': 'Seçilen',\r\n  'teachers.book': 'Ders Ayırt',\r\n  'teachers.booked': 'Rezervasyon oluşturuldu',\r\n  'teachers.bookError': 'Rezervasyon oluşturulamadı',\r\n\r\n  // Teacher schedule\r\n  'tschedule.title': 'Programım',\r\n  'tschedule.add': 'Müsait saat ekle',\r\n  'tschedule.date': 'Tarih',\r\n  'tschedule.time': 'Saat',\r\n  'tschedule.duration': 'Süre (dk)',\r\n  'tschedule.addBtn': 'Slot Ekle',\r\n  'tschedule.list': 'Yaklaşan müsaitlikler',\r\n  'tschedule.empty': 'Henüz müsaitlik yok',\r\n\r\n  // Teacher materials\r\n  'tmaterials.title': 'Materyallerim',\r\n  'tmaterials.upload': 'Yeni materyal yükle',\r\n  'tmaterials.titleLabel': 'Başlık',\r\n  'tmaterials.level': 'Seviye',\r\n  'tmaterials.category': 'Kategori',\r\n  'tmaterials.description': 'Açıklama',\r\n  'tmaterials.file': 'Dosya',\r\n  'tmaterials.uploadBtn': 'Yükle',\r\n  'tmaterials.edit': 'Materyali Düzenle',\r\n\r\n  // Teacher students\r\n  'tstudents.title': 'Öğrencilerim',\r\n  'tstudents.empty': 'Henüz öğrenci yok',\r\n\r\n  // Teacher earnings\r\n  'tearnings.title': 'Kazançlar',\r\n  'tearnings.empty': 'Henüz kazanç yok',\r\n  'tearnings.total': 'Toplam Kazanç',\r\n  'tearnings.month': 'Bu Ay',\r\n  'tearnings.sessions': 'Ücretli Oturum',\r\n\r\n  // VerbfyTalk actions\r\n  'talk.join': 'Odaya Katıl',\r\n  'talk.joining': 'Katılıyor...',\r\n\r\n  // Admin common\r\n  'admin.search': 'Ara...',\r\n  'admin.all': 'Tümü',\r\n  'admin.pending': 'Beklemede',\r\n  'admin.approved': 'Onaylı',\r\n  'admin.rejected': 'Reddedildi',\r\n  'admin.actions': 'Aksiyonlar',\r\n  'admin.name': 'Ad',\r\n  'admin.email': 'E‑posta',\r\n  'admin.user': 'Kullanıcı',\r\n  'admin.created': 'Oluşturulma',\r\n  'admin.delete': 'Sil',\r\n  'admin.refund': 'İade',\r\n  'admin.prev': 'Önceki',\r\n  'admin.next': 'Sonraki',\r\n  'admin.page': 'Sayfa',\r\n  'admin.role': 'Rol',\r\n  'admin.status': 'Durum',\r\n  'admin.refresh': 'Yenile',\r\n  'admin.student': 'Öğrenci',\r\n  'admin.teacher': 'Öğretmen',\r\n  'admin.admin': 'Admin',\r\n  'admin.approve': 'Onayla',\r\n  'admin.reject': 'Reddet',\r\n\r\n  // Admin pages\r\n  'admin.materials.title': 'Admin • Materyaller',\r\n  'admin.materials.titleCol': 'Başlık',\r\n  'admin.materials.level': 'Seviye',\r\n  'admin.materials.category': 'Kategori',\r\n  'admin.materials.uploader': 'Yükleyen',\r\n  'admin.materials.status': 'Durum',\r\n  'admin.materials.approve': 'Onayla',\r\n  'admin.materials.reject': 'Onayı Kaldır',\r\n  'admin.materials.empty': 'Materyal yok',\r\n\r\n  'admin.payments.title': 'Admin • Ödemeler',\r\n  'admin.payments.amount': 'Tutar',\r\n  'admin.succeeded': 'Başarılı',\r\n  'admin.refunded': 'İade Edildi',\r\n  'admin.failed': 'Başarısız',\r\n  'admin.payments.empty': 'Ödeme yok',\r\n\r\n  'admin.logs.title': 'Admin • Loglar',\r\n  'admin.logs.empty': 'Log yok',\r\n\r\n  'admin.users.title': 'Kullanıcı Yönetimi',\r\n  'admin.users.pending': 'Bekleyen Öğretmen Başvuruları',\r\n  'admin.users.noPending': 'Bekleyen başvuru yok',\r\n  'admin.users.all': 'Tüm Kullanıcılar',\r\n  'admin.users.empty': 'Kullanıcı bulunamadı',\r\n\r\n  // Reservations\r\n  'reservations.title': 'Rezervasyonlarım',\r\n  'reservations.empty': 'Rezervasyon yok',\r\n\r\n  // Materials\r\n  'materials.title': 'Ücretsiz Materyaller',\r\n  'materials.search': 'Materyal ara',\r\n  'materials.empty': 'Materyal bulunamadı',\r\n\r\n  // VerbfyTalk\r\n  'talk.title': 'VerbfyTalk Odaları',\r\n  'talk.empty': 'Uygun oda yok',\r\n};\r\n\r\nconst messagesByLocale: Record<Locale, Messages> = { en, tr };\r\n\r\nexport function I18nProvider({ children }: { children: React.ReactNode }) {\r\n  const [locale, setLocale] = useState<Locale>('en');\r\n\r\n  useEffect(() => {\r\n    const saved = typeof window !== 'undefined' ? (localStorage.getItem('locale') as Locale | null) : null;\r\n    if (saved && (saved === 'en' || saved === 'tr')) {\r\n      setLocale(saved);\r\n    } else if (typeof navigator !== 'undefined') {\r\n      const lang = navigator.language?.toLowerCase() || '';\r\n      if (lang.startsWith('tr')) setLocale('tr');\r\n    }\r\n  }, []);\r\n\r\n  const value = useMemo<I18nContextValue>(() => ({\r\n    locale,\r\n    setLocale: (loc: Locale) => {\r\n      setLocale(loc);\r\n      if (typeof window !== 'undefined') localStorage.setItem('locale', loc);\r\n    },\r\n    t: (key: string, fallback?: string) => messagesByLocale[locale][key] ?? fallback ?? key,\r\n  }), [locale]);\r\n\r\n  return <I18nContext.Provider value={value}>{children}</I18nContext.Provider>;\r\n}\r\n\r\nexport function useI18n() {\r\n  const ctx = useContext(I18nContext);\r\n  if (!ctx) throw new Error('useI18n must be used within I18nProvider');\r\n  return ctx;\r\n}\r\n\r\n\r\n","/**\r\n * Secure storage utility for handling sensitive data\r\n * Uses httpOnly cookies when possible, falls back to sessionStorage for client-side\r\n */\r\n\r\nconst TOKEN_KEY = 'verbfy_token';\r\nconst USER_KEY = 'verbfy_user';\r\n\r\n// Check if we're in a browser environment\r\nconst isBrowser = typeof window !== 'undefined';\r\n\r\n// Check if cookies are supported\r\nconst areCookiesSupported = (): boolean => {\r\n  if (!isBrowser) return false;\r\n  \r\n  try {\r\n    document.cookie = 'test=1';\r\n    const hasCookie = document.cookie.indexOf('test=') !== -1;\r\n    document.cookie = 'test=1; expires=Thu, 01 Jan 1970 00:00:00 GMT';\r\n    return hasCookie;\r\n  } catch {\r\n    return false;\r\n  }\r\n};\r\n\r\n// Secure storage interface\r\ninterface SecureStorage {\r\n  setItem(key: string, value: string): void;\r\n  getItem(key: string): string | null;\r\n  removeItem(key: string): void;\r\n  clear(): void;\r\n}\r\n\r\n// Cookie-based storage (more secure)\r\nclass CookieStorage implements SecureStorage {\r\n  setItem(key: string, value: string): void {\r\n    if (!isBrowser) return;\r\n    \r\n    const expires = new Date();\r\n    expires.setTime(expires.getTime() + (7 * 24 * 60 * 60 * 1000)); // 7 days\r\n    \r\n    document.cookie = `${key}=${encodeURIComponent(value)}; expires=${expires.toUTCString()}; path=/; SameSite=Strict; Secure`;\r\n  }\r\n  \r\n  getItem(key: string): string | null {\r\n    if (!isBrowser) return null;\r\n    \r\n    const nameEQ = key + '=';\r\n    const ca = document.cookie.split(';');\r\n    \r\n    for (let i = 0; i < ca.length; i++) {\r\n      let c = ca[i];\r\n      while (c.charAt(0) === ' ') c = c.substring(1, c.length);\r\n      if (c.indexOf(nameEQ) === 0) {\r\n        return decodeURIComponent(c.substring(nameEQ.length, c.length));\r\n      }\r\n    }\r\n    \r\n    return null;\r\n  }\r\n  \r\n  removeItem(key: string): void {\r\n    if (!isBrowser) return;\r\n    \r\n    document.cookie = `${key}=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/`;\r\n  }\r\n  \r\n  clear(): void {\r\n    if (!isBrowser) return;\r\n    \r\n    const cookies = document.cookie.split(';');\r\n    \r\n    for (let i = 0; i < cookies.length; i++) {\r\n      const cookie = cookies[i];\r\n      const eqPos = cookie.indexOf('=');\r\n      const name = eqPos > -1 ? cookie.substr(0, eqPos) : cookie;\r\n      document.cookie = `${name}=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/`;\r\n    }\r\n  }\r\n}\r\n\r\n// SessionStorage-based storage (fallback)\r\nclass SessionStorage implements SecureStorage {\r\n  setItem(key: string, value: string): void {\r\n    if (!isBrowser) return;\r\n    \r\n    try {\r\n      sessionStorage.setItem(key, value);\r\n    } catch (error) {\r\n      console.warn('SessionStorage not available, falling back to memory storage');\r\n      // Fallback to memory storage (will be lost on page refresh)\r\n      (window as any).__verbfy_memory_storage = (window as any).__verbfy_memory_storage || {};\r\n      (window as any).__verbfy_memory_storage[key] = value;\r\n    }\r\n  }\r\n  \r\n  getItem(key: string): string | null {\r\n    if (!isBrowser) return null;\r\n    \r\n    try {\r\n      return sessionStorage.getItem(key);\r\n    } catch (error) {\r\n      // Fallback to memory storage\r\n      return (window as any).__verbfy_memory_storage?.[key] || null;\r\n    }\r\n  }\r\n  \r\n  removeItem(key: string): void {\r\n    if (!isBrowser) return;\r\n    \r\n    try {\r\n      sessionStorage.removeItem(key);\r\n    } catch (error) {\r\n      // Fallback to memory storage\r\n      if ((window as any).__verbfy_memory_storage) {\r\n        delete (window as any).__verbfy_memory_storage[key];\r\n      }\r\n    }\r\n  }\r\n  \r\n  clear(): void {\r\n    if (!isBrowser) return;\r\n    \r\n    try {\r\n      sessionStorage.clear();\r\n    } catch (error) {\r\n      // Fallback to memory storage\r\n      (window as any).__verbfy_memory_storage = {};\r\n    }\r\n  }\r\n}\r\n\r\n// Choose the best available storage method\r\nconst storage: SecureStorage = areCookiesSupported() ? new CookieStorage() : new SessionStorage();\r\n\r\n// Token management functions\r\nexport const tokenStorage = {\r\n  setToken: (token: string): void => {\r\n    storage.setItem(TOKEN_KEY, token);\r\n  },\r\n  \r\n  getToken: (): string | null => {\r\n    return storage.getItem(TOKEN_KEY);\r\n  },\r\n  \r\n  removeToken: (): void => {\r\n    storage.removeItem(TOKEN_KEY);\r\n  },\r\n  \r\n  setUser: (user: any): void => {\r\n    storage.setItem(USER_KEY, JSON.stringify(user));\r\n  },\r\n  \r\n  getUser: (): any => {\r\n    const userStr = storage.getItem(USER_KEY);\r\n    if (!userStr) return null;\r\n    \r\n    try {\r\n      return JSON.parse(userStr);\r\n    } catch {\r\n      return null;\r\n    }\r\n  },\r\n  \r\n  removeUser: (): void => {\r\n    storage.removeItem(USER_KEY);\r\n  },\r\n  \r\n  clear: (): void => {\r\n    storage.clear();\r\n  }\r\n};\r\n\r\n// Legacy compatibility functions (for backward compatibility)\r\nexport const getStoredToken = (): string | null => {\r\n  return tokenStorage.getToken();\r\n};\r\n\r\nexport const setStoredToken = (token: string): void => {\r\n  tokenStorage.setToken(token);\r\n};\r\n\r\nexport const removeStoredToken = (): void => {\r\n  tokenStorage.removeToken();\r\n}; ","// extracted by mini-css-extract-plugin"],"names":["window","__NEXT_P","push","__webpack_require__","_sentryCollisionFreeGlobalObject","undefined","dsn","process","env","NEXT_PUBLIC_SENTRY_DSN","Sentry","tracesSampleRate","replaysOnErrorSampleRate","replaysSessionSampleRate","App","param","Component","pageProps","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","I18nProvider","AuthProvider","ToastProvider","ChatProvider","NotificationProvider","AdminProvider","ToastContext","createContext","children","toasts","setToasts","useState","showToast","type","message","duration","id","Math","random","toString","substring","newToast","prev","setTimeout","removeToast","filter","toast","jsxs","Provider","value","success","error","warning","info","ToastContainer","useToast","context","useContext","length","div","className","map","ToastItem","onRemove","styles","getToastStyles","icon","bgColor","borderColor","textColor","iconColor","concat","role","aria-live","p","button","onClick","aria-label","svg","fill","viewBox","stroke","path","strokeLinecap","strokeLinejoin","strokeWidth","d","console","warn","initialState","overview","overviewLoading","users","usersLoading","usersPagination","selectedUser","materials","materialsLoading","materialsPagination","selectedMaterial","payments","paymentsLoading","paymentsPagination","selectedPayment","logs","logsLoading","logsPagination","userFilters","materialFilters","paymentFilters","logFilters","adminReducer","state","action","payload","pagination","user","_id","material","payment","AdminContext","dispatch","useReducer","loadOverview","response","adminAPI","getOverview","data","loadUsers","page","filters","params","limit","getUsers","loadUserById","getUserById","updateUserRole","updateUserStatus","status","deleteUser","loadMaterials","getMaterials","approveMaterial","approved","deleteMaterial","loadPayments","getPayments","refundPayment","loadLogs","getLogs","setSelectedUser","setUserFilters","setSelectedMaterial","setMaterialFilters","setSelectedPayment","setPaymentFilters","setLogFilters","useAdmin","AuthContext","setUser","isLoading","setIsLoading","router","useRouter","useEffect","publicAuthPages","includes","pathname","loadUser","tokenStorage","getToken","log","authAPI","getCurrentUser","clear","retryAfter","location","href","login","email","password","accessToken","userData","token","userWithId","provided","setToken","_error","register","newUser","logout","refreshUser","updatedUser","isAuthenticated","loading","setAccessToken","useAuth","useAuthContext","useRoleGuard","allowedRoles","hasAccess","conversations","currentConversation","messages","unreadCount","typingUsers","Set","chatReducer","conv","conversationId","lastMessage","content","sender","timestamp","createdAt","updatedAt","newTypingUsers","isTyping","add","userId","delete","ChatContext","showError","showSuccess","socketRef","useRef","typingTimeoutRef","base","NEXT_PUBLIC_API_BASE_URL","replace","socket","io","transports","withCredentials","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","forceNew","auth","current","on","engine","transport","name","reason","connect","attemptNumber","disconnect","loadConversations","api","get","errorMessage","loadMessages","sendMessage","post","emit","markAsRead","patch","setTyping","clearTimeout","loadUnreadCount","actions","joinConversation","leaveConversation","useChat","notifications","total","pages","notificationReducer","notification","isRead","readAt","Date","toISOString","max","NotificationContext","useMemo","NEXT_PUBLIC_API_URL","upgrade","rememberUpgrade","fetchNotifications","URLSearchParams","Object","entries","forEach","key","append","markAllAsRead","deleteNotification","addNotification","config","getNotificationConfig","configs","reservation","admin","lesson","system","title","body","style","background","color","getUnreadCount","e","off","interval","setInterval","clearInterval","useNotifications","_api_interceptors","_api_interceptors1","_axios_create","axios__WEBPACK_IMPORTED_MODULE_1__","Z","create","call","axios","baseURL","trimmed","raw","hostname","timeout","headers","corsTestAPI","testCORS","interceptors","request","use","Authorization","isWrite","method","toLowerCase","document","match","cookie","csrf","decodeURIComponent","uuidv4","Promise","reject","require","alert","credentials","then","r","refreshToken","userAPI","getProfile","updateProfile","put","uploadAvatar","form","FormData","file","getPresignedUploadUrl","contentType","reservationAPI","getReservations","createReservation","updateReservation","deleteReservation","availabilityAPI","getAvailability","teacherId","setAvailability","updateAvailability","deleteAvailability","notificationAPI","getNotifications","paymentAPI","createCheckoutSession","getPaymentHistory","getProducts","getPaymentStats","paymentId","getStats","getActivities","verbfyTalkAPI","getRooms","level","isPrivate","getUserRooms","createRoom","roomData","getRoomDetails","roomId","joinRoom","joinData","leaveRoom","updateRoom","deleteRoom","freeMaterialsAPI","category","search","sortBy","sortOrder","featured","getFeaturedMaterials","getCategories","getLevels","getMaterial","uploadMaterial","materialData","formData","description","tags","isFeatured","rateMaterial","rating","updateMaterial","downloadMaterial","responseType","lessonAPI","getStudentLessons","getLesson","joinLesson","lessonId","leaveLesson","verbfyLessonsAPI","getLessons","createLesson","updateLesson","deleteLesson","startLesson","submitLesson","attemptId","cefrTestsAPI","getTests","getTest","testId","startTest","submitTest","getTestAttempt","getTestStats","getPlacementRecommendation","seedGlobalPlacement","seedKidsA1B1","seedAdultsA1B2","seedAdvancedB1C2","personalizedCurriculumAPI","createCurriculum","getCurriculum","updateProgress","updateStudySchedule","getAnalytics","getRecommendations","completeRecommendation","recommendationId","getStudySchedule","addStudySession","completeStudySession","sessionId","setApiAccessToken","localStorage","setItem","gamesAPI","list","aiLearningAPI","createSession","getAIResponse","getSessions","updateSessionProgress","generateRecommendations","getSessionAnalytics","adaptiveLearningAPI","createPath","getPaths","getPath","pathId","updateModuleProgress","getPathAnalytics","teacherAnalyticsAPI","generateAnalytics","getStudentPerformance","getLessonAnalytics","getEngagementMetrics","aiFeaturesAPI","startTutoringSession","sendTutoringMessage","endTutoringSession","getTutoringSessions","getTutoringSession","generateContent","getGeneratedContent","getContent","contentId","reviewContent","updateContent","deleteContent","getUserProgress","getModelInfo","updateModelSettings","__webpack_exports__","ZP","I18nContext","messagesByLocale","en","tr","locale","setLocale","saved","getItem","navigator","lang","language","startsWith","loc","t","fallback","useI18n","ctx","TOKEN_KEY","USER_KEY","CookieStorage","expires","setTime","getTime","encodeURIComponent","toUTCString","nameEQ","ca","split","i","c","charAt","indexOf","removeItem","cookies","eqPos","substr","SessionStorage","sessionStorage","__verbfy_memory_storage","_window___verbfy_memory_storage","storage","areCookiesSupported","hasCookie","removeToken","JSON","stringify","getUser","userStr","parse","removeUser","getStoredToken","setStoredToken","removeStoredToken"],"sourceRoot":""}