{"version":3,"file":"static/chunks/pages/cefr-tests-cd22763b7018040d.js","mappings":"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","sources":["webpack://_N_E/?249d","webpack://_N_E/./src/features/cefrTesting/view/CEFRTestList.tsx","webpack://_N_E/./pages/cefr-tests/index.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/cefr-tests\",\n      function () {\n        return require(\"private-next-pages/cefr-tests/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/cefr-tests\"])\n      });\n    }\n  ","import React, { useState, useEffect } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport { CEFRTest, TestFilters } from '@/types/cefrTests';\r\nimport { cefrTestsAPI } from '@/lib/api';\r\nimport { useAuthContext } from '@/context/AuthContext';\r\n\r\ninterface CEFRTestListProps {\r\n  onTestSelect?: (test: CEFRTest) => void;\r\n  showFilters?: boolean;\r\n  limit?: number;\r\n}\r\n\r\nexport const CEFRTestList: React.FC<CEFRTestListProps> = ({\r\n  onTestSelect,\r\n  showFilters = true,\r\n  limit = 10\r\n}) => {\r\n  const router = useRouter();\r\n  const { user } = useAuthContext();\r\n  const [tests, setTests] = useState<CEFRTest[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [filters, setFilters] = useState<TestFilters>({\r\n    page: 1,\r\n    limit\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchTests();\r\n  }, [filters]);\r\n\r\n  const fetchTests = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await cefrTestsAPI.getTests(filters);\r\n      setTests(response.tests);\r\n    } catch (error) {\r\n      console.error('Error fetching tests:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleSeedGlobal = async () => {\r\n    try {\r\n      setLoading(true);\r\n      await cefrTestsAPI.seedGlobalPlacement();\r\n      await fetchTests();\r\n    } catch (e) {\r\n      console.error('Seed error', e);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleTestClick = (test: CEFRTest) => {\r\n    if (onTestSelect) {\r\n      onTestSelect(test);\r\n    } else {\r\n      router.push(`/cefr-tests/${test._id}`);\r\n    }\r\n  };\r\n\r\n  const getLevelColor = (level: string) => {\r\n    const colors = {\r\n      A1: 'bg-red-100 text-red-800',\r\n      A2: 'bg-orange-100 text-orange-800',\r\n      B1: 'bg-yellow-100 text-yellow-800',\r\n      B2: 'bg-green-100 text-green-800',\r\n      C1: 'bg-blue-100 text-blue-800',\r\n      C2: 'bg-purple-100 text-purple-800'\r\n    };\r\n    return colors[level as keyof typeof colors] || 'bg-gray-100 text-gray-800';\r\n  };\r\n\r\n  const getTestTypeColor = (type: string) => {\r\n    const colors = {\r\n      placement: 'bg-blue-100 text-blue-800',\r\n      progress: 'bg-green-100 text-green-800',\r\n      certification: 'bg-purple-100 text-purple-800'\r\n    };\r\n    return colors[type as keyof typeof colors] || 'bg-gray-100 text-gray-800';\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n        {[...Array(6)].map((_, i) => (\r\n          <div key={i} className=\"bg-white rounded-lg shadow-md p-6 animate-pulse\">\r\n            <div className=\"h-4 bg-gray-200 rounded mb-2\"></div>\r\n            <div className=\"h-3 bg-gray-200 rounded mb-4\"></div>\r\n            <div className=\"flex gap-2 mb-4\">\r\n              <div className=\"h-6 w-16 bg-gray-200 rounded\"></div>\r\n              <div className=\"h-6 w-20 bg-gray-200 rounded\"></div>\r\n            </div>\r\n            <div className=\"h-8 bg-gray-200 rounded\"></div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {showFilters && (\r\n        <div className=\"bg-white rounded-lg shadow-md p-6\">\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <h3 className=\"text-lg font-semibold\">Filter Tests</h3>\r\n            {user?.role === 'admin' && (\r\n              <div className=\"flex gap-2\">\r\n                <button onClick={handleSeedGlobal} className=\"px-3 py-2 text-sm bg-green-600 text-white rounded-md hover:bg-green-700\">\r\n                  Seed 50Q Global Placement\r\n                </button>\r\n                <button onClick={async()=>{setLoading(true);try{await cefrTestsAPI.seedKidsA1B1();await fetchTests();}finally{setLoading(false);}}} className=\"px-3 py-2 text-sm bg-blue-600 text-white rounded-md hover:bg-blue-700\">\r\n                  Seed Kids A1–B1\r\n                </button>\r\n                <button onClick={async()=>{setLoading(true);try{await cefrTestsAPI.seedAdultsA1B2();await fetchTests();}finally{setLoading(false);}}} className=\"px-3 py-2 text-sm bg-purple-600 text-white rounded-md hover:bg-purple-700\">\r\n                  Seed Adults A1–B2\r\n                </button>\r\n                <button onClick={async()=>{setLoading(true);try{await cefrTestsAPI.seedAdvancedB1C2();await fetchTests();}finally{setLoading(false);}}} className=\"px-3 py-2 text-sm bg-amber-600 text-white rounded-md hover:bg-amber-700\">\r\n                  Seed Advanced B1–C2\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n            <select\r\n              value={filters.cefrLevel || ''}\r\n              onChange={(e) => setFilters({ ...filters, cefrLevel: e.target.value || undefined })}\r\n              className=\"border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            >\r\n              <option value=\"\">All Levels</option>\r\n              <option value=\"A1\">A1 - Beginner</option>\r\n              <option value=\"A2\">A2 - Elementary</option>\r\n              <option value=\"B1\">B1 - Intermediate</option>\r\n              <option value=\"B2\">B2 - Upper Intermediate</option>\r\n              <option value=\"C1\">C1 - Advanced</option>\r\n              <option value=\"C2\">C2 - Proficient</option>\r\n            </select>\r\n\r\n            <select\r\n              value={filters.testType || ''}\r\n              onChange={(e) => setFilters({ ...filters, testType: e.target.value || undefined })}\r\n              className=\"border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            >\r\n              <option value=\"\">All Types</option>\r\n              <option value=\"placement\">Placement Test</option>\r\n              <option value=\"progress\">Progress Test</option>\r\n              <option value=\"certification\">Certification Test</option>\r\n            </select>\r\n\r\n            <select\r\n              value={filters.isPremium ? 'true' : filters.isPremium === false ? 'false' : ''}\r\n              onChange={(e) => setFilters({ \r\n                ...filters, \r\n                isPremium: e.target.value === 'true' ? true : e.target.value === 'false' ? false : undefined \r\n              })}\r\n              className=\"border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            >\r\n              <option value=\"\">All Tests</option>\r\n              <option value=\"false\">Free Tests</option>\r\n              <option value=\"true\">Premium Tests</option>\r\n            </select>\r\n\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search tests...\"\r\n              value={filters.search || ''}\r\n              onChange={(e) => setFilters({ ...filters, search: e.target.value })}\r\n              className=\"border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            />\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n        {tests.map((test) => (\r\n          <div\r\n            key={test._id}\r\n            className=\"bg-white rounded-lg shadow-md hover:shadow-lg transition-shadow duration-200 cursor-pointer\"\r\n            onClick={() => handleTestClick(test)}\r\n          >\r\n            <div className=\"p-6\">\r\n              <div className=\"flex items-start justify-between mb-3\">\r\n                <h3 className=\"text-lg font-semibold text-gray-900 line-clamp-2\">\r\n                  {test.title}\r\n                </h3>\r\n                {test.isPremium && (\r\n                  <span className=\"bg-yellow-100 text-yellow-800 text-xs font-medium px-2 py-1 rounded-full\">\r\n                    Premium\r\n                  </span>\r\n                )}\r\n              </div>\r\n\r\n              <p className=\"text-gray-600 text-sm mb-4 line-clamp-3\">\r\n                {test.description}\r\n              </p>\r\n\r\n              <div className=\"flex flex-wrap gap-2 mb-4\">\r\n                <span className={`px-2 py-1 text-xs font-medium rounded-full ${getLevelColor(test.cefrLevel)}`}>\r\n                  {test.cefrLevel}\r\n                </span>\r\n                <span className={`px-2 py-1 text-xs font-medium rounded-full ${getTestTypeColor(test.testType)}`}>\r\n                  {test.testType.charAt(0).toUpperCase() + test.testType.slice(1)}\r\n                </span>\r\n              </div>\r\n\r\n              <div className=\"flex items-center justify-between text-sm text-gray-500 mb-4\">\r\n                <span>⏱️ {test.totalTime} min</span>\r\n                <span>📝 {test.totalQuestions} questions</span>\r\n              </div>\r\n\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"flex items-center space-x-2 text-sm text-gray-500\">\r\n                  <span>⭐ {test.averageScore.toFixed(1)}</span>\r\n                  <span>👥 {test.totalAttempts} attempts</span>\r\n                </div>\r\n                <button className=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded-md text-sm font-medium transition-colors duration-200\">\r\n                  Start Test\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {tests.length === 0 && !loading && (\r\n        <div className=\"text-center py-12\">\r\n          <div className=\"text-gray-400 text-6xl mb-4\">📝</div>\r\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No tests found</h3>\r\n          <p className=\"text-gray-500\">Try adjusting your filters or check back later for new tests.</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}; ","import React from 'react';\r\nimport Head from 'next/head';\r\nimport { CEFRTestList } from '../../src/features/cefrTesting/view/CEFRTestList';\r\nimport { useAuthContext } from '@/context/AuthContext';\r\nimport { useRouter } from 'next/router';\r\nimport { useEffect } from 'react';\r\n\r\nexport default function CEFRTestsPage() {\r\n  const { user, loading } = useAuthContext();\r\n  const router = useRouter();\r\n\r\n  useEffect(() => {\r\n    if (!loading && !user) {\r\n      router.push('/login');\r\n    }\r\n  }, [user, loading, router]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\r\n          <p className=\"text-gray-600\">Loading...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!user) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>CEFR Tests - Verbfy</title>\r\n        <meta name=\"description\" content=\"Take CEFR-aligned English proficiency tests to assess your skills\" />\r\n      </Head>\r\n\r\n      <div className=\"min-h-screen bg-gray-50\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n          {/* Header */}\r\n          <div className=\"mb-8\">\r\n            <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">CEFR Tests</h1>\r\n            <p className=\"text-gray-600\">\r\n              Assess your English proficiency with our comprehensive CEFR-aligned tests\r\n            </p>\r\n          </div>\r\n\r\n          {/* Test List */}\r\n          <CEFRTestList />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n} "],"names":["window","__NEXT_P","push","__webpack_require__","CEFRTestList","onTestSelect","showFilters","limit","param","router","useRouter","user","useAuthContext","tests","setTests","useState","loading","setLoading","filters","setFilters","page","useEffect","fetchTests","response","cefrTestsAPI","getTests","error","console","handleSeedGlobal","seedGlobalPlacement","e","handleTestClick","test","concat","_id","getLevelColor","colors","A1","A2","B1","B2","C1","C2","level","getTestTypeColor","placement","progress","certification","type","jsx_runtime","jsx","div","className","Array","map","_","i","jsxs","h3","role","button","onClick","seedKidsA1B1","seedAdultsA1B2","seedAdvancedB1C2","select","value","cefrLevel","onChange","target","undefined","option","testType","isPremium","input","placeholder","search","title","span","p","description","charAt","toUpperCase","slice","totalTime","totalQuestions","averageScore","toFixed","totalAttempts","length","CEFRTestsPage","Fragment","Head","meta","name","content","h1"],"sourceRoot":""}