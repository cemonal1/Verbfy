{"version":3,"file":"static/chunks/pages/personalized-curriculum/schedule-6b6d081a3aafd835.js","mappings":"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","sources":["webpack://_N_E/?c093","webpack://_N_E/./pages/personalized-curriculum/schedule.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/personalized-curriculum/schedule\",\n      function () {\n        return require(\"private-next-pages/personalized-curriculum/schedule.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/personalized-curriculum/schedule\"])\n      });\n    }\n  ","import React, { useState, useEffect } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport Head from 'next/head';\r\nimport DashboardLayout from '@/components/layout/DashboardLayout';\r\nimport { personalizedCurriculumAPI } from '@/lib/api';\r\nimport { useAuthContext } from '@/context/AuthContext';\r\nimport { useToast } from '@/components/common/Toast';\r\n\r\nexport default function StudySchedulePage() {\r\n  const router = useRouter();\r\n  const { user } = useAuthContext();\r\n  const { success, error } = useToast();\r\n  \r\n  const [schedule, setSchedule] = useState<any>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [currentDate, setCurrentDate] = useState(new Date());\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [showAddSession, setShowAddSession] = useState(false);\r\n  const [newSession, setNewSession] = useState({\r\n    date: '',\r\n    time: '',\r\n    duration: 30,\r\n    type: 'lesson',\r\n    goal: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    loadSchedule();\r\n  }, []);\r\n\r\n  const loadSchedule = async () => {\r\n    try {\r\n      setLoading(true);\r\n      // This would need to be implemented in the API\r\n      // const response = await personalizedCurriculumAPI.getStudySchedule();\r\n      // setSchedule(response.schedule);\r\n      \r\n      // Simulated data for demonstration\r\n      setSchedule({\r\n        weeklyGoal: 5,\r\n        completedThisWeek: 3,\r\n        dailyGoal: 45,\r\n        averageTimePerDay: 38,\r\n        studySessions: [\r\n          {\r\n            id: 1,\r\n            date: '2024-01-15',\r\n            time: '18:00',\r\n            duration: 45,\r\n            type: 'lesson',\r\n            title: 'Grammar Practice',\r\n            completed: true,\r\n            goal: 'Complete 3 grammar exercises'\r\n          },\r\n          {\r\n            id: 2,\r\n            date: '2024-01-16',\r\n            time: '19:30',\r\n            duration: 30,\r\n            type: 'test',\r\n            title: 'CEFR Progress Test',\r\n            completed: true,\r\n            goal: 'Achieve 80% or higher'\r\n          },\r\n          {\r\n            id: 3,\r\n            date: '2024-01-17',\r\n            time: '17:00',\r\n            duration: 60,\r\n            type: 'lesson',\r\n            title: 'Reading Comprehension',\r\n            completed: false,\r\n            goal: 'Read and analyze 2 passages'\r\n          },\r\n          {\r\n            id: 4,\r\n            date: '2024-01-18',\r\n            time: '20:00',\r\n            duration: 30,\r\n            type: 'practice',\r\n            title: 'Vocabulary Review',\r\n            completed: false,\r\n            goal: 'Review 50 new words'\r\n          },\r\n          {\r\n            id: 5,\r\n            date: '2024-01-19',\r\n            time: '16:30',\r\n            duration: 45,\r\n            type: 'lesson',\r\n            title: 'Speaking Practice',\r\n            completed: false,\r\n            goal: 'Practice pronunciation exercises'\r\n          }\r\n        ],\r\n        studyGoals: [\r\n          { id: 1, title: 'Complete 5 lessons this week', progress: 60, target: 5, current: 3 },\r\n          { id: 2, title: 'Study for 45 minutes daily', progress: 84, target: 45, current: 38 },\r\n          { id: 3, title: 'Take 2 CEFR tests', progress: 50, target: 2, current: 1 },\r\n          { id: 4, title: 'Achieve 80% in all skills', progress: 75, target: 80, current: 60 }\r\n        ],\r\n        recommendedTimes: [\r\n          { day: 'Monday', time: '18:00', reason: 'Based on your evening study pattern' },\r\n          { day: 'Wednesday', time: '17:00', reason: 'Your most productive day' },\r\n          { day: 'Friday', time: '19:30', reason: 'Weekend preparation' }\r\n        ]\r\n      });\r\n    } catch (err) {\r\n      error('Failed to load schedule');\r\n      console.error('Error loading schedule:', err);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleAddSession = async () => {\r\n    try {\r\n      // This would need to be implemented in the API\r\n      // await personalizedCurriculumAPI.addStudySession(newSession);\r\n      success('Study session added successfully!');\r\n      setShowAddSession(false);\r\n      setNewSession({ date: '', time: '', duration: 30, type: 'lesson', goal: '' });\r\n      loadSchedule(); // Reload to get updated data\r\n    } catch (err) {\r\n      error('Failed to add study session');\r\n      console.error('Error adding study session:', err);\r\n    }\r\n  };\r\n\r\n  const handleCompleteSession = async (sessionId: number) => {\r\n    try {\r\n      // This would need to be implemented in the API\r\n      // await personalizedCurriculumAPI.completeStudySession(sessionId);\r\n      success('Session marked as completed!');\r\n      loadSchedule(); // Reload to get updated data\r\n    } catch (err) {\r\n      error('Failed to complete session');\r\n      console.error('Error completing session:', err);\r\n    }\r\n  };\r\n\r\n  const getSessionTypeIcon = (type: string) => {\r\n    const icons = {\r\n      lesson: '📝',\r\n      test: '🧪',\r\n      practice: '💪',\r\n      review: '🔄'\r\n    };\r\n    return icons[type as keyof typeof icons] || '📚';\r\n  };\r\n\r\n  const getSessionTypeColor = (type: string) => {\r\n    const colors = {\r\n      lesson: 'bg-blue-100 text-blue-800',\r\n      test: 'bg-purple-100 text-purple-800',\r\n      practice: 'bg-green-100 text-green-800',\r\n      review: 'bg-orange-100 text-orange-800'\r\n    };\r\n    return colors[type as keyof typeof colors] || 'bg-gray-100 text-gray-800';\r\n  };\r\n\r\n  const formatDate = (dateString: string) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString('en-US', { \r\n      weekday: 'short', \r\n      month: 'short', \r\n      day: 'numeric' \r\n    });\r\n  };\r\n\r\n  const getDaysInMonth = (date: Date) => {\r\n    const year = date.getFullYear();\r\n    const month = date.getMonth();\r\n    const daysInMonth = new Date(year, month + 1, 0).getDate();\r\n    const firstDayOfMonth = new Date(year, month, 1).getDay();\r\n    \r\n    const days = [];\r\n    for (let i = 0; i < firstDayOfMonth; i++) {\r\n      days.push(null);\r\n    }\r\n    for (let i = 1; i <= daysInMonth; i++) {\r\n      days.push(new Date(year, month, i));\r\n    }\r\n    return days;\r\n  };\r\n\r\n  const getSessionsForDate = (date: Date) => {\r\n    if (!schedule) return [];\r\n    const dateString = date.toISOString().split('T')[0];\r\n    return schedule.studySessions.filter((session: any) => session.date === dateString);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <DashboardLayout allowedRoles={['student']}>\r\n        <div className=\"flex items-center justify-center h-64\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\r\n        </div>\r\n      </DashboardLayout>\r\n    );\r\n  }\r\n\r\n  if (!schedule) {\r\n    return (\r\n      <DashboardLayout allowedRoles={['student']}>\r\n        <div className=\"text-center py-12\">\r\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">No schedule found</h2>\r\n          <p className=\"text-gray-600 mb-4\">Create your study schedule to get started.</p>\r\n          <button\r\n            onClick={() => setShowAddSession(true)}\r\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\"\r\n          >\r\n            Create Schedule\r\n          </button>\r\n        </div>\r\n      </DashboardLayout>\r\n    );\r\n  }\r\n\r\n  const daysInMonth = getDaysInMonth(currentDate);\r\n  const selectedDateSessions = getSessionsForDate(selectedDate);\r\n\r\n  return (\r\n    <DashboardLayout allowedRoles={['student']}>\r\n      <Head>\r\n        <title>Study Schedule - Verbfy</title>\r\n      </Head>\r\n\r\n      <div className=\"p-6 max-w-7xl mx-auto\">\r\n        {/* Header */}\r\n        <div className=\"mb-8\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Study Schedule</h1>\r\n              <p className=\"text-gray-600\">\r\n                Plan your learning journey and track your study goals\r\n              </p>\r\n            </div>\r\n            <div className=\"flex items-center space-x-4\">\r\n              <button\r\n                onClick={() => setShowAddSession(true)}\r\n                className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\"\r\n              >\r\n                Add Session\r\n              </button>\r\n              <button\r\n                onClick={() => router.push('/personalized-curriculum')}\r\n                className=\"px-4 py-2 text-gray-600 border border-gray-300 rounded-md hover:bg-gray-50 transition-colors\"\r\n              >\r\n                Back to Curriculum\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Overview Cards */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\r\n          <div className=\"bg-white rounded-lg shadow-sm border p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">Weekly Goal</p>\r\n                <p className=\"text-2xl font-bold text-gray-900\">\r\n                  {schedule.completedThisWeek}/{schedule.weeklyGoal}\r\n                </p>\r\n              </div>\r\n              <div className=\"w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center\">\r\n                <span className=\"text-blue-600 text-xl\">📅</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-white rounded-lg shadow-sm border p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">Daily Goal</p>\r\n                <p className=\"text-2xl font-bold text-gray-900\">{schedule.dailyGoal} min</p>\r\n              </div>\r\n              <div className=\"w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center\">\r\n                <span className=\"text-green-600 text-xl\">⏰</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-white rounded-lg shadow-sm border p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">Average Time</p>\r\n                <p className=\"text-2xl font-bold text-gray-900\">{schedule.averageTimePerDay} min</p>\r\n              </div>\r\n              <div className=\"w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center\">\r\n                <span className=\"text-purple-600 text-xl\">📊</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"bg-white rounded-lg shadow-sm border p-6\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm font-medium text-gray-600\">Upcoming</p>\r\n                <p className=\"text-2xl font-bold text-gray-900\">\r\n                  {schedule.studySessions.filter((s: any) => !s.completed).length}\r\n                </p>\r\n              </div>\r\n              <div className=\"w-12 h-12 bg-orange-100 rounded-lg flex items-center justify-center\">\r\n                <span className=\"text-orange-600 text-xl\">🎯</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\r\n          {/* Calendar */}\r\n          <div className=\"lg:col-span-2 bg-white rounded-lg shadow-sm border p-6\">\r\n            <div className=\"flex items-center justify-between mb-6\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900\">Study Calendar</h3>\r\n              <div className=\"flex items-center space-x-2\">\r\n                <button\r\n                  onClick={() => setCurrentDate(new Date(currentDate.getFullYear(), currentDate.getMonth() - 1))}\r\n                  className=\"p-2 text-gray-400 hover:text-gray-600\"\r\n                >\r\n                  ←\r\n                </button>\r\n                <span className=\"font-medium text-gray-900\">\r\n                  {currentDate.toLocaleDateString('en-US', { month: 'long', year: 'numeric' })}\r\n                </span>\r\n                <button\r\n                  onClick={() => setCurrentDate(new Date(currentDate.getFullYear(), currentDate.getMonth() + 1))}\r\n                  className=\"p-2 text-gray-400 hover:text-gray-600\"\r\n                >\r\n                  →\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Calendar Grid */}\r\n            <div className=\"grid grid-cols-7 gap-1 mb-4\">\r\n              {['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(day => (\r\n                <div key={day} className=\"p-2 text-center text-sm font-medium text-gray-500\">\r\n                  {day}\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"grid grid-cols-7 gap-1\">\r\n              {daysInMonth.map((day, index) => {\r\n                if (!day) {\r\n                  return <div key={index} className=\"p-2\"></div>;\r\n                }\r\n\r\n                const sessions = getSessionsForDate(day);\r\n                const isSelected = selectedDate.toDateString() === day.toDateString();\r\n                const isToday = new Date().toDateString() === day.toDateString();\r\n\r\n                return (\r\n                  <button\r\n                    key={index}\r\n                    onClick={() => setSelectedDate(day)}\r\n                    className={`p-2 text-sm border rounded-lg hover:bg-gray-50 transition-colors ${\r\n                      isSelected ? 'bg-blue-100 border-blue-300' : 'border-gray-200'\r\n                    } ${isToday ? 'ring-2 ring-blue-500' : ''}`}\r\n                  >\r\n                    <div className=\"text-right mb-1\">\r\n                      <span className={`font-medium ${isToday ? 'text-blue-600' : 'text-gray-900'}`}>\r\n                        {day.getDate()}\r\n                      </span>\r\n                    </div>\r\n                    {sessions.length > 0 && (\r\n                      <div className=\"space-y-1\">\r\n                        {sessions.slice(0, 2).map((session: any) => (\r\n                          <div\r\n                            key={session.id}\r\n                            className={`w-full h-1 rounded-full ${\r\n                              session.completed ? 'bg-green-500' : 'bg-blue-500'\r\n                            }`}\r\n                          ></div>\r\n                        ))}\r\n                        {sessions.length > 2 && (\r\n                          <div className=\"text-xs text-gray-500\">+{sessions.length - 2}</div>\r\n                        )}\r\n                      </div>\r\n                    )}\r\n                  </button>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Selected Date Details */}\r\n          <div className=\"bg-white rounded-lg shadow-sm border p-6\">\r\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">\r\n              {formatDate(selectedDate.toISOString())}\r\n            </h3>\r\n\r\n            {selectedDateSessions.length === 0 ? (\r\n              <div className=\"text-center py-8\">\r\n                <div className=\"text-gray-400 text-4xl mb-2\">📅</div>\r\n                <p className=\"text-gray-600 mb-4\">No study sessions scheduled</p>\r\n                <button\r\n                  onClick={() => {\r\n                    setNewSession({\r\n                      ...newSession,\r\n                      date: selectedDate.toISOString().split('T')[0]\r\n                    });\r\n                    setShowAddSession(true);\r\n                  }}\r\n                  className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\"\r\n                >\r\n                  Add Session\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <div className=\"space-y-4\">\r\n                {selectedDateSessions.map((session: any) => (\r\n                  <div key={session.id} className=\"p-4 border rounded-lg\">\r\n                    <div className=\"flex items-center justify-between mb-2\">\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        <span>{getSessionTypeIcon(session.type)}</span>\r\n                        <span className={`px-2 py-1 text-xs font-medium rounded-full ${getSessionTypeColor(session.type)}`}>\r\n                          {session.type}\r\n                        </span>\r\n                      </div>\r\n                      <span className=\"text-sm text-gray-500\">{session.time}</span>\r\n                    </div>\r\n                    \r\n                    <h4 className=\"font-medium text-gray-900 mb-1\">{session.title}</h4>\r\n                    <p className=\"text-sm text-gray-600 mb-2\">{session.goal}</p>\r\n                    \r\n                    <div className=\"flex items-center justify-between\">\r\n                      <span className=\"text-sm text-gray-500\">{session.duration} minutes</span>\r\n                      {session.completed ? (\r\n                        <span className=\"text-sm text-green-600 font-medium\">✓ Completed</span>\r\n                      ) : (\r\n                        <button\r\n                          onClick={() => handleCompleteSession(session.id)}\r\n                          className=\"px-3 py-1 bg-green-600 text-white text-sm rounded-md hover:bg-green-700 transition-colors\"\r\n                        >\r\n                          Mark Complete\r\n                        </button>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Study Goals */}\r\n        <div className=\"mt-8 bg-white rounded-lg shadow-sm border p-6\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-6\">Study Goals</h3>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n            {schedule.studyGoals.map((goal: any) => (\r\n              <div key={goal.id} className=\"p-4 border rounded-lg\">\r\n                <div className=\"flex items-center justify-between mb-3\">\r\n                  <h4 className=\"font-medium text-gray-900\">{goal.title}</h4>\r\n                  <span className=\"text-sm font-semibold text-gray-600\">\r\n                    {goal.current}/{goal.target}\r\n                  </span>\r\n                </div>\r\n                \r\n                <div className=\"w-full bg-gray-200 rounded-full h-2 mb-2\">\r\n                  <div \r\n                    className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\r\n                    style={{ width: `${goal.progress}%` }}\r\n                  ></div>\r\n                </div>\r\n                \r\n                <div className=\"flex justify-between text-xs text-gray-500\">\r\n                  <span>Progress</span>\r\n                  <span>{goal.progress}%</span>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Recommended Study Times */}\r\n        <div className=\"mt-8 bg-white rounded-lg shadow-sm border p-6\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-6\">Recommended Study Times</h3>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n            {schedule.recommendedTimes.map((recommendation: any, index: number) => (\r\n              <div key={index} className=\"p-4 bg-blue-50 rounded-lg border border-blue-200\">\r\n                <div className=\"flex items-center justify-between mb-2\">\r\n                  <span className=\"font-medium text-blue-900\">{recommendation.day}</span>\r\n                  <span className=\"text-sm text-blue-700\">{recommendation.time}</span>\r\n                </div>\r\n                <p className=\"text-sm text-blue-600\">{recommendation.reason}</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Add Session Modal */}\r\n        {showAddSession && (\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n            <div className=\"bg-white rounded-lg p-6 max-w-md w-full mx-4\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Add Study Session</h3>\r\n              \r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Date</label>\r\n                  <input\r\n                    type=\"date\"\r\n                    value={newSession.date}\r\n                    onChange={(e) => setNewSession({ ...newSession, date: e.target.value })}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  />\r\n                </div>\r\n                \r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Time</label>\r\n                  <input\r\n                    type=\"time\"\r\n                    value={newSession.time}\r\n                    onChange={(e) => setNewSession({ ...newSession, time: e.target.value })}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  />\r\n                </div>\r\n                \r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Duration (minutes)</label>\r\n                  <select\r\n                    value={newSession.duration}\r\n                    onChange={(e) => setNewSession({ ...newSession, duration: parseInt(e.target.value) })}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  >\r\n                    <option value={15}>15 minutes</option>\r\n                    <option value={30}>30 minutes</option>\r\n                    <option value={45}>45 minutes</option>\r\n                    <option value={60}>1 hour</option>\r\n                    <option value={90}>1.5 hours</option>\r\n                    <option value={120}>2 hours</option>\r\n                  </select>\r\n                </div>\r\n                \r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Type</label>\r\n                  <select\r\n                    value={newSession.type}\r\n                    onChange={(e) => setNewSession({ ...newSession, type: e.target.value })}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  >\r\n                    <option value=\"lesson\">Lesson</option>\r\n                    <option value=\"test\">Test</option>\r\n                    <option value=\"practice\">Practice</option>\r\n                    <option value=\"review\">Review</option>\r\n                  </select>\r\n                </div>\r\n                \r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Goal</label>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={newSession.goal}\r\n                    onChange={(e) => setNewSession({ ...newSession, goal: e.target.value })}\r\n                    placeholder=\"e.g., Complete 3 grammar exercises\"\r\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"flex space-x-3 mt-6\">\r\n                <button\r\n                  onClick={() => setShowAddSession(false)}\r\n                  className=\"flex-1 px-4 py-2 text-gray-600 border border-gray-300 rounded-md hover:bg-gray-50 transition-colors\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  onClick={handleAddSession}\r\n                  className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\"\r\n                >\r\n                  Add Session\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </DashboardLayout>\r\n  );\r\n} "],"names":["window","__NEXT_P","push","__webpack_require__","StudySchedulePage","router","useRouter","user","useAuthContext","success","error","useToast","schedule","setSchedule","useState","loading","setLoading","currentDate","setCurrentDate","Date","selectedDate","setSelectedDate","showAddSession","setShowAddSession","newSession","setNewSession","date","time","duration","type","goal","useEffect","loadSchedule","weeklyGoal","completedThisWeek","dailyGoal","averageTimePerDay","studySessions","id","title","completed","studyGoals","progress","target","current","recommendedTimes","day","reason","err","console","handleAddSession","handleCompleteSession","sessionId","getSessionTypeIcon","icons","lesson","test","practice","review","getSessionTypeColor","colors","getSessionsForDate","dateString","toISOString","split","filter","session","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","DashboardLayout","allowedRoles","div","className","jsxs","h2","p","button","onClick","daysInMonth","getDaysInMonth","year","getFullYear","month","getMonth","getDate","firstDayOfMonth","getDay","days","i","selectedDateSessions","Head","h1","span","s","length","h3","toLocaleDateString","map","index","sessions","isSelected","toDateString","isToday","concat","slice","weekday","h4","style","width","recommendation","label","input","value","onChange","e","select","parseInt","option","placeholder"],"sourceRoot":""}