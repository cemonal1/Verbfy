{"version":3,"file":"static/chunks/pages/achievements-db0904518aa748e6.js","mappings":"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","sources":["webpack://_N_E/?fdc2","webpack://_N_E/./pages/achievements/index.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/achievements\",\n      function () {\n        return require(\"private-next-pages/achievements/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/achievements\"])\n      });\n    }\n  ","import React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\nimport DashboardLayout from '@/components/layout/DashboardLayout';\nimport { useAuthContext } from '@/context/AuthContext';\nimport { useToast } from '@/components/common/Toast';\n\nexport default function AchievementsPage() {\n  const router = useRouter();\n  const { user } = useAuthContext();\n  const { error } = useToast();\n  \n  const [achievements, setAchievements] = useState<any>(null);\n  const [loading, setLoading] = useState(true);\n  const [activeTab, setActiveTab] = useState<'all' | 'earned' | 'in-progress' | 'locked'>('all');\n\n  useEffect(() => {\n    loadAchievements();\n  }, []);\n\n  const loadAchievements = async () => {\n    try {\n      setLoading(true);\n      // This would need to be implemented in the API\n      // const response = await fetch('/api/achievements');\n      // setAchievements(response.achievements);\n      \n      // Simulated data for demonstration\n      setAchievements({\n        totalAchievements: 25,\n        earnedCount: 12,\n        totalPoints: 850,\n        level: 8,\n        nextLevelPoints: 1000,\n        currentLevelPoints: 850,\n        recentAchievements: [\n          { id: 1, name: 'Grammar Master', description: 'Achieved 80% in grammar skills', earned: true, date: '2024-01-15', points: 100, icon: '📝' },\n          { id: 2, name: 'Week Warrior', description: 'Studied for 7 consecutive days', earned: true, date: '2024-01-22', points: 50, icon: '🔥' },\n          { id: 3, name: 'Test Champion', description: 'Passed 10 tests', earned: true, date: '2024-02-01', points: 75, icon: '🏆' }\n        ],\n        categories: [\n          {\n            name: 'Learning Milestones',\n            achievements: [\n              { id: 1, name: 'First Lesson', description: 'Complete your first lesson', earned: true, date: '2024-01-10', points: 25, icon: '🎯', rarity: 'common' },\n              { id: 2, name: 'Lesson Master', description: 'Complete 50 lessons', earned: false, progress: 35, target: 50, points: 100, icon: '📚', rarity: 'rare' },\n              { id: 3, name: 'Century Club', description: 'Complete 100 lessons', earned: false, progress: 35, target: 100, points: 200, icon: '💎', rarity: 'epic' }\n            ]\n          },\n          {\n            name: 'Study Habits',\n            achievements: [\n              { id: 4, name: 'Week Warrior', description: 'Study for 7 consecutive days', earned: true, date: '2024-01-22', points: 50, icon: '🔥', rarity: 'common' },\n              { id: 5, name: 'Month Master', description: 'Study for 30 consecutive days', earned: false, progress: 22, target: 30, points: 150, icon: '🌟', rarity: 'rare' },\n              { id: 6, name: 'Dedication King', description: 'Study for 100 consecutive days', earned: false, progress: 22, target: 100, points: 500, icon: '👑', rarity: 'legendary' }\n            ]\n          },\n          {\n            name: 'Skill Mastery',\n            achievements: [\n              { id: 7, name: 'Grammar Master', description: 'Achieve 80% in grammar skills', earned: true, date: '2024-01-15', points: 100, icon: '📝', rarity: 'rare' },\n              { id: 8, name: 'Reading Expert', description: 'Achieve 90% in reading skills', earned: false, progress: 75, target: 90, points: 150, icon: '📖', rarity: 'rare' },\n              { id: 9, name: 'Vocabulary Expert', description: 'Learn 500 new words', earned: false, progress: 320, target: 500, points: 200, icon: '📚', rarity: 'epic' },\n              { id: 10, name: 'Polyglot', description: 'Achieve 90% in all skills', earned: false, progress: 68, target: 90, points: 1000, icon: '🌍', rarity: 'legendary' }\n            ]\n          },\n          {\n            name: 'Testing & Assessment',\n            achievements: [\n              { id: 11, name: 'Test Champion', description: 'Pass 10 tests', earned: true, date: '2024-02-01', points: 75, icon: '🏆', rarity: 'common' },\n              { id: 12, name: 'Perfect Score', description: 'Get 100% on any test', earned: false, progress: 0, target: 1, points: 200, icon: '💯', rarity: 'epic' },\n              { id: 13, name: 'CEFR Climber', description: 'Advance to the next CEFR level', earned: false, progress: 0, target: 1, points: 300, icon: '📈', rarity: 'rare' }\n            ]\n          },\n          {\n            name: 'Social & Community',\n            achievements: [\n              { id: 14, name: 'Study Buddy', description: 'Join a study group', earned: false, progress: 0, target: 1, points: 50, icon: '👥', rarity: 'common' },\n              { id: 15, name: 'Mentor', description: 'Help 5 other students', earned: false, progress: 0, target: 5, points: 150, icon: '🤝', rarity: 'rare' },\n              { id: 16, name: 'Community Leader', description: 'Create and lead a study group', earned: false, progress: 0, target: 1, points: 300, icon: '👑', rarity: 'epic' }\n            ]\n          }\n        ],\n        leaderboard: [\n          { rank: 1, name: 'Sarah Johnson', points: 1250, level: 12, avatar: '👩‍🎓' },\n          { rank: 2, name: 'Mike Chen', points: 1100, level: 11, avatar: '👨‍🎓' },\n          { rank: 3, name: 'Emma Davis', points: 950, level: 10, avatar: '👩‍🎓' },\n          { rank: 4, name: 'Alex Thompson', points: 850, level: 8, avatar: '👨‍🎓' },\n          { rank: 5, name: 'Lisa Wang', points: 800, level: 8, avatar: '👩‍🎓' }\n        ]\n      });\n    } catch (err) {\n      error('Failed to load achievements');\n      console.error('Error loading achievements:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getRarityColor = (rarity: string) => {\n    const colors = {\n      common: 'bg-gray-100 text-gray-800 border-gray-300',\n      rare: 'bg-blue-100 text-blue-800 border-blue-300',\n      epic: 'bg-purple-100 text-purple-800 border-purple-300',\n      legendary: 'bg-yellow-100 text-yellow-800 border-yellow-300'\n    };\n    return colors[rarity as keyof typeof colors] || colors.common;\n  };\n\n  const getRarityBadge = (rarity: string) => {\n    const badges = {\n      common: '⚪',\n      rare: '🔵',\n      epic: '🟣',\n      legendary: '🟡'\n    };\n    return badges[rarity as keyof typeof badges] || badges.common;\n  };\n\n  const getProgressPercentage = (achievement: any) => {\n    if (achievement.earned) return 100;\n    if (!achievement.progress || !achievement.target) return 0;\n    return Math.min((achievement.progress / achievement.target) * 100, 100);\n  };\n\n  const filterAchievements = (category: any) => {\n    const allAchievements = category.achievements;\n    \n    switch (activeTab) {\n      case 'earned':\n        return allAchievements.filter((a: any) => a.earned);\n      case 'in-progress':\n        return allAchievements.filter((a: any) => !a.earned && a.progress > 0);\n      case 'locked':\n        return allAchievements.filter((a: any) => !a.earned && (!a.progress || a.progress === 0));\n      default:\n        return allAchievements;\n    }\n  };\n\n  if (loading) {\n    return (\n      <DashboardLayout allowedRoles={['student']}>\n        <div className=\"flex items-center justify-center h-64\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n        </div>\n      </DashboardLayout>\n    );\n  }\n\n  if (!achievements) {\n    return (\n      <DashboardLayout allowedRoles={['student']}>\n        <div className=\"text-center py-12\">\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">No achievements available</h2>\n          <p className=\"text-gray-600 mb-4\">Start learning to unlock achievements.</p>\n          <button\n            onClick={() => router.push('/verbfy-lessons')}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\"\n          >\n            Start Learning\n          </button>\n        </div>\n      </DashboardLayout>\n    );\n  }\n\n  return (\n    <DashboardLayout allowedRoles={['student']}>\n      <Head>\n        <title>Achievements - Verbfy</title>\n      </Head>\n\n      <div className=\"p-6 max-w-7xl mx-auto\">\n        {/* Header */}\n        <div className=\"mb-8\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Achievements</h1>\n              <p className=\"text-gray-600\">\n                Track your progress and unlock rewards for your learning journey\n              </p>\n            </div>\n            <button\n              onClick={() => router.push('/personalized-curriculum')}\n              className=\"px-4 py-2 text-gray-600 border border-gray-300 rounded-md hover:bg-gray-50 transition-colors\"\n            >\n              Back to Curriculum\n            </button>\n          </div>\n        </div>\n\n        {/* Level Progress */}\n        <div className=\"mb-8 p-6 bg-gradient-to-r from-blue-50 to-indigo-50 rounded-lg border border-blue-200\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <div>\n              <h2 className=\"text-xl font-semibold text-gray-900\">Level {achievements.level}</h2>\n              <p className=\"text-gray-600\">Keep learning to reach the next level!</p>\n            </div>\n            <div className=\"text-right\">\n              <div className=\"text-2xl font-bold text-blue-600\">{achievements.totalPoints} pts</div>\n              <div className=\"text-sm text-gray-600\">Total Points</div>\n            </div>\n          </div>\n          \n          <div className=\"mb-2\">\n            <div className=\"flex justify-between text-sm text-gray-600 mb-1\">\n              <span>Progress to Level {achievements.level + 1}</span>\n              <span>{achievements.currentLevelPoints}/{achievements.nextLevelPoints} pts</span>\n            </div>\n            <div className=\"w-full bg-gray-200 rounded-full h-3\">\n              <div \n                className=\"bg-blue-600 h-3 rounded-full transition-all duration-300\"\n                style={{ \n                  width: `${((achievements.currentLevelPoints - (achievements.level - 1) * 100) / 100) * 100}%` \n                }}\n              ></div>\n            </div>\n          </div>\n        </div>\n\n        {/* Stats Cards */}\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\n          <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">Total Achievements</p>\n                <p className=\"text-2xl font-bold text-gray-900\">{achievements.totalAchievements}</p>\n              </div>\n              <div className=\"w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center\">\n                <span className=\"text-blue-600 text-xl\">🏆</span>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">Earned</p>\n                <p className=\"text-2xl font-bold text-gray-900\">{achievements.earnedCount}</p>\n              </div>\n              <div className=\"w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center\">\n                <span className=\"text-green-600 text-xl\">✅</span>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">In Progress</p>\n                <p className=\"text-2xl font-bold text-gray-900\">\n                  {achievements.categories.reduce((total: number, cat: any) => \n                    total + cat.achievements.filter((a: any) => !a.earned && a.progress > 0).length, 0\n                  )}\n                </p>\n              </div>\n              <div className=\"w-12 h-12 bg-yellow-100 rounded-lg flex items-center justify-center\">\n                <span className=\"text-yellow-600 text-xl\">🔄</span>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">Completion Rate</p>\n                <p className=\"text-2xl font-bold text-gray-900\">\n                  {Math.round((achievements.earnedCount / achievements.totalAchievements) * 100)}%\n                </p>\n              </div>\n              <div className=\"w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center\">\n                <span className=\"text-purple-600 text-xl\">📊</span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Recent Achievements */}\n        <div className=\"mb-8 bg-white rounded-lg shadow-sm border p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Recent Achievements</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n            {achievements.recentAchievements.map((achievement: any) => (\n              <div key={achievement.id} className=\"p-4 bg-green-50 rounded-lg border border-green-200\">\n                <div className=\"flex items-center justify-between mb-2\">\n                  <span className=\"text-2xl\">{achievement.icon}</span>\n                  <span className=\"text-sm font-semibold text-green-600\">+{achievement.points} pts</span>\n                </div>\n                <h4 className=\"font-medium text-gray-900 mb-1\">{achievement.name}</h4>\n                <p className=\"text-sm text-gray-600 mb-2\">{achievement.description}</p>\n                <p className=\"text-xs text-green-600\">Earned {achievement.date}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Tabs */}\n        <div className=\"mb-6\">\n          <div className=\"border-b border-gray-200\">\n            <nav className=\"-mb-px flex space-x-8\">\n              {[\n                { id: 'all', label: 'All Achievements', count: achievements.totalAchievements },\n                { id: 'earned', label: 'Earned', count: achievements.earnedCount },\n                { id: 'in-progress', label: 'In Progress', count: achievements.categories.reduce((total: number, cat: any) => total + cat.achievements.filter((a: any) => !a.earned && a.progress > 0).length, 0) },\n                { id: 'locked', label: 'Locked', count: achievements.totalAchievements - achievements.earnedCount - achievements.categories.reduce((total: number, cat: any) => total + cat.achievements.filter((a: any) => !a.earned && a.progress > 0).length, 0) }\n              ].map((tab) => (\n                <button\n                  key={tab.id}\n                  onClick={() => setActiveTab(tab.id as any)}\n                  className={`py-2 px-1 border-b-2 font-medium text-sm flex items-center space-x-2 ${\n                    activeTab === tab.id\n                      ? 'border-blue-500 text-blue-600'\n                      : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                  }`}\n                >\n                  <span>{tab.label}</span>\n                  <span className=\"bg-gray-100 text-gray-600 px-2 py-1 rounded-full text-xs\">\n                    {tab.count}\n                  </span>\n                </button>\n              ))}\n            </nav>\n          </div>\n        </div>\n\n        {/* Achievement Categories */}\n        <div className=\"space-y-8\">\n          {achievements.categories.map((category: any) => {\n            const filteredAchievements = filterAchievements(category);\n            if (filteredAchievements.length === 0) return null;\n\n            return (\n              <div key={category.name} className=\"bg-white rounded-lg shadow-sm border p-6\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-6\">{category.name}</h3>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                  {filteredAchievements.map((achievement: any) => (\n                    <div \n                      key={achievement.id} \n                      className={`p-4 border rounded-lg transition-all duration-200 ${\n                        achievement.earned \n                          ? 'bg-green-50 border-green-200 hover:shadow-md' \n                          : 'bg-gray-50 border-gray-200 hover:shadow-md'\n                      }`}\n                    >\n                      <div className=\"flex items-center justify-between mb-3\">\n                        <div className=\"flex items-center space-x-2\">\n                          <span className=\"text-2xl\">{achievement.icon}</span>\n                          <span className={`px-2 py-1 text-xs font-medium rounded-full border ${getRarityColor(achievement.rarity)}`}>\n                            {getRarityBadge(achievement.rarity)} {achievement.rarity}\n                          </span>\n                        </div>\n                        <span className=\"text-sm font-semibold text-gray-600\">+{achievement.points} pts</span>\n                      </div>\n                      \n                      <h4 className=\"font-medium text-gray-900 mb-2\">{achievement.name}</h4>\n                      <p className=\"text-sm text-gray-600 mb-3\">{achievement.description}</p>\n                      \n                      {achievement.earned ? (\n                        <div className=\"flex items-center justify-between\">\n                          <span className=\"text-sm text-green-600 font-medium\">✓ Earned</span>\n                          <span className=\"text-xs text-gray-500\">{achievement.date}</span>\n                        </div>\n                      ) : (\n                        <div>\n                          {achievement.progress !== undefined && achievement.target && (\n                            <div className=\"mb-2\">\n                              <div className=\"flex justify-between text-xs text-gray-500 mb-1\">\n                                <span>Progress</span>\n                                <span>{achievement.progress}/{achievement.target}</span>\n                              </div>\n                              <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                                <div \n                                  className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\n                                  style={{ width: `${getProgressPercentage(achievement)}%` }}\n                                ></div>\n                              </div>\n                            </div>\n                          )}\n                          <span className=\"text-sm text-gray-500\">🔒 Locked</span>\n                        </div>\n                      )}\n                    </div>\n                  ))}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n\n        {/* Leaderboard */}\n        <div className=\"mt-8 bg-white rounded-lg shadow-sm border p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-6\">Leaderboard</h3>\n          <div className=\"space-y-3\">\n            {achievements.leaderboard.map((player: any, index: number) => (\n              <div key={index} className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\">\n                <div className=\"flex items-center space-x-3\">\n                  <div className=\"flex items-center justify-center w-8 h-8 rounded-full bg-gray-200\">\n                    <span className=\"text-sm font-bold text-gray-600\">{player.rank}</span>\n                  </div>\n                  <span className=\"text-2xl\">{player.avatar}</span>\n                  <div>\n                    <p className=\"font-medium text-gray-900\">{player.name}</p>\n                    <p className=\"text-sm text-gray-500\">Level {player.level}</p>\n                  </div>\n                </div>\n                <div className=\"text-right\">\n                  <p className=\"font-semibold text-gray-900\">{player.points} pts</p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </DashboardLayout>\n  );\n} "],"names":["window","__NEXT_P","push","__webpack_require__","AchievementsPage","router","useRouter","user","useAuthContext","error","useToast","achievements","setAchievements","useState","loading","setLoading","activeTab","setActiveTab","useEffect","loadAchievements","totalAchievements","earnedCount","totalPoints","level","nextLevelPoints","currentLevelPoints","recentAchievements","id","name","description","earned","date","points","icon","categories","rarity","progress","target","leaderboard","rank","avatar","err","console","getRarityColor","colors","common","rare","epic","legendary","getRarityBadge","badges","getProgressPercentage","achievement","Math","min","filterAchievements","allAchievements","category","filter","a","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","DashboardLayout","allowedRoles","div","className","jsxs","Head","title","h1","p","button","onClick","h2","span","style","width","concat","reduce","total","cat","length","round","h3","map","h4","nav","label","count","tab","filteredAchievements","undefined","player","index"],"sourceRoot":""}