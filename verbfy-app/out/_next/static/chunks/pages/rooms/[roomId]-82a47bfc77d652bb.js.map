{"version":3,"file":"static/chunks/pages/rooms/[roomId]-82a47bfc77d652bb.js","mappings":"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","sources":["webpack://_N_E/?fbb0","webpack://_N_E/./src/features/lessonRoom/webrtc/useWebRTC.ts","webpack://_N_E/./src/features/chat/viewmodel/useChatViewModel.ts","webpack://_N_E/./src/features/chat/view/ChatBox.tsx","webpack://_N_E/./pages/rooms/[roomId].tsx","webpack://_N_E/./src/features/conversation/viewmodel/useConversationRoomViewModel.ts"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/rooms/[roomId]\",\n      function () {\n        return require(\"private-next-pages/rooms/[roomId].tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/rooms/[roomId]\"])\n      });\n    }\n  ","import { useState, useCallback, useEffect, useRef } from 'react';\nimport { io, Socket } from 'socket.io-client';\n\ninterface PeerIds {\n  self: string;\n  remote?: string;\n}\n\ninterface WebRTCConfig {\n  iceServers: RTCIceServer[];\n}\n\nexport function useWebRTC(roomId: string, peerIds: PeerIds, participantPeerIds: string[]) {\n  const [localStream, setLocalStream] = useState<MediaStream | null>(null);\n  const [remoteStreams, setRemoteStreams] = useState<{ [peerId: string]: MediaStream }>({});\n  const [isMicOn, setIsMicOn] = useState(true);\n  const [isCameraOn, setIsCameraOn] = useState(true);\n  const [status, setStatus] = useState('disconnected');\n  const [error, setError] = useState<string | null>(null);\n  const [muteStates, setMuteStates] = useState<{ [peerId: string]: boolean }>({});\n  const [videoStates, setVideoStates] = useState<{ [peerId: string]: boolean }>({});\n  const [isInitialized, setIsInitialized] = useState(false);\n\n  // Refs for WebRTC connections\n  const socketRef = useRef<Socket | null>(null);\n  const peerConnectionsRef = useRef<{ [peerId: string]: RTCPeerConnection }>({});\n  const localStreamRef = useRef<MediaStream | null>(null);\n\n  // WebRTC Configuration with STUN/TURN servers\n  const webrtcConfig: WebRTCConfig = {\n    iceServers: [\n      { urls: 'stun:stun.l.google.com:19302' },\n      { urls: 'stun:stun1.l.google.com:19302' },\n      { urls: 'stun:stun2.l.google.com:19302' },\n      { urls: 'stun:stun3.l.google.com:19302' },\n      { urls: 'stun:stun4.l.google.com:19302' },\n      // Add TURN server if available\n      // { urls: 'turn:turn.verbfy.com:3478', username: 'xxx', credential: 'yyy' }\n    ]\n  };\n\n  // Initialize media stream with proper getUserMedia call\n  const initializeMediaStream = useCallback(async () => {\n    try {\n      console.log('🎤 Requesting microphone and camera access...');\n      \n      // Check if getUserMedia is supported\n      if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\n        throw new Error('getUserMedia is not supported in this browser');\n      }\n\n      // Request both audio and video\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: {\n          echoCancellation: true,\n          noiseSuppression: true,\n          autoGainControl: true,\n          sampleRate: 44100\n        },\n        video: {\n          width: { ideal: 1280 },\n          height: { ideal: 720 },\n          frameRate: { ideal: 30 }\n        }\n      });\n\n      console.log('✅ Media stream obtained:', {\n        audioTracks: stream.getAudioTracks().length,\n        videoTracks: stream.getVideoTracks().length,\n        audioTrack: stream.getAudioTracks()[0]?.label,\n        videoTrack: stream.getVideoTracks()[0]?.label\n      });\n\n      // Verify audio tracks exist\n      if (stream.getAudioTracks().length === 0) {\n        throw new Error('No audio tracks found in stream');\n      }\n\n      setLocalStream(stream);\n      localStreamRef.current = stream;\n      setError(null);\n      \n      return stream;\n    } catch (err) {\n      console.error('❌ Failed to get media stream:', err);\n      setError(`Media access failed: ${err instanceof Error ? err.message : 'Unknown error'}`);\n      throw err;\n    }\n  }, []);\n\n  // Create peer connection\n  const createPeerConnection = useCallback((peerId: string): RTCPeerConnection => {\n    console.log(`🔗 Creating peer connection for ${peerId}`);\n    \n    const peerConnection = new RTCPeerConnection(webrtcConfig);\n    \n    // Add local stream to peer connection\n    if (localStreamRef.current) {\n      localStreamRef.current.getTracks().forEach(track => {\n        peerConnection.addTrack(track, localStreamRef.current!);\n        console.log(`📡 Added ${track.kind} track to peer connection`);\n      });\n    }\n\n    // Handle remote stream\n    peerConnection.ontrack = (event) => {\n      console.log(`📺 Received remote stream from ${peerId}:`, event.streams[0]);\n      setRemoteStreams(prev => ({\n        ...prev,\n        [peerId]: event.streams[0]\n      }));\n    };\n\n    // Handle ICE candidates\n    peerConnection.onicecandidate = (event) => {\n      if (event.candidate && socketRef.current) {\n        console.log(`🧊 Sending ICE candidate to ${peerId}`);\n        socketRef.current.emit('ice-candidate', {\n          roomId,\n          candidate: event.candidate,\n          targetUserId: peerId\n        });\n      }\n    };\n\n    // Handle connection state changes\n    peerConnection.onconnectionstatechange = () => {\n      console.log(`🔌 Connection state for ${peerId}:`, peerConnection.connectionState);\n      if (peerConnection.connectionState === 'connected') {\n        setStatus('connected');\n      } else if (peerConnection.connectionState === 'disconnected') {\n        setStatus('disconnected');\n      }\n    };\n\n    peerConnectionsRef.current[peerId] = peerConnection;\n    return peerConnection;\n  }, [roomId]);\n\n  // Initialize WebRTC\n  const initializeWebRTC = useCallback(async () => {\n    try {\n      if (isInitialized) return;\n      \n      console.log('🚀 Initializing WebRTC...');\n      setStatus('connecting');\n      setError(null);\n\n      // Initialize media stream\n      await initializeMediaStream();\n\n      // Initialize socket connection\n      const socket = io(process.env.NEXT_PUBLIC_BACKEND_URL || 'http://localhost:5000', {\n        auth: {\n          token: localStorage.getItem('token')\n        }\n      });\n\n      socketRef.current = socket;\n\n      // Join room\n      socket.emit('join-room', { reservationId: roomId });\n\n      // Handle room info\n      socket.on('room-info', (data) => {\n        console.log('📋 Room info received:', data);\n        setStatus('connected');\n      });\n\n      // Handle offers\n      socket.on('offer', async (data) => {\n        console.log('📞 Received offer from:', data.userId);\n        const peerConnection = createPeerConnection(data.userId);\n        \n        await peerConnection.setRemoteDescription(data.offer);\n        const answer = await peerConnection.createAnswer();\n        await peerConnection.setLocalDescription(answer);\n        \n        socket.emit('answer', {\n          roomId,\n          answer,\n          targetUserId: data.userId\n        });\n      });\n\n      // Handle answers\n      socket.on('answer', async (data) => {\n        console.log('📞 Received answer from:', data.userId);\n        const peerConnection = peerConnectionsRef.current[data.userId];\n        if (peerConnection) {\n          await peerConnection.setRemoteDescription(data.answer);\n        }\n      });\n\n      // Handle ICE candidates\n      socket.on('ice-candidate', async (data) => {\n        console.log('🧊 Received ICE candidate from:', data.userId);\n        const peerConnection = peerConnectionsRef.current[data.userId];\n        if (peerConnection) {\n          await peerConnection.addIceCandidate(data.candidate);\n        }\n      });\n\n      setIsInitialized(true);\n      console.log('✅ WebRTC initialized successfully');\n      \n    } catch (err) {\n      console.error('❌ Failed to initialize WebRTC:', err);\n      setError(`WebRTC initialization failed: ${err instanceof Error ? err.message : 'Unknown error'}`);\n      setStatus('error');\n    }\n  }, [roomId, isInitialized, initializeMediaStream, createPeerConnection]);\n\n  // Toggle microphone\n  const toggleMic = useCallback(() => {\n    if (localStreamRef.current) {\n      const audioTracks = localStreamRef.current.getAudioTracks();\n      audioTracks.forEach(track => {\n        track.enabled = !track.enabled;\n      });\n    setIsMicOn(!isMicOn);\n      console.log(`🎤 Microphone ${!isMicOn ? 'enabled' : 'disabled'}`);\n    }\n  }, [isMicOn]);\n\n  // Toggle camera\n  const toggleCamera = useCallback(() => {\n    if (localStreamRef.current) {\n      const videoTracks = localStreamRef.current.getVideoTracks();\n      videoTracks.forEach(track => {\n        track.enabled = !track.enabled;\n      });\n    setIsCameraOn(!isCameraOn);\n      console.log(`📹 Camera ${!isCameraOn ? 'enabled' : 'disabled'}`);\n    }\n  }, [isCameraOn]);\n\n  // Reconnect\n  const reconnect = useCallback(() => {\n    console.log('🔄 Reconnecting to room:', roomId);\n    setIsInitialized(false);\n    setStatus('disconnected');\n    setError(null);\n    \n    // Clean up existing connections\n    Object.values(peerConnectionsRef.current).forEach(pc => pc.close());\n    peerConnectionsRef.current = {};\n    \n    if (socketRef.current) {\n      socketRef.current.disconnect();\n      socketRef.current = null;\n    }\n    \n    // Reinitialize\n    setTimeout(() => {\n      initializeWebRTC();\n    }, 1000);\n  }, [roomId, initializeWebRTC]);\n\n  // Toggle remote mute\n  const toggleRemoteMute = useCallback((peerId: string) => {\n    setMuteStates(prev => ({ ...prev, [peerId]: !prev[peerId] }));\n  }, []);\n\n  // Toggle remote video\n  const toggleRemoteVideo = useCallback((peerId: string) => {\n    setVideoStates(prev => ({ ...prev, [peerId]: !prev[peerId] }));\n  }, []);\n\n  // Initialize on mount\n  useEffect(() => {\n    if (roomId && peerIds.self) {\n      initializeWebRTC();\n    }\n\n    // Cleanup on unmount\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n      }\n      Object.values(peerConnectionsRef.current).forEach(pc => pc.close());\n      if (localStreamRef.current) {\n        localStreamRef.current.getTracks().forEach(track => track.stop());\n      }\n    };\n  }, [roomId, peerIds.self, initializeWebRTC]);\n\n  return {\n    localStream,\n    remoteStreams,\n    isMicOn,\n    isCameraOn,\n    toggleMic,\n    toggleCamera,\n    reconnect,\n    status,\n    error,\n    muteStates,\n    videoStates,\n    toggleRemoteMute,\n    toggleRemoteVideo,\n    isInitialized,\n  };\n} ","import { useState, useCallback } from 'react';\n\ninterface Message {\n  id: string;\n  text: string;\n  username: string;\n  timestamp: Date;\n}\n\nexport function useChatViewModel(roomId: string) {\n  const [messages, setMessages] = useState<Message[]>([]);\n\n  const sendMessage = useCallback(async (text: string) => {\n    // Placeholder implementation\n    console.log('Sending message:', text, 'to room:', roomId);\n    \n    // Add message to local state for now\n    const newMessage: Message = {\n      id: Date.now().toString(),\n      text,\n      username: 'You',\n      timestamp: new Date(),\n    };\n    setMessages(prev => [...prev, newMessage]);\n  }, [roomId]);\n\n  return {\n    messages,\n    sendMessage,\n  };\n} ","import React, { useState } from 'react';\n\ninterface Message {\n  id: string;\n  text: string;\n  username: string;\n  timestamp: Date;\n}\n\ninterface ChatBoxProps {\n  messages: Message[];\n  sendMessage: (text: string) => void;\n}\n\nconst ChatBox: React.FC<ChatBoxProps> = ({ messages, sendMessage }) => {\n  const [inputText, setInputText] = useState('');\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (inputText.trim()) {\n      sendMessage(inputText);\n      setInputText('');\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col h-full\">\n      <div className=\"flex-1 overflow-y-auto p-2 space-y-2\">\n        {messages.map((message) => (\n          <div key={message.id} className=\"text-sm\">\n            <span className=\"font-bold\">{message.username}:</span> {message.text}\n          </div>\n        ))}\n      </div>\n      <form onSubmit={handleSubmit} className=\"p-2 border-t\">\n        <input\n          type=\"text\"\n          value={inputText}\n          onChange={(e) => setInputText(e.target.value)}\n          placeholder=\"Type a message...\"\n          className=\"w-full p-2 border rounded\"\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default ChatBox; ","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport { useConversationRoomViewModel } from '@/features/conversation/viewmodel/useConversationRoomViewModel';\r\nimport { useWebRTC } from '@/features/lessonRoom/webrtc/useWebRTC';\r\nimport { useAuthContext } from '@/context/AuthContext';\r\nimport { useChatViewModel } from '@/features/chat/viewmodel/useChatViewModel';\r\nimport ChatBox from '@/features/chat/view/ChatBox';\r\n\r\nfunction RoomPage() {\r\n  const router = useRouter();\r\n  const { user } = useAuthContext();\r\n  const { roomId } = router.query;\r\n  const {\r\n    currentRoom,\r\n    getRoomDetails,\r\n    leaveRoom,\r\n    loading,\r\n    participants,\r\n  } = useConversationRoomViewModel();\r\n\r\n  // Additional state for new features\r\n  const [volume, setVolume] = useState(50);\r\n  const [showVolumeSlider, setShowVolumeSlider] = useState(false);\r\n  const [isScreenSharing, setIsScreenSharing] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (roomId && typeof roomId === 'string') getRoomDetails(roomId);\r\n  }, [roomId, getRoomDetails]);\r\n\r\n  // WebRTC: Use user.id and roomId for peerId\r\n  const peerIds = user && roomId ? {\r\n    self: `${user.id}-room-${roomId}`,\r\n    remote: undefined,\r\n  } : { self: '', remote: undefined };\r\n  const {\r\n    localStream,\r\n    remoteStreams,\r\n    isMicOn,\r\n    isCameraOn,\r\n    toggleMic,\r\n    toggleCamera,\r\n    reconnect,\r\n    status,\r\n    error,\r\n    muteStates,\r\n    videoStates,\r\n    toggleRemoteMute,\r\n    toggleRemoteVideo,\r\n    isInitialized,\r\n  } = useWebRTC(roomId as string, peerIds, participants.map(p => p.peerId));\r\n\r\n  // Chat ViewModel\r\n  const { messages, sendMessage } = useChatViewModel(roomId as string);\r\n\r\n  // Dynamic refs for remote videos\r\n  const remoteVideoRefs = useRef<{ [peerId: string]: HTMLVideoElement | null }>({});\r\n  useEffect(() => {\r\n    Object.entries(remoteStreams).forEach(([peerId, stream]) => {\r\n      const ref = remoteVideoRefs.current[peerId];\r\n      if (ref && stream) ref.srcObject = stream;\r\n    });\r\n  }, [remoteStreams]);\r\n\r\n  const handleLeaveRoom = () => {\r\n    if (currentRoom) {\r\n      leaveRoom(currentRoom.id);\r\n      router.push('/dashboard');\r\n    }\r\n  };\r\n\r\n  const handleToggleScreenShare = () => {\r\n    setIsScreenSharing(!isScreenSharing);\r\n    // Add screen sharing logic here\r\n  };\r\n\r\n  const handleVolumeChange = (newVolume: number) => {\r\n    setVolume(newVolume);\r\n  };\r\n\r\n  if (loading || !currentRoom) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500 mx-auto mb-4\"></div>\r\n          <p className=\"text-gray-700\">Loading room...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Max 5 users enforced at ViewModel level\r\n  if (participants.length > 5) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"text-center max-w-md mx-auto p-6\">\r\n          <div className=\"text-red-500 text-6xl mb-4\">⚠️</div>\r\n          <h1 className=\"text-gray-900 text-xl font-semibold mb-2\">Room Full</h1>\r\n          <p className=\"text-gray-600 mb-6\">This room has reached its maximum capacity.</p>\r\n          <button\r\n            onClick={() => router.push('/dashboard')}\r\n            className=\"bg-blue-600 hover:bg-blue-700 text-white px-6 py-2 rounded-lg transition-colors\"\r\n          >\r\n            Go to Dashboard\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 flex flex-col\">\r\n      {/* Top Header */}\r\n      <header className=\"bg-white border-b border-gray-200 px-6 py-3 shadow-sm\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center space-x-4\">\r\n            <div className=\"w-3 h-3 bg-red-500 rounded-full animate-pulse\"></div>\r\n            <div>\r\n              <h1 className=\"text-lg font-semibold text-gray-900\">Room: {currentRoom.name}</h1>\r\n              <p className=\"text-sm text-gray-600\">\r\n                {participants.length} participant{participants.length !== 1 ? 's' : ''}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"flex items-center space-x-4\">\r\n            <div className=\"text-sm text-gray-600\">\r\n              Status: <span className={`font-medium ${\r\n                status === 'connected' ? 'text-green-600' : \r\n                status === 'connecting' ? 'text-yellow-600' : \r\n                status === 'error' ? 'text-red-600' : 'text-gray-600'\r\n              }`}>{status}</span>\r\n            </div>\r\n            {error && (\r\n              <div className=\"text-sm text-red-600 bg-red-50 px-2 py-1 rounded\">\r\n                {error}\r\n              </div>\r\n            )}\r\n            <button\r\n              onClick={reconnect}\r\n              className=\"bg-yellow-600 hover:bg-yellow-700 px-3 py-1 rounded text-sm transition-colors text-white\"\r\n            >\r\n              Reconnect\r\n            </button>\r\n            <button\r\n              onClick={handleLeaveRoom}\r\n              className=\"bg-red-600 hover:bg-red-700 px-4 py-2 rounded-lg text-sm transition-colors text-white\"\r\n            >\r\n              Leave Room\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      {/* Main Content */}\r\n      <div className=\"flex-1 flex\">\r\n        {/* Video Area */}\r\n        <div className=\"flex-1 flex flex-col\">\r\n          {/* Video Grid */}\r\n          <div className=\"flex-1 bg-gray-100 p-4\">\r\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-4 h-full\">\r\n            {/* Local video */}\r\n              <div className=\"bg-white rounded-lg shadow-sm overflow-hidden\">\r\n                <div className=\"relative h-full\">\r\n                  <div className=\"absolute top-4 left-4 z-10\">\r\n                    <div className=\"bg-black bg-opacity-50 text-white px-2 py-1 rounded text-sm\">\r\n                      You {isInitialized ? '✅' : '⏳'}\r\n                    </div>\r\n                  </div>\r\n                  {localStream ? (\r\n                    <video \r\n                      autoPlay \r\n                      muted \r\n                      playsInline \r\n                      className=\"w-full h-full object-cover\"\r\n                      ref={el => { if (el) el.srcObject = localStream; }}\r\n                    />\r\n                  ) : (\r\n                    <div className=\"w-full h-full bg-gray-200 flex items-center justify-center\">\r\n                      <div className=\"text-center\">\r\n                        <div className=\"text-gray-500 mb-2\">\r\n                          {status === 'connecting' ? '🎤 Requesting microphone access...' : \r\n                           status === 'error' ? '❌ Media access failed' : \r\n                           '⏳ Initializing...'}\r\n                        </div>\r\n                        {error && (\r\n                          <div className=\"text-xs text-red-500 max-w-xs\">\r\n                            {error}\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  {!isMicOn && (\r\n                    <div className=\"absolute bottom-4 left-4 z-10\">\r\n                      <div className=\"bg-red-500 text-white p-2 rounded-full\">\r\n                        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5.586 15H4a1 1 0 01-1-1v-4a1 1 0 011-1h1.586l4.707-4.707C10.923 3.663 12 4.109 12 5v14c0 .891-1.077 1.337-1.707.707L5.586 15z\" clipRule=\"evenodd\" />\r\n                        </svg>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                  {!isCameraOn && (\r\n                    <div className=\"absolute bottom-4 right-4 z-10\">\r\n                      <div className=\"bg-red-500 text-white p-2 rounded-full\">\r\n                        <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z\" />\r\n                        </svg>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Remote Videos */}\r\n              {participants.filter(p => p.peerId !== peerIds.self).map(p => (\r\n                <div key={p.peerId} className=\"bg-white rounded-lg shadow-sm overflow-hidden\">\r\n                  <div className=\"relative h-full\">\r\n                    <div className=\"absolute top-4 left-4 z-10\">\r\n                      <div className=\"bg-black bg-opacity-50 text-white px-2 py-1 rounded text-sm\">\r\n                        {p.name}\r\n                      </div>\r\n                    </div>\r\n                    <video \r\n                      autoPlay \r\n                      playsInline \r\n                      className=\"w-full h-full object-cover\"\r\n                      ref={el => { remoteVideoRefs.current[p.peerId] = el; if (el && remoteStreams[p.peerId]) el.srcObject = remoteStreams[p.peerId]; }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Control Bar */}\r\n          <div className=\"bg-white border-t border-gray-200 px-6 py-4\">\r\n            <div className=\"flex items-center justify-center space-x-4\">\r\n              {/* Mute Button */}\r\n              <button\r\n                onClick={toggleMic}\r\n                className={`p-3 rounded-full transition-colors ${\r\n                  !isMicOn ? 'bg-red-500 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\r\n                }`}\r\n              >\r\n                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  {!isMicOn ? (\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5.586 15H4a1 1 0 01-1-1v-4a1 1 0 011-1h1.586l4.707-4.707C10.923 3.663 12 4.109 12 5v14c0 .891-1.077 1.337-1.707.707L5.586 15z\" clipRule=\"evenodd\" />\r\n                  ) : (\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 11a7 7 0 01-7 7m0 0a7 7 0 01-7-7m7 7v4m0 0H8m4 0h4m-4-8a3 3 0 01-3-3V5a3 3 0 116 0v6a3 3 0 01-3 3z\" />\r\n                  )}\r\n                </svg>\r\n              </button>\r\n\r\n              {/* Volume Button */}\r\n              <div className=\"relative\">\r\n                <button\r\n                  onClick={() => setShowVolumeSlider(!showVolumeSlider)}\r\n                  className=\"p-3 rounded-full bg-gray-200 text-gray-700 hover:bg-gray-300 transition-colors\"\r\n                >\r\n                  <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15.536 8.464a5 5 0 010 7.072m2.828-9.9a9 9 0 010 12.728M5.586 15H4a1 1 0 01-1-1v-4a1 1 0 011-1h1.586l4.707-4.707C10.923 3.663 12 4.109 12 5v14c0 .891-1.077 1.337-1.707.707L5.586 15z\" />\r\n                  </svg>\r\n                </button>\r\n                {showVolumeSlider && (\r\n                  <div className=\"absolute bottom-full left-1/2 transform -translate-x-1/2 mb-2 bg-white border border-gray-200 rounded-lg p-3 shadow-lg\">\r\n                    <input\r\n                      type=\"range\"\r\n                      min=\"0\"\r\n                      max=\"100\"\r\n                      value={volume}\r\n                      onChange={(e) => handleVolumeChange(parseInt(e.target.value))}\r\n                      className=\"w-24 h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer\"\r\n                    />\r\n                    <div className=\"text-center text-sm text-gray-600 mt-1\">{volume}%</div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              {/* Video Button */}\r\n              <button\r\n                onClick={toggleCamera}\r\n                className={`p-3 rounded-full transition-colors ${\r\n                  !isCameraOn ? 'bg-red-500 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\r\n                }`}\r\n              >\r\n                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  {!isCameraOn ? (\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728L5.636 5.636m12.728 12.728L18.364 5.636M5.636 18.364l12.728-12.728\" />\r\n                  ) : (\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z\" />\r\n                  )}\r\n                </svg>\r\n              </button>\r\n\r\n              {/* Screen Share Button */}\r\n              <button\r\n                onClick={handleToggleScreenShare}\r\n                className={`p-3 rounded-full transition-colors ${\r\n                  isScreenSharing ? 'bg-blue-500 text-white' : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\r\n                }`}\r\n              >\r\n                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.75 17L9 20l-1 1h8l-1-1-.75-3M3 13h18M5 17h14a2 2 0 002-2V5a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z\" />\r\n                </svg>\r\n              </button>\r\n\r\n              {/* Reconnect Button */}\r\n              <button\r\n                onClick={reconnect}\r\n                className=\"p-3 rounded-full bg-yellow-500 text-white hover:bg-yellow-600 transition-colors\"\r\n              >\r\n                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\r\n                </svg>\r\n              </button>\r\n\r\n              {/* Leave Button */}\r\n              <button\r\n                onClick={handleLeaveRoom}\r\n                className=\"p-3 rounded-full bg-red-500 text-white hover:bg-red-600 transition-colors\"\r\n              >\r\n                <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Chat Sidebar */}\r\n        <div className=\"w-80 bg-white border-l border-gray-200 flex flex-col\">\r\n          {/* Participants List */}\r\n          <div className=\"px-4 py-3 border-b border-gray-200\">\r\n            <h3 className=\"font-semibold text-gray-900 mb-2\">Participants</h3>\r\n            <div className=\"space-y-1\">\r\n              {participants.map(p => (\r\n                <div key={p.id} className=\"flex items-center space-x-2 text-sm\">\r\n                  <div className=\"w-2 h-2 bg-green-500 rounded-full\"></div>\r\n                  <span className=\"text-gray-700\">{p.name}</span>\r\n                </div>\r\n              ))}\r\n                </div>\r\n              </div>\r\n\r\n          {/* Chat */}\r\n          <div className=\"flex-1 overflow-hidden\">\r\n            <ChatBox\r\n              messages={messages}\r\n              sendMessage={sendMessage}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RoomPage; ","import { useState, useCallback } from 'react';\n\ninterface Room {\n  id: string;\n  name: string;\n  description: string;\n  createdBy: string;\n  participants: Array<{ id: string; name: string; peerId: string }>;\n  maxParticipants: number;\n  isPrivate: boolean;\n}\n\nexport function useConversationRoomViewModel() {\n  const [rooms, setRooms] = useState<Room[]>([]);\n  const [currentRoom, setCurrentRoom] = useState<Room | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [participants, setParticipants] = useState<Array<{ id: string; name: string; peerId: string }>>([]);\n\n  const getAvailableRooms = useCallback(async () => {\n    setLoading(true);\n    // Placeholder implementation\n    setRooms([]);\n    setLoading(false);\n  }, []);\n\n  const joinRoom = useCallback(async (roomId: string, password?: string) => {\n    // Placeholder implementation\n    console.log('Joining room:', roomId, password);\n  }, []);\n\n  const createRoom = useCallback(async (name: string, description: string, isPrivate: boolean, password?: string) => {\n    // Placeholder implementation\n    console.log('Creating room:', { name, description, isPrivate, password });\n  }, []);\n\n  const getRoomDetails = useCallback(async (roomId: string) => {\n    // Placeholder implementation\n    console.log('Getting room details:', roomId);\n  }, []);\n\n  const leaveRoom = useCallback(async (roomId: string) => {\n    // Placeholder implementation\n    console.log('Leaving room:', roomId);\n  }, []);\n\n  return {\n    rooms,\n    currentRoom,\n    loading,\n    participants,\n    getAvailableRooms,\n    joinRoom,\n    createRoom,\n    getRoomDetails,\n    leaveRoom,\n  };\n} "],"names":["window","__NEXT_P","push","__webpack_require__","view_ChatBox","messages","sendMessage","param","inputText","setInputText","useState","jsx_runtime","jsxs","div","className","jsx","map","span","message","username","text","id","form","onSubmit","e","preventDefault","trim","input","type","value","onChange","target","placeholder","_roomId_","router","useRouter","user","useAuthContext","roomId","query","currentRoom","getRoomDetails","leaveRoom","loading","participants","useConversationRoomViewModel","volume","setVolume","showVolumeSlider","setShowVolumeSlider","isScreenSharing","setIsScreenSharing","useEffect","peerIds","self","concat","remote","undefined","localStream","remoteStreams","isMicOn","isCameraOn","toggleMic","toggleCamera","reconnect","status","error","muteStates","videoStates","toggleRemoteMute","toggleRemoteVideo","isInitialized","useWebRTC","participantPeerIds","setLocalStream","setRemoteStreams","setIsMicOn","setIsCameraOn","setStatus","setError","setMuteStates","setVideoStates","setIsInitialized","socketRef","useRef","peerConnectionsRef","localStreamRef","webrtcConfig","iceServers","urls","initializeMediaStream","useCallback","stream","console","log","navigator","mediaDevices","getUserMedia","audio","echoCancellation","noiseSuppression","autoGainControl","sampleRate","video","width","ideal","height","frameRate","audioTracks","getAudioTracks","length","videoTracks","getVideoTracks","audioTrack","label","videoTrack","current","err","Error","createPeerConnection","peerId","peerConnection","RTCPeerConnection","getTracks","forEach","track","addTrack","kind","ontrack","event","streams","prev","onicecandidate","candidate","emit","targetUserId","onconnectionstatechange","connectionState","initializeWebRTC","socket","io","process","env","NEXT_PUBLIC_BACKEND_URL","auth","token","localStorage","getItem","reservationId","on","data","userId","setRemoteDescription","offer","answer","createAnswer","setLocalDescription","addIceCandidate","enabled","Object","values","pc","close","disconnect","setTimeout","stop","p","useChatViewModel","setMessages","newMessage","Date","now","toString","timestamp","remoteVideoRefs","entries","ref","srcObject","handleLeaveRoom","handleVolumeChange","newVolume","h1","button","onClick","header","name","autoPlay","muted","playsInline","el","svg","fill","stroke","viewBox","path","strokeLinecap","strokeLinejoin","strokeWidth","d","clipRule","filter","min","max","parseInt","h3","ChatBox","rooms","setRooms","setCurrentRoom","setLoading","setParticipants","getAvailableRooms","joinRoom","password","createRoom","description","isPrivate"],"sourceRoot":""}