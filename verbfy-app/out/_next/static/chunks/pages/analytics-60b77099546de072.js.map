{"version":3,"file":"static/chunks/pages/analytics-60b77099546de072.js","mappings":"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","sources":["webpack://_N_E/?ceb5","webpack://_N_E/./src/components/analytics/AnalyticsDashboardBuilder.tsx","webpack://_N_E/./src/components/analytics/AnalyticsInsights.tsx","webpack://_N_E/./pages/analytics/index.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/analytics\",\n      function () {\n        return require(\"private-next-pages/analytics/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/analytics\"])\n      });\n    }\n  ","import React, { useState, useEffect } from 'react';\nimport { AnalyticsDashboard, DashboardWidget, WidgetConfig, AnalyticsFilters } from '@/types/analytics';\nimport api from '@/lib/api';\n\ninterface AnalyticsDashboardBuilderProps {\n  dashboard?: AnalyticsDashboard;\n  onSave: (dashboard: AnalyticsDashboard) => void;\n  onCancel: () => void;\n}\n\nexport default function AnalyticsDashboardBuilder({ dashboard, onSave, onCancel }: AnalyticsDashboardBuilderProps) {\n  const [formData, setFormData] = useState<Partial<AnalyticsDashboard>>({\n    name: '',\n    description: '',\n    type: 'custom',\n    layout: {\n      columns: 12,\n      rows: 8,\n      widgets: []\n    },\n    filters: {\n      dateRange: {\n        start: new Date(Date.now() - 30 * 24 * 60 * 60 * 1000), // 30 days ago\n        end: new Date()\n      },\n      timeGranularity: 'day',\n      dimensions: {},\n      metrics: [],\n      segments: [],\n      customFilters: {}\n    },\n    refreshInterval: 300, // 5 minutes\n    isPublic: false\n  });\n\n  const [availableWidgets, setAvailableWidgets] = useState<DashboardWidget[]>([]);\n  const [selectedWidget, setSelectedWidget] = useState<DashboardWidget | null>(null);\n  const [isEditingWidget, setIsEditingWidget] = useState(false);\n\n  useEffect(() => {\n    if (dashboard) {\n      setFormData(dashboard);\n    }\n    loadAvailableWidgets();\n  }, [dashboard]);\n\n  const loadAvailableWidgets = async () => {\n    try {\n      const response = await api.get('/api/analytics/widgets');\n      setAvailableWidgets(response.data.data);\n    } catch (err: any) {\n      console.error('Failed to load available widgets:', err);\n    }\n  };\n\n  const handleInputChange = (field: string, value: any) => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n\n  const handleFilterChange = (field: string, value: any) => {\n    setFormData(prev => ({\n      ...prev,\n      filters: {\n        ...prev.filters!,\n        [field]: value\n      }\n    }));\n  };\n\n  const addWidget = (widgetType: string) => {\n    const newWidget: DashboardWidget = {\n      id: `widget_${Date.now()}`,\n      type: widgetType as any,\n      title: `New ${widgetType} Widget`,\n      position: {\n        x: 0,\n        y: 0,\n        width: 6,\n        height: 4\n      },\n      config: {\n        chartType: widgetType === 'chart' ? 'line' : undefined,\n        metrics: [],\n        dimensions: [],\n        aggregations: [],\n        timeRange: '7d',\n        limit: 10,\n        sortBy: '',\n        sortOrder: 'desc',\n        colors: ['#3B82F6', '#10B981', '#F59E0B', '#EF4444'],\n        thresholds: {\n          warning: 80,\n          critical: 95\n        }\n      },\n      dataSource: 'default',\n      refreshInterval: 300\n    };\n\n    setFormData(prev => ({\n      ...prev,\n      layout: {\n        ...prev.layout!,\n        widgets: [...prev.layout!.widgets, newWidget]\n      }\n    }));\n  };\n\n  const updateWidget = (widgetId: string, updates: Partial<DashboardWidget>) => {\n    setFormData(prev => ({\n      ...prev,\n      layout: {\n        ...prev.layout!,\n        widgets: prev.layout!.widgets.map(widget =>\n          widget.id === widgetId ? { ...widget, ...updates } : widget\n        )\n      }\n    }));\n  };\n\n  const removeWidget = (widgetId: string) => {\n    setFormData(prev => ({\n      ...prev,\n      layout: {\n        ...prev.layout!,\n        widgets: prev.layout!.widgets.filter(widget => widget.id !== widgetId)\n      }\n    }));\n  };\n\n  const handleSave = async () => {\n    try {\n      const dashboardData = {\n        ...formData,\n        organizationId: 'current', // This should come from context\n        createdBy: 'current-user' // This should come from context\n      } as AnalyticsDashboard;\n\n      onSave(dashboardData);\n    } catch (err: any) {\n      console.error('Failed to save dashboard:', err);\n    }\n  };\n\n  const renderWidgetEditor = (widget: DashboardWidget) => {\n    return (\n      <div className=\"bg-white rounded-lg shadow p-6\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Edit Widget: {widget.title}</h3>\n        \n        <div className=\"space-y-4\">\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Widget Title</label>\n            <input\n              type=\"text\"\n              value={widget.title}\n              onChange={(e) => updateWidget(widget.id, { title: e.target.value })}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            />\n          </div>\n\n          {widget.type === 'chart' && (\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Chart Type</label>\n              <select\n                value={widget.config.chartType}\n                onChange={(e) => updateWidget(widget.id, { \n                  config: { ...widget.config, chartType: e.target.value as any }\n                })}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              >\n                <option value=\"line\">Line Chart</option>\n                <option value=\"bar\">Bar Chart</option>\n                <option value=\"pie\">Pie Chart</option>\n                <option value=\"doughnut\">Doughnut Chart</option>\n                <option value=\"area\">Area Chart</option>\n                <option value=\"scatter\">Scatter Plot</option>\n              </select>\n            </div>\n          )}\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Metrics</label>\n            <select\n              multiple\n              value={widget.config.metrics || []}\n              onChange={(e) => {\n                const selected = Array.from(e.target.selectedOptions, option => option.value);\n                updateWidget(widget.id, { \n                  config: { ...widget.config, metrics: selected }\n                });\n              }}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            >\n              <option value=\"users\">Total Users</option>\n              <option value=\"sessions\">Sessions</option>\n              <option value=\"pageviews\">Page Views</option>\n              <option value=\"revenue\">Revenue</option>\n              <option value=\"conversion_rate\">Conversion Rate</option>\n              <option value=\"bounce_rate\">Bounce Rate</option>\n            </select>\n          </div>\n\n          <div>\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">Dimensions</label>\n            <select\n              multiple\n              value={widget.config.dimensions || []}\n              onChange={(e) => {\n                const selected = Array.from(e.target.selectedOptions, option => option.value);\n                updateWidget(widget.id, { \n                  config: { ...widget.config, dimensions: selected }\n                });\n              }}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            >\n              <option value=\"date\">Date</option>\n              <option value=\"country\">Country</option>\n              <option value=\"device\">Device</option>\n              <option value=\"browser\">Browser</option>\n              <option value=\"source\">Traffic Source</option>\n            </select>\n          </div>\n\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Width</label>\n              <input\n                type=\"number\"\n                value={widget.position.width}\n                onChange={(e) => updateWidget(widget.id, { \n                  position: { ...widget.position, width: parseInt(e.target.value) }\n                })}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                min=\"1\"\n                max=\"12\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">Height</label>\n              <input\n                type=\"number\"\n                value={widget.position.height}\n                onChange={(e) => updateWidget(widget.id, { \n                  position: { ...widget.position, height: parseInt(e.target.value) }\n                })}\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                min=\"1\"\n                max=\"8\"\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"flex justify-end space-x-3 mt-6\">\n          <button\n            onClick={() => setIsEditingWidget(false)}\n            className=\"px-4 py-2 text-gray-700 bg-gray-100 rounded-md hover:bg-gray-200\"\n          >\n            Cancel\n          </button>\n          <button\n            onClick={() => setIsEditingWidget(false)}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\n          >\n            Save Widget\n          </button>\n        </div>\n      </div>\n    );\n  };\n\n  const renderWidgetPreview = (widget: DashboardWidget) => {\n    return (\n      <div\n        key={widget.id}\n        className=\"bg-white rounded-lg shadow p-4 border-2 border-dashed border-gray-300\"\n        style={{\n          gridColumn: `span ${widget.position.width}`,\n          gridRow: `span ${widget.position.height}`\n        }}\n      >\n        <div className=\"flex items-center justify-between mb-3\">\n          <h4 className=\"text-sm font-medium text-gray-900\">{widget.title}</h4>\n          <div className=\"flex space-x-2\">\n            <button\n              onClick={() => {\n                setSelectedWidget(widget);\n                setIsEditingWidget(true);\n              }}\n              className=\"text-blue-600 hover:text-blue-700 text-sm\"\n            >\n              Edit\n            </button>\n            <button\n              onClick={() => removeWidget(widget.id)}\n              className=\"text-red-600 hover:text-red-700 text-sm\"\n            >\n              Remove\n            </button>\n          </div>\n        </div>\n        \n        <div className=\"bg-gray-50 rounded p-3 text-center\">\n          <div className=\"text-gray-500 text-sm\">\n            {widget.type === 'chart' && (\n              <div>\n                <svg className=\"w-8 h-8 mx-auto mb-2 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                </svg>\n                <p>{widget.config.chartType} Chart</p>\n              </div>\n            )}\n            {widget.type === 'metric' && (\n              <div>\n                <svg className=\"w-8 h-8 mx-auto mb-2 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 7h6m0 10v-3m-3 3h.01M9 17h.01M9 14h.01M12 14h.01M15 11h.01M12 11h.01M9 11h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2z\" />\n                </svg>\n                <p>Metric Display</p>\n              </div>\n            )}\n            {widget.type === 'table' && (\n              <div>\n                <svg className=\"w-8 h-8 mx-auto mb-2 text-gray-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 10h18M3 14h18m-9-4v8m-7 0h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z\" />\n                </svg>\n                <p>Data Table</p>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h2 className=\"text-2xl font-bold text-gray-900\">\n            {dashboard ? 'Edit Dashboard' : 'Create Dashboard'}\n          </h2>\n          <p className=\"text-gray-600\">Build custom analytics dashboards</p>\n        </div>\n        <div className=\"flex space-x-3\">\n          <button\n            onClick={onCancel}\n            className=\"px-4 py-2 text-gray-700 bg-gray-100 rounded-md hover:bg-gray-200\"\n          >\n            Cancel\n          </button>\n          <button\n            onClick={handleSave}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\n          >\n            Save Dashboard\n          </button>\n        </div>\n      </div>\n\n      {/* Dashboard Configuration */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        {/* Configuration Panel */}\n        <div className=\"lg:col-span-1 space-y-6\">\n          {/* Basic Settings */}\n          <div className=\"bg-white rounded-lg shadow p-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Dashboard Settings</h3>\n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Dashboard Name</label>\n                <input\n                  type=\"text\"\n                  value={formData.name}\n                  onChange={(e) => handleInputChange('name', e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  placeholder=\"Enter dashboard name\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Description</label>\n                <textarea\n                  value={formData.description}\n                  onChange={(e) => handleInputChange('description', e.target.value)}\n                  rows={3}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  placeholder=\"Enter dashboard description\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Dashboard Type</label>\n                <select\n                  value={formData.type}\n                  onChange={(e) => handleInputChange('type', e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                >\n                  <option value=\"system\">System Analytics</option>\n                  <option value=\"business\">Business Analytics</option>\n                  <option value=\"user\">User Analytics</option>\n                  <option value=\"content\">Content Analytics</option>\n                  <option value=\"custom\">Custom</option>\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Refresh Interval (seconds)</label>\n                <input\n                  type=\"number\"\n                  value={formData.refreshInterval}\n                  onChange={(e) => handleInputChange('refreshInterval', parseInt(e.target.value))}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  min=\"30\"\n                  max=\"3600\"\n                />\n              </div>\n\n              <div className=\"flex items-center\">\n                <input\n                  type=\"checkbox\"\n                  id=\"isPublic\"\n                  checked={formData.isPublic}\n                  onChange={(e) => handleInputChange('isPublic', e.target.checked)}\n                  className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                />\n                <label htmlFor=\"isPublic\" className=\"ml-2 text-sm text-gray-700\">\n                  Make dashboard public\n                </label>\n              </div>\n            </div>\n          </div>\n\n          {/* Filters */}\n          <div className=\"bg-white rounded-lg shadow p-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Global Filters</h3>\n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Time Granularity</label>\n                <select\n                  value={formData.filters?.timeGranularity}\n                  onChange={(e) => handleFilterChange('timeGranularity', e.target.value)}\n                  className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                >\n                  <option value=\"minute\">Minute</option>\n                  <option value=\"hour\">Hour</option>\n                  <option value=\"day\">Day</option>\n                  <option value=\"week\">Week</option>\n                  <option value=\"month\">Month</option>\n                  <option value=\"quarter\">Quarter</option>\n                  <option value=\"year\">Year</option>\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-2\">Date Range</label>\n                <div className=\"grid grid-cols-2 gap-2\">\n                  <input\n                    type=\"date\"\n                    value={formData.filters?.dateRange?.start?.toISOString().split('T')[0]}\n                    onChange={(e) => handleFilterChange('dateRange', {\n                      ...formData.filters?.dateRange,\n                      start: new Date(e.target.value)\n                    })}\n                    className=\"px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                  <input\n                    type=\"date\"\n                    value={formData.filters?.dateRange?.end?.toISOString().split('T')[0]}\n                    onChange={(e) => handleFilterChange('dateRange', {\n                      ...formData.filters?.dateRange,\n                      end: new Date(e.target.value)\n                    })}\n                    className=\"px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Widget Library */}\n          <div className=\"bg-white rounded-lg shadow p-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Add Widgets</h3>\n            <div className=\"space-y-3\">\n              <button\n                onClick={() => addWidget('chart')}\n                className=\"w-full px-4 py-2 text-left border border-gray-300 rounded-md hover:bg-gray-50\"\n              >\n                <div className=\"flex items-center\">\n                  <svg className=\"w-5 h-5 mr-3 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                  </svg>\n                  <div>\n                    <p className=\"font-medium text-gray-900\">Chart</p>\n                    <p className=\"text-sm text-gray-500\">Line, bar, pie, and other charts</p>\n                  </div>\n                </div>\n              </button>\n\n              <button\n                onClick={() => addWidget('metric')}\n                className=\"w-full px-4 py-2 text-left border border-gray-300 rounded-md hover:bg-gray-50\"\n              >\n                <div className=\"flex items-center\">\n                  <svg className=\"w-5 h-5 mr-3 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 7h6m0 10v-3m-3 3h.01M9 17h.01M9 14h.01M12 14h.01M15 11h.01M12 11h.01M9 11h.01M7 21h10a2 2 0 002-2V5a2 2 0 00-2-2H7a2 2 0 00-2 2v14a2 2 0 002 2z\" />\n                  </svg>\n                  <div>\n                    <p className=\"font-medium text-gray-900\">Metric</p>\n                    <p className=\"text-sm text-gray-500\">Single value display</p>\n                  </div>\n                </div>\n              </button>\n\n              <button\n                onClick={() => addWidget('table')}\n                className=\"w-full px-4 py-2 text-left border border-gray-300 rounded-md hover:bg-gray-50\"\n              >\n                <div className=\"flex items-center\">\n                  <svg className=\"w-5 h-5 mr-3 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 10h18M3 14h18m-9-4v8m-7 0h14a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z\" />\n                  </svg>\n                  <div>\n                    <p className=\"font-medium text-gray-900\">Table</p>\n                    <p className=\"text-sm text-gray-500\">Data table with sorting</p>\n                  </div>\n                </div>\n              </button>\n\n              <button\n                onClick={() => addWidget('heatmap')}\n                className=\"w-full px-4 py-2 text-left border border-gray-300 rounded-md hover:bg-gray-50\"\n              >\n                <div className=\"flex items-center\">\n                  <svg className=\"w-5 h-5 mr-3 text-orange-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z\" />\n                  </svg>\n                  <div>\n                    <p className=\"font-medium text-gray-900\">Heatmap</p>\n                    <p className=\"text-sm text-gray-500\">Color-coded data visualization</p>\n                  </div>\n                </div>\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* Dashboard Canvas */}\n        <div className=\"lg:col-span-2\">\n          {isEditingWidget && selectedWidget ? (\n            renderWidgetEditor(selectedWidget)\n          ) : (\n            <div className=\"bg-white rounded-lg shadow p-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Dashboard Layout</h3>\n              \n              {formData.layout?.widgets.length === 0 ? (\n                <div className=\"text-center py-12 border-2 border-dashed border-gray-300 rounded-lg\">\n                  <svg className=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                  </svg>\n                  <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No widgets added</h3>\n                  <p className=\"mt-1 text-sm text-gray-500\">\n                    Add widgets from the panel on the left to build your dashboard.\n                  </p>\n                </div>\n              ) : (\n                <div \n                  className=\"grid gap-4\"\n                  style={{\n                    gridTemplateColumns: `repeat(${formData.layout?.columns}, 1fr)`,\n                    gridTemplateRows: `repeat(${formData.layout?.rows}, 1fr)`\n                  }}\n                >\n                  {formData.layout?.widgets.map(renderWidgetPreview)}\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n} ","import React, { useState, useEffect } from 'react';\nimport { AnalyticsInsight } from '@/types/analytics';\nimport api from '@/lib/api';\n\ninterface AnalyticsInsightsProps {\n  organizationId?: string;\n}\n\nexport default function AnalyticsInsights({ organizationId }: AnalyticsInsightsProps) {\n  const [insights, setInsights] = useState<AnalyticsInsight[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [filter, setFilter] = useState<'all' | 'trend' | 'anomaly' | 'correlation' | 'forecast' | 'recommendation'>('all');\n  const [severity, setSeverity] = useState<'all' | 'low' | 'medium' | 'high' | 'critical'>('all');\n\n  useEffect(() => {\n    fetchInsights();\n  }, [organizationId, filter, severity]);\n\n  const fetchInsights = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await api.get('/api/analytics/insights', {\n        params: { organizationId, type: filter !== 'all' ? filter : undefined, severity: severity !== 'all' ? severity : undefined }\n      });\n      setInsights(response.data.data);\n    } catch (err: any) {\n      setError(err.response?.data?.message || 'Failed to fetch insights');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getInsightIcon = (type: string) => {\n    switch (type) {\n      case 'trend':\n        return (\n          <svg className=\"w-6 h-6 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\" />\n          </svg>\n        );\n      case 'anomaly':\n        return (\n          <svg className=\"w-6 h-6 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\" />\n          </svg>\n        );\n      case 'correlation':\n        return (\n          <svg className=\"w-6 h-6 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\" />\n          </svg>\n        );\n      case 'forecast':\n        return (\n          <svg className=\"w-6 h-6 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n          </svg>\n        );\n      case 'recommendation':\n        return (\n          <svg className=\"w-6 h-6 text-yellow-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\n          </svg>\n        );\n      default:\n        return (\n          <svg className=\"w-6 h-6 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n          </svg>\n        );\n    }\n  };\n\n  const getSeverityColor = (severity: string) => {\n    switch (severity) {\n      case 'critical':\n        return 'bg-red-100 text-red-800 border-red-200';\n      case 'high':\n        return 'bg-orange-100 text-orange-800 border-orange-200';\n      case 'medium':\n        return 'bg-yellow-100 text-yellow-800 border-yellow-200';\n      case 'low':\n        return 'bg-green-100 text-green-800 border-green-200';\n      default:\n        return 'bg-gray-100 text-gray-800 border-gray-200';\n    }\n  };\n\n  const getTypeColor = (type: string) => {\n    switch (type) {\n      case 'trend':\n        return 'bg-blue-100 text-blue-800';\n      case 'anomaly':\n        return 'bg-red-100 text-red-800';\n      case 'correlation':\n        return 'bg-purple-100 text-purple-800';\n      case 'forecast':\n        return 'bg-green-100 text-green-800';\n      case 'recommendation':\n        return 'bg-yellow-100 text-yellow-800';\n      default:\n        return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  const formatChange = (change: number, changeType: string) => {\n    const sign = change > 0 ? '+' : '';\n    const color = changeType === 'increase' ? 'text-green-600' : changeType === 'decrease' ? 'text-red-600' : 'text-gray-600';\n    return <span className={color}>{sign}{change.toFixed(1)}%</span>;\n  };\n\n  const formatConfidence = (confidence: number) => {\n    if (confidence >= 90) return 'Very High';\n    if (confidence >= 75) return 'High';\n    if (confidence >= 60) return 'Medium';\n    if (confidence >= 40) return 'Low';\n    return 'Very Low';\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"bg-red-50 border border-red-200 rounded-md p-4\">\n        <div className=\"flex\">\n          <div className=\"flex-shrink-0\">\n            <svg className=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\n            </svg>\n          </div>\n          <div className=\"ml-3\">\n            <h3 className=\"text-sm font-medium text-red-800\">Error</h3>\n            <div className=\"mt-2 text-sm text-red-700\">{error}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Header */}\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h2 className=\"text-2xl font-bold text-gray-900\">Analytics Insights</h2>\n          <p className=\"text-gray-600\">AI-powered insights and recommendations</p>\n        </div>\n        <div className=\"flex items-center space-x-4\">\n          <div className=\"flex items-center space-x-2\">\n            <label className=\"text-sm font-medium text-gray-700\">Type:</label>\n            <select\n              value={filter}\n              onChange={(e) => setFilter(e.target.value as any)}\n              className=\"px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            >\n              <option value=\"all\">All Types</option>\n              <option value=\"trend\">Trends</option>\n              <option value=\"anomaly\">Anomalies</option>\n              <option value=\"correlation\">Correlations</option>\n              <option value=\"forecast\">Forecasts</option>\n              <option value=\"recommendation\">Recommendations</option>\n            </select>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <label className=\"text-sm font-medium text-gray-700\">Severity:</label>\n            <select\n              value={severity}\n              onChange={(e) => setSeverity(e.target.value as any)}\n              className=\"px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n            >\n              <option value=\"all\">All Severities</option>\n              <option value=\"critical\">Critical</option>\n              <option value=\"high\">High</option>\n              <option value=\"medium\">Medium</option>\n              <option value=\"low\">Low</option>\n            </select>\n          </div>\n        </div>\n      </div>\n\n      {/* Insights Grid */}\n      {insights.length === 0 ? (\n        <div className=\"text-center py-12\">\n          <svg className=\"mx-auto h-12 w-12 text-gray-400\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\n          </svg>\n          <h3 className=\"mt-2 text-sm font-medium text-gray-900\">No insights available</h3>\n          <p className=\"mt-1 text-sm text-gray-500\">\n            {filter !== 'all' || severity !== 'all' \n              ? 'Try adjusting your filters to see more insights.'\n              : 'Insights will appear here as they are generated.'\n            }\n          </p>\n        </div>\n      ) : (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {insights.map((insight) => (\n            <div\n              key={insight._id}\n              className={`bg-white rounded-lg shadow border-l-4 ${getSeverityColor(insight.severity)}`}\n            >\n              <div className=\"p-6\">\n                {/* Header */}\n                <div className=\"flex items-start justify-between mb-4\">\n                  <div className=\"flex items-center space-x-3\">\n                    <div className=\"flex-shrink-0\">\n                      {getInsightIcon(insight.type)}\n                    </div>\n                    <div>\n                      <h3 className=\"text-lg font-semibold text-gray-900\">{insight.title}</h3>\n                      <div className=\"flex items-center space-x-2 mt-1\">\n                        <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getTypeColor(insight.type)}`}>\n                          {insight.type}\n                        </span>\n                        <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getSeverityColor(insight.severity)}`}>\n                          {insight.severity}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Description */}\n                <p className=\"text-sm text-gray-600 mb-4\">{insight.description}</p>\n\n                {/* Data */}\n                <div className=\"bg-gray-50 rounded-lg p-4 mb-4\">\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div>\n                      <p className=\"text-xs font-medium text-gray-500 uppercase tracking-wide\">Metric</p>\n                      <p className=\"text-sm font-semibold text-gray-900\">{insight.data.metric}</p>\n                    </div>\n                    <div>\n                      <p className=\"text-xs font-medium text-gray-500 uppercase tracking-wide\">Value</p>\n                      <p className=\"text-sm font-semibold text-gray-900\">{insight.data.value.toLocaleString()}</p>\n                    </div>\n                    <div>\n                      <p className=\"text-xs font-medium text-gray-500 uppercase tracking-wide\">Change</p>\n                      <p className=\"text-sm font-semibold\">\n                        {formatChange(insight.data.change, insight.data.changeType)}\n                      </p>\n                    </div>\n                    <div>\n                      <p className=\"text-xs font-medium text-gray-500 uppercase tracking-wide\">Timeframe</p>\n                      <p className=\"text-sm font-semibold text-gray-900\">{insight.data.timeframe}</p>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Confidence and Actions */}\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-xs font-medium text-gray-500 uppercase tracking-wide\">Confidence</p>\n                    <p className=\"text-sm font-semibold text-gray-900\">{formatConfidence(insight.confidence)}</p>\n                  </div>\n                  {insight.actionable && insight.actions.length > 0 && (\n                    <div className=\"text-right\">\n                      <p className=\"text-xs font-medium text-gray-500 uppercase tracking-wide\">Actions</p>\n                      <p className=\"text-sm text-blue-600\">{insight.actions.length} available</p>\n                    </div>\n                  )}\n                </div>\n\n                {/* Actions */}\n                {insight.actionable && insight.actions.length > 0 && (\n                  <div className=\"mt-4 pt-4 border-t border-gray-200\">\n                    <p className=\"text-xs font-medium text-gray-500 uppercase tracking-wide mb-2\">Recommended Actions</p>\n                    <div className=\"space-y-2\">\n                      {insight.actions.slice(0, 2).map((action, index) => (\n                        <div key={index} className=\"flex items-center space-x-2\">\n                          <svg className=\"w-4 h-4 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 5l7 7-7 7\" />\n                          </svg>\n                          <span className=\"text-sm text-gray-700\">{action}</span>\n                        </div>\n                      ))}\n                      {insight.actions.length > 2 && (\n                        <p className=\"text-sm text-gray-500\">+{insight.actions.length - 2} more actions</p>\n                      )}\n                    </div>\n                  </div>\n                )}\n\n                {/* Footer */}\n                <div className=\"mt-4 pt-4 border-t border-gray-200\">\n                  <div className=\"flex items-center justify-between text-xs text-gray-500\">\n                    <span>{new Date(insight.createdAt).toLocaleDateString()}</span>\n                    {insight.expiresAt && (\n                      <span>Expires {new Date(insight.expiresAt).toLocaleDateString()}</span>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n\n      {/* Summary Stats */}\n      {insights.length > 0 && (\n        <div className=\"bg-white rounded-lg shadow p-6\">\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Insights Summary</h3>\n          <div className=\"grid grid-cols-2 md:grid-cols-5 gap-4\">\n            <div className=\"text-center\">\n              <p className=\"text-2xl font-bold text-gray-900\">{insights.length}</p>\n              <p className=\"text-sm text-gray-500\">Total Insights</p>\n            </div>\n            <div className=\"text-center\">\n              <p className=\"text-2xl font-bold text-red-600\">\n                {insights.filter(i => i.severity === 'critical').length}\n              </p>\n              <p className=\"text-sm text-gray-500\">Critical</p>\n            </div>\n            <div className=\"text-center\">\n              <p className=\"text-2xl font-bold text-yellow-600\">\n                {insights.filter(i => i.severity === 'high').length}\n              </p>\n              <p className=\"text-sm text-gray-500\">High Priority</p>\n            </div>\n            <div className=\"text-center\">\n              <p className=\"text-2xl font-bold text-blue-600\">\n                {insights.filter(i => i.actionable).length}\n              </p>\n              <p className=\"text-sm text-gray-500\">Actionable</p>\n            </div>\n            <div className=\"text-center\">\n              <p className=\"text-2xl font-bold text-green-600\">\n                {insights.filter(i => i.type === 'recommendation').length}\n              </p>\n              <p className=\"text-sm text-gray-500\">Recommendations</p>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n} ","import React, { useState } from 'react';\nimport DashboardLayout from '@/components/layout/DashboardLayout';\nimport AnalyticsDashboardBuilder from '@/components/analytics/AnalyticsDashboardBuilder';\nimport AnalyticsInsights from '@/components/analytics/AnalyticsInsights';\nimport PerformanceDashboard from '@/components/performance/PerformanceDashboard';\nimport { AnalyticsDashboard } from '@/types/analytics';\n\ntype AnalyticsView = 'overview' | 'dashboard-builder' | 'insights' | 'performance';\n\nexport default function AnalyticsPage() {\n  const [currentView, setCurrentView] = useState<AnalyticsView>('overview');\n  const [selectedDashboard, setSelectedDashboard] = useState<AnalyticsDashboard | undefined>(undefined);\n\n  const handleSaveDashboard = async (dashboard: AnalyticsDashboard) => {\n    try {\n      // This would save the dashboard to the backend\n      console.log('Saving dashboard:', dashboard);\n      setCurrentView('overview');\n    } catch (error) {\n      console.error('Failed to save dashboard:', error);\n    }\n  };\n\n  const handleCancelDashboard = () => {\n    setCurrentView('overview');\n    setSelectedDashboard(undefined);\n  };\n\n  const renderView = () => {\n    switch (currentView) {\n      case 'dashboard-builder':\n        return (\n          <AnalyticsDashboardBuilder\n            dashboard={selectedDashboard}\n            onSave={handleSaveDashboard}\n            onCancel={handleCancelDashboard}\n          />\n        );\n      case 'insights':\n        return <AnalyticsInsights />;\n      case 'performance':\n        return <PerformanceDashboard />;\n      default:\n        return renderOverview();\n    }\n  };\n\n  const renderOverview = () => {\n    return (\n        <div className=\"space-y-6\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <h2 className=\"text-2xl font-bold text-gray-900\">Analytics Center</h2>\n            <p className=\"text-gray-600\">Comprehensive analytics and insights platform</p>\n          </div>\n        </div>\n\n        {/* Quick Stats */}\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n          <div className=\"bg-white rounded-lg shadow p-6\">\n            <div className=\"flex items-center\">\n              <div className=\"flex-shrink-0\">\n                <div className=\"w-8 h-8 bg-blue-100 rounded-md flex items-center justify-center\">\n                  <svg className=\"w-5 h-5 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                  </svg>\n                </div>\n              </div>\n              <div className=\"ml-4\">\n                <p className=\"text-sm font-medium text-gray-500\">Active Dashboards</p>\n                <p className=\"text-2xl font-semibold text-gray-900\">12</p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-white rounded-lg shadow p-6\">\n            <div className=\"flex items-center\">\n              <div className=\"flex-shrink-0\">\n                <div className=\"w-8 h-8 bg-green-100 rounded-md flex items-center justify-center\">\n                  <svg className=\"w-5 h-5 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\n                  </svg>\n                </div>\n              </div>\n              <div className=\"ml-4\">\n                <p className=\"text-sm font-medium text-gray-500\">New Insights</p>\n                <p className=\"text-2xl font-semibold text-gray-900\">8</p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-white rounded-lg shadow p-6\">\n            <div className=\"flex items-center\">\n              <div className=\"flex-shrink-0\">\n                <div className=\"w-8 h-8 bg-yellow-100 rounded-md flex items-center justify-center\">\n                  <svg className=\"w-5 h-5 text-yellow-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                  </svg>\n                </div>\n              </div>\n              <div className=\"ml-4\">\n                <p className=\"text-sm font-medium text-gray-500\">Performance Score</p>\n                <p className=\"text-2xl font-semibold text-gray-900\">94%</p>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-white rounded-lg shadow p-6\">\n            <div className=\"flex items-center\">\n              <div className=\"flex-shrink-0\">\n                <div className=\"w-8 h-8 bg-purple-100 rounded-md flex items-center justify-center\">\n                  <svg className=\"w-5 h-5 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\" />\n                  </svg>\n                </div>\n              </div>\n              <div className=\"ml-4\">\n                <p className=\"text-sm font-medium text-gray-500\">Data Points</p>\n                <p className=\"text-2xl font-semibold text-gray-900\">2.4M</p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Main Features */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n          {/* Dashboard Builder */}\n          <div className=\"bg-white rounded-lg shadow hover:shadow-lg transition-shadow\">\n            <div className=\"p-6\">\n              <div className=\"flex items-center mb-4\">\n                <div className=\"w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center\">\n                  <svg className=\"w-6 h-6 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                  </svg>\n                </div>\n                <h3 className=\"ml-3 text-lg font-semibold text-gray-900\">Dashboard Builder</h3>\n              </div>\n              <p className=\"text-gray-600 mb-4\">\n                Create custom analytics dashboards with drag-and-drop widgets, charts, and real-time data visualization.\n              </p>\n              <button\n                onClick={() => setCurrentView('dashboard-builder')}\n                className=\"w-full px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              >\n                Create Dashboard\n              </button>\n            </div>\n          </div>\n\n          {/* Analytics Insights */}\n          <div className=\"bg-white rounded-lg shadow hover:shadow-lg transition-shadow\">\n            <div className=\"p-6\">\n              <div className=\"flex items-center mb-4\">\n                <div className=\"w-10 h-10 bg-green-100 rounded-lg flex items-center justify-center\">\n                  <svg className=\"w-6 h-6 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z\" />\n                  </svg>\n                </div>\n                <h3 className=\"ml-3 text-lg font-semibold text-gray-900\">AI Insights</h3>\n              </div>\n              <p className=\"text-gray-600 mb-4\">\n                Discover AI-powered insights, trends, anomalies, and actionable recommendations from your data.\n              </p>\n              <button\n                onClick={() => setCurrentView('insights')}\n                className=\"w-full px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500\"\n              >\n                View Insights\n              </button>\n            </div>\n          </div>\n\n          {/* Performance Monitoring */}\n          <div className=\"bg-white rounded-lg shadow hover:shadow-lg transition-shadow\">\n            <div className=\"p-6\">\n              <div className=\"flex items-center mb-4\">\n                <div className=\"w-10 h-10 bg-yellow-100 rounded-lg flex items-center justify-center\">\n                  <svg className=\"w-6 h-6 text-yellow-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                  </svg>\n                </div>\n                <h3 className=\"ml-3 text-lg font-semibold text-gray-900\">Performance</h3>\n              </div>\n              <p className=\"text-gray-600 mb-4\">\n                Monitor system performance, track metrics, and receive real-time alerts for optimal operation.\n              </p>\n              <button\n                onClick={() => setCurrentView('performance')}\n                className=\"w-full px-4 py-2 bg-yellow-600 text-white rounded-md hover:bg-yellow-700 focus:outline-none focus:ring-2 focus:ring-yellow-500\"\n              >\n                Monitor Performance\n              </button>\n            </div>\n          </div>\n\n          {/* Reports */}\n          <div className=\"bg-white rounded-lg shadow hover:shadow-lg transition-shadow\">\n            <div className=\"p-6\">\n              <div className=\"flex items-center mb-4\">\n                <div className=\"w-10 h-10 bg-purple-100 rounded-lg flex items-center justify-center\">\n                  <svg className=\"w-6 h-6 text-purple-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n                  </svg>\n                </div>\n                <h3 className=\"ml-3 text-lg font-semibold text-gray-900\">Reports</h3>\n              </div>\n              <p className=\"text-gray-600 mb-4\">\n                Generate comprehensive reports, schedule automated exports, and share insights with stakeholders.\n              </p>\n              <button\n                onClick={() => {/* Navigate to reports */}}\n                className=\"w-full px-4 py-2 bg-purple-600 text-white rounded-md hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-purple-500\"\n              >\n                Generate Reports\n              </button>\n            </div>\n          </div>\n\n          {/* Data Sources */}\n          <div className=\"bg-white rounded-lg shadow hover:shadow-lg transition-shadow\">\n            <div className=\"p-6\">\n              <div className=\"flex items-center mb-4\">\n                <div className=\"w-10 h-10 bg-indigo-100 rounded-lg flex items-center justify-center\">\n                  <svg className=\"w-6 h-6 text-indigo-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 7v10c0 2.21 3.582 4 8 4s8-1.79 8-4V7M4 7c0 2.21 3.582 4 8 4s8-1.79 8-4M4 7c0-2.21 3.582-4 8-4s8 1.79 8 4\" />\n                  </svg>\n                </div>\n                <h3 className=\"ml-3 text-lg font-semibold text-gray-900\">Data Sources</h3>\n              </div>\n              <p className=\"text-gray-600 mb-4\">\n                Connect and manage data sources, configure data pipelines, and ensure data quality and consistency.\n              </p>\n              <button\n                onClick={() => {/* Navigate to data sources */}}\n                className=\"w-full px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500\"\n              >\n                Manage Sources\n              </button>\n            </div>\n          </div>\n\n          {/* Settings */}\n          <div className=\"bg-white rounded-lg shadow hover:shadow-lg transition-shadow\">\n            <div className=\"p-6\">\n              <div className=\"flex items-center mb-4\">\n                <div className=\"w-10 h-10 bg-gray-100 rounded-lg flex items-center justify-center\">\n                  <svg className=\"w-6 h-6 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\" />\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\" />\n                  </svg>\n                </div>\n                <h3 className=\"ml-3 text-lg font-semibold text-gray-900\">Settings</h3>\n              </div>\n              <p className=\"text-gray-600 mb-4\">\n                Configure analytics settings, manage permissions, set up alerts, and customize your analytics experience.\n              </p>\n              <button\n                onClick={() => {/* Navigate to settings */}}\n                className=\"w-full px-4 py-2 bg-gray-600 text-white rounded-md hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-500\"\n              >\n                Configure\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* Recent Activity */}\n        <div className=\"bg-white rounded-lg shadow\">\n          <div className=\"px-6 py-4 border-b border-gray-200\">\n            <h3 className=\"text-lg font-semibold text-gray-900\">Recent Activity</h3>\n          </div>\n          <div className=\"p-6\">\n            <div className=\"space-y-4\">\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"w-2 h-2 bg-blue-600 rounded-full\"></div>\n                <div className=\"flex-1\">\n                  <p className=\"text-sm text-gray-900\">New dashboard \"User Engagement\" created</p>\n                  <p className=\"text-xs text-gray-500\">2 hours ago</p>\n                </div>\n              </div>\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"w-2 h-2 bg-green-600 rounded-full\"></div>\n                <div className=\"flex-1\">\n                  <p className=\"text-sm text-gray-900\">AI insight: \"User retention increased by 15%\"</p>\n                  <p className=\"text-xs text-gray-500\">4 hours ago</p>\n                </div>\n              </div>\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"w-2 h-2 bg-yellow-600 rounded-full\"></div>\n                <div className=\"flex-1\">\n                  <p className=\"text-sm text-gray-900\">Performance alert: High CPU usage detected</p>\n                  <p className=\"text-xs text-gray-500\">6 hours ago</p>\n                </div>\n              </div>\n              <div className=\"flex items-center space-x-3\">\n                <div className=\"w-2 h-2 bg-purple-600 rounded-full\"></div>\n                <div className=\"flex-1\">\n                  <p className=\"text-sm text-gray-900\">Monthly report \"Business Analytics\" generated</p>\n                  <p className=\"text-xs text-gray-500\">1 day ago</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n          </div>\n        );\n  };\n\n  return (\n    <DashboardLayout allowedRoles={['admin']}>\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Navigation Breadcrumb */}\n        {currentView !== 'overview' && (\n          <div className=\"mb-6\">\n            <button\n              onClick={() => setCurrentView('overview')}\n              className=\"flex items-center text-gray-600 hover:text-gray-900\"\n            >\n              <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M15 19l-7-7 7-7\" />\n              </svg>\n              Back to Analytics Center\n            </button>\n          </div>\n        )}\n\n        {renderView()}\n      </div>\n    </DashboardLayout>\n  );\n} "],"names":["window","__NEXT_P","push","__webpack_require__","AnalyticsDashboardBuilder","param","formData","dashboard","onSave","onCancel","setFormData","useState","name","description","type","layout","columns","rows","widgets","filters","dateRange","start","Date","now","end","timeGranularity","dimensions","metrics","segments","customFilters","refreshInterval","isPublic","availableWidgets","setAvailableWidgets","selectedWidget","setSelectedWidget","isEditingWidget","setIsEditingWidget","useEffect","loadAvailableWidgets","response","api","get","data","err","console","error","handleInputChange","field","value","prev","handleFilterChange","addWidget","newWidget","id","concat","widgetType","title","position","x","y","width","height","config","chartType","undefined","aggregations","timeRange","limit","sortBy","sortOrder","colors","thresholds","warning","critical","dataSource","updateWidget","widgetId","updates","map","widget","removeWidget","filter","handleSave","dashboardData","organizationId","createdBy","jsx_runtime","jsxs","div","className","jsx","h2","p","button","onClick","h3","label","input","onChange","e","target","placeholder","textarea","select","option","parseInt","min","max","checked","htmlFor","toISOString","split","svg","fill","stroke","viewBox","path","strokeLinecap","strokeLinejoin","strokeWidth","d","multiple","selected","Array","from","selectedOptions","length","style","gridTemplateColumns","gridTemplateRows","gridColumn","gridRow","h4","AnalyticsInsights","insights","setInsights","loading","setLoading","setError","setFilter","severity","setSeverity","fetchInsights","params","message","getInsightIcon","getSeverityColor","getTypeColor","formatChange","change","changeType","span","toFixed","formatConfidence","confidence","fillRule","clipRule","insight","metric","toLocaleString","timeframe","actionable","actions","slice","action","index","createdAt","toLocaleDateString","expiresAt","_id","i","AnalyticsPage","currentView","setCurrentView","selectedDashboard","setSelectedDashboard","handleSaveDashboard","log","handleCancelDashboard","renderOverview","DashboardLayout","allowedRoles","renderView","PerformanceDashboard"],"sourceRoot":""}