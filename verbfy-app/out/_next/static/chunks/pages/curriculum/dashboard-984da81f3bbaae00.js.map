{"version":3,"file":"static/chunks/pages/curriculum/dashboard-984da81f3bbaae00.js","mappings":"sFACA,CAAAA,OAAAC,QAAA,CAAAD,OAAAC,QAAA,MAAAC,IAAA,EACA,wBACA,WACA,OAAeC,EAAQ,KACvB,EACA,gKCAO,IAAMC,EAAgC,KAC3C,IAAMC,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,IACT,CAAEC,KAAAA,CAAI,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,EAAAA,IACX,CAACC,EAAYC,EAAc,CAAGC,CAAAA,EAAAA,EAAAA,QAAAA,EAAwC,MACtE,CAACC,EAAWC,EAAa,CAAGF,CAAAA,EAAAA,EAAAA,QAAAA,EAAqC,MACjE,CAACG,EAASC,EAAW,CAAGJ,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IAEvCK,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,KACRC,GACF,EAAG,EAAE,EAEL,IAAMA,EAAsB,UAC1B,GAAI,CACFF,EAAW,IACX,GAAM,CAACG,EAAoBC,EAAkB,CAAG,MAAMC,QAAQC,GAAG,CAAC,CAChEC,EAAAA,EAAyBA,CAACC,aAAa,GACvCD,EAAAA,EAAyBA,CAACE,YAAY,GACvC,EACDd,EAAcQ,GACdL,EAAaM,EAAkBP,SAAS,CAC1C,CAAE,MAAOa,EAAO,CACdC,QAAQD,KAAK,CAAC,kCAAmCA,EACnD,QAAU,CACRV,EAAW,GACb,CACF,EAEMY,EAAgB,GASbC,CARQ,CACbC,GAAI,0BACJC,GAAI,gCACJC,GAAI,gCACJC,GAAI,8BACJC,GAAI,4BACJC,GAAI,+BACN,EACa,CAACC,EAA6B,EAAI,4BAG3CC,EAAe,GASZC,CARO,CACZC,QAAS,eACTC,QAAS,eACTC,QAAS,KACTC,SAAU,gBACVC,UAAW,eACXC,WAAY,cACd,EACY,CAACC,EAA4B,EAAI,sBAG/C,EAEI,GAAAC,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,yDACb,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,wBACb,GAAAH,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,gFACf,GAAAH,EAAAC,GAAA,EAACI,IAAAA,CAAEF,UAAU,yBAAgB,oCAMhCvC,EAuBH,GAAAoC,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,wCACb,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,mDAEb,GAAAH,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,kDACb,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,8CACb,GAAAH,EAAAI,IAAA,EAACF,MAAAA,WACC,GAAAF,EAAAC,GAAA,EAACK,KAAAA,CAAGH,UAAU,4CAAmC,0BACjD,GAAAH,EAAAI,IAAA,EAACC,IAAAA,CAAEF,UAAU,+BAAqB,QAC1BvC,EAAW2C,gBAAgB,CAAC,OAAK3C,EAAW4C,eAAe,OAGrE,GAAAR,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,wCACb,GAAAH,EAAAI,IAAA,EAACK,OAAAA,CAAKN,UAAW,8CAAyFO,MAAA,CAA3C5B,EAAclB,EAAW2C,gBAAgB,aAAK,YACjG3C,EAAW2C,gBAAgB,IAEvC,GAAAP,EAAAI,IAAA,EAACK,OAAAA,CAAKN,UAAW,8CAAwFO,MAAA,CAA1C5B,EAAclB,EAAW4C,eAAe,aAAK,WACjG5C,EAAW4C,eAAe,YAM3C,GAAAR,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,kDAEb,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,0BACb,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,mDACb,GAAAH,EAAAC,GAAA,EAACU,KAAAA,CAAGR,UAAU,oDAA2C,qBAExDpC,GACC,GAAAiC,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,sBAEb,GAAAH,EAAAI,IAAA,EAACF,MAAAA,WACC,GAAAF,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,mDACb,GAAAH,EAAAC,GAAA,EAACQ,OAAAA,CAAKN,UAAU,6CAAoC,qBACpD,GAAAH,EAAAI,IAAA,EAACK,OAAAA,CAAKN,UAAU,8CAAqCpC,EAAU6C,eAAe,CAACC,OAAO,CAAC,GAAG,UAE5F,GAAAb,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,+CACb,GAAAH,EAAAC,GAAA,EAACC,MAAAA,CACCC,UAAU,2DACVW,MAAO,CAAEC,MAAO,GAA6BL,MAAA,CAA1B3C,EAAU6C,eAAe,CAAC,IAAG,SAMtD,GAAAZ,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,kDACb,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,kDACb,GAAAH,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,4CAAoCpC,EAAUiD,gBAAgB,GAC7E,GAAAhB,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,iCAAwB,yBAEzC,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,mDACb,GAAAH,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,6CAAqCpC,EAAUkD,cAAc,GAC5E,GAAAjB,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,iCAAwB,uBAEzC,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,oDACb,GAAAH,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,8CAAsCpC,EAAUmD,YAAY,GAC3E,GAAAlB,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,iCAAwB,qBAEzC,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,oDACb,GAAAH,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,8CACZpC,EAAUoD,aAAa,CAAGpD,EAAUoD,aAAa,CAACC,KAAK,CAAG,MAE7D,GAAApB,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,iCAAwB,yBAK3C,GAAAH,EAAAI,IAAA,EAACF,MAAAA,WACC,GAAAF,EAAAC,GAAA,EAACoB,KAAAA,CAAGlB,UAAU,kDAAyC,mBACvD,GAAAH,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,iDACZmB,OAAOC,OAAO,CAACxD,EAAUyD,aAAa,EAAEC,GAAG,CAAC,OAAC,CAAC1B,EAAO2B,EAAS,CAAAC,QAC7D,GAAA3B,EAAAI,IAAA,EAACF,MAAAA,CAAgBC,UAAU,8DACzB,GAAAH,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,wBAAgBZ,EAAaQ,KAC5C,GAAAC,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,gDAAwCJ,IACvD,GAAAC,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,4CAAmCuB,EAAS,SAHnD3B,gBAatB,GAAAC,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,8CACb,GAAAH,EAAAC,GAAA,EAACU,KAAAA,CAAGR,UAAU,oDAA2C,kBACxDvC,EAAWgE,cAAc,CAAChE,EAAW8D,QAAQ,CAACR,YAAY,CAAG,EAAE,EAC9D,GAAAlB,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,sBACb,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,8CACb,GAAAH,EAAAI,IAAA,EAACiB,KAAAA,CAAGlB,UAAU,8CAAoC,SACzCvC,EAAW8D,QAAQ,CAACR,YAAY,CAAC,KAAGtD,EAAWgE,cAAc,CAAChE,EAAW8D,QAAQ,CAACR,YAAY,CAAG,EAAE,CAACE,KAAK,IAElH,GAAApB,EAAAI,IAAA,EAACK,OAAAA,CAAKN,UAAU,kCACbvC,EAAWgE,cAAc,CAAChE,EAAW8D,QAAQ,CAACR,YAAY,CAAG,EAAE,CAACW,iBAAiB,CAAC,cAGvF,GAAA7B,EAAAC,GAAA,EAACI,IAAAA,CAAEF,UAAU,yBACVvC,EAAWgE,cAAc,CAAChE,EAAW8D,QAAQ,CAACR,YAAY,CAAG,EAAE,CAACY,WAAW,GAI9E,GAAA9B,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,sBACb,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,sDACb,GAAAH,EAAAI,IAAA,EAACK,OAAAA,WAAK,YAAU7C,EAAWgE,cAAc,CAAChE,EAAW8D,QAAQ,CAACR,YAAY,CAAG,EAAE,CAACa,OAAO,CAACC,MAAM,CAACC,GAAKA,EAAEC,WAAW,EAAEC,MAAM,CAAC,MAAIvE,EAAWgE,cAAc,CAAChE,EAAW8D,QAAQ,CAACR,YAAY,CAAG,EAAE,CAACa,OAAO,CAACI,MAAM,IAC5M,GAAAnC,EAAAI,IAAA,EAACK,OAAAA,WAAK,UAAQ7C,EAAWgE,cAAc,CAAChE,EAAW8D,QAAQ,CAACR,YAAY,CAAG,EAAE,CAACkB,KAAK,CAACJ,MAAM,CAACK,GAAKA,EAAEH,WAAW,EAAEC,MAAM,CAAC,MAAIvE,EAAWgE,cAAc,CAAChE,EAAW8D,QAAQ,CAACR,YAAY,CAAG,EAAE,CAACkB,KAAK,CAACD,MAAM,OAExM,GAAAnC,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,+CACb,GAAAH,EAAAC,GAAA,EAACC,MAAAA,CACCC,UAAU,4DACVW,MAAO,CACLC,MAAO,GAAmYL,MAAA,CAAhY,CAAE9C,EAAWgE,cAAc,CAAChE,EAAW8D,QAAQ,CAACR,YAAY,CAAG,EAAE,CAACa,OAAO,CAACC,MAAM,CAACC,GAAKA,EAAEC,WAAW,EAAEC,MAAM,CAAGvE,EAAWgE,cAAc,CAAChE,EAAW8D,QAAQ,CAACR,YAAY,CAAG,EAAE,CAACkB,KAAK,CAACJ,MAAM,CAACK,GAAKA,EAAEH,WAAW,EAAEC,MAAM,EAAKvE,CAAAA,EAAWgE,cAAc,CAAChE,EAAW8D,QAAQ,CAACR,YAAY,CAAG,EAAE,CAACa,OAAO,CAACI,MAAM,CAAGvE,EAAWgE,cAAc,CAAChE,EAAW8D,QAAQ,CAACR,YAAY,CAAG,EAAE,CAACkB,KAAK,CAACD,MAAM,EAAK,IAAI,IAC5Y,kBAUd,GAAAnC,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,sBAEb,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,8CACb,GAAAH,EAAAC,GAAA,EAACoB,KAAAA,CAAGlB,UAAU,oDAA2C,kBACzD,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,sBACb,GAAAH,EAAAC,GAAA,EAACqC,SAAAA,CACCC,QAAS,IAAM/E,EAAOH,IAAI,CAAC,2BAC3B8C,UAAU,8GACX,sBAGD,GAAAH,EAAAC,GAAA,EAACqC,SAAAA,CACCC,QAAS,IAAM/E,EAAOH,IAAI,CAAC,eAC3B8C,UAAU,gHACX,uBAGD,GAAAH,EAAAC,GAAA,EAACqC,SAAAA,CACCC,QAAS,IAAM/E,EAAOH,IAAI,CAAC,wBAC3B8C,UAAU,kHACX,wBAOL,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,8CACb,GAAAH,EAAAC,GAAA,EAACoB,KAAAA,CAAGlB,UAAU,oDAA2C,wBACzD,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,sBACZvC,EAAW4E,YAAY,CAACC,KAAK,CAAC,EAAG,GAAGhB,GAAG,CAAC,CAACiB,EAAaC,IACrD,GAAA3C,EAAAI,IAAA,EAACF,MAAAA,CAAgBC,UAAU,kEACzB,GAAAH,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,oBAAYuC,EAAYE,IAAI,GAC3C,GAAA5C,EAAAI,IAAA,EAACF,MAAAA,WACC,GAAAF,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,qCAA6BuC,EAAYtB,KAAK,GAC7D,GAAApB,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,iCAAyBuC,EAAYZ,WAAW,QAJzDa,IAQX/E,IAAAA,EAAW4E,YAAY,CAACL,MAAM,EAC7B,GAAAnC,EAAAC,GAAA,EAACI,IAAAA,CAAEF,UAAU,iCAAwB,8CAM3C,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,8CACb,GAAAH,EAAAC,GAAA,EAACoB,KAAAA,CAAGlB,UAAU,oDAA2C,mBACzD,GAAAH,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,qBACZvC,EAAWiF,aAAa,CAACpB,GAAG,CAAC,CAACqB,EAAMH,IACnC,GAAA3C,EAAAI,IAAA,EAACF,MAAAA,CAAgBC,UAAU,kDACzB,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,mDACb,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,wCACb,GAAAH,EAAAC,GAAA,EAACQ,OAAAA,CAAKN,UAAU,mBAAWZ,EAAauD,EAAK/C,KAAK,IAClD,GAAAC,EAAAC,GAAA,EAACQ,OAAAA,CAAKN,UAAU,kCAA0B2C,EAAK/C,KAAK,MAEtD,GAAAC,EAAAC,GAAA,EAACQ,OAAAA,CAAKN,UAAW,8CAIhBO,MAAA,CAHCoC,SAAAA,EAAKC,QAAQ,CAAc,0BAC3BD,WAAAA,EAAKC,QAAQ,CAAgB,gCAC7B,wCAECD,EAAKC,QAAQ,MAGlB,GAAA/C,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,kCAAwB,SAC9B2C,EAAKE,YAAY,CAAC,MAAIF,EAAKG,WAAW,MAfvCN,oBAhMtB,GAAA3C,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,wCACb,GAAAH,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,kDACb,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,0DACb,GAAAH,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,yBAAgB,iBAC/B,GAAAH,EAAAC,GAAA,EAACK,KAAAA,CAAGH,UAAU,iDAAwC,wCACtD,GAAAH,EAAAC,GAAA,EAACI,IAAAA,CAAEF,UAAU,8BAAqB,2FAGlC,GAAAH,EAAAC,GAAA,EAACqC,SAAAA,CACCC,QAAS,IAAM/E,EAAOH,IAAI,CAAC,sBAC3B8C,UAAU,uGACX,yBA+Mb,ECzRe,SAAS+C,IACtB,GAAM,CAAExF,KAAAA,CAAI,CAAEO,QAAAA,CAAO,CAAE,CAAGN,CAAAA,EAAAA,EAAAA,EAAAA,IACpBH,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,UAQf,CANAU,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,KACHF,GAAYP,GACfF,EAAOH,IAAI,CAAC,SAEhB,EAAG,CAACK,EAAMO,EAAST,EAAO,EAEtBS,GAEA,GAAA+B,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,oEACb,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,wBACb,GAAAH,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,gFACf,GAAAH,EAAAC,GAAA,EAACI,IAAAA,CAAEF,UAAU,yBAAgB,oBAMhCzC,EAKH,GAAAsC,EAAAI,IAAA,EAAAJ,EAAAmD,QAAA,YACE,GAAAnD,EAAAI,IAAA,EAACgD,IAAIA,WACH,GAAApD,EAAAC,GAAA,EAACmB,QAAAA,UAAM,2BACP,GAAApB,EAAAC,GAAA,EAACoD,OAAAA,CAAKC,KAAK,cAAcC,QAAQ,6DAGnC,GAAAvD,EAAAC,GAAA,EAAC1C,EAAmBA,CAAAA,MAVf,IAaX","sources":["webpack://_N_E/?66b0","webpack://_N_E/./src/features/personalizedCurriculum/view/CurriculumDashboard.tsx","webpack://_N_E/./pages/curriculum/dashboard.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/curriculum/dashboard\",\n      function () {\n        return require(\"private-next-pages/curriculum/dashboard.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/curriculum/dashboard\"])\n      });\n    }\n  ","import React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { PersonalizedCurriculum, CurriculumAnalytics } from '@/types/personalizedCurriculum';\nimport { personalizedCurriculumAPI } from '@/lib/api';\nimport { useAuthContext } from '@/context/AuthContext';\n\nexport const CurriculumDashboard: React.FC = () => {\n  const router = useRouter();\n  const { user } = useAuthContext();\n  const [curriculum, setCurriculum] = useState<PersonalizedCurriculum | null>(null);\n  const [analytics, setAnalytics] = useState<CurriculumAnalytics | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchCurriculumData();\n  }, []);\n\n  const fetchCurriculumData = async () => {\n    try {\n      setLoading(true);\n      const [curriculumResponse, analyticsResponse] = await Promise.all([\n        personalizedCurriculumAPI.getCurriculum(),\n        personalizedCurriculumAPI.getAnalytics()\n      ]);\n      setCurriculum(curriculumResponse);\n      setAnalytics(analyticsResponse.analytics);\n    } catch (error) {\n      console.error('Error fetching curriculum data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getLevelColor = (level: string) => {\n    const colors = {\n      A1: 'bg-red-100 text-red-800',\n      A2: 'bg-orange-100 text-orange-800',\n      B1: 'bg-yellow-100 text-yellow-800',\n      B2: 'bg-green-100 text-green-800',\n      C1: 'bg-blue-100 text-blue-800',\n      C2: 'bg-purple-100 text-purple-800'\n    };\n    return colors[level as keyof typeof colors] || 'bg-gray-100 text-gray-800';\n  };\n\n  const getSkillIcon = (skill: string) => {\n    const icons = {\n      grammar: '📝',\n      reading: '📖',\n      writing: '✍️',\n      speaking: '🗣️',\n      listening: '👂',\n      vocabulary: '📚'\n    };\n    return icons[skill as keyof typeof icons] || '📊';\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">Loading your curriculum...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!curriculum) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 py-8\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"bg-white rounded-lg shadow-md p-8 text-center\">\n            <div className=\"text-6xl mb-4\">🎯</div>\n            <h1 className=\"text-2xl font-bold text-gray-900 mb-4\">Create Your Personalized Curriculum</h1>\n            <p className=\"text-gray-600 mb-6\">\n              Get a customized learning path designed specifically for your goals and current level.\n            </p>\n            <button\n              onClick={() => router.push('/curriculum/create')}\n              className=\"bg-blue-600 hover:bg-blue-700 text-white font-medium px-6 py-3 rounded-md transition-colors\"\n            >\n              Start Creating\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 py-8\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        {/* Header */}\n        <div className=\"bg-white rounded-lg shadow-md p-6 mb-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-2xl font-bold text-gray-900\">Your Learning Journey</h1>\n              <p className=\"text-gray-600 mt-1\">\n                From {curriculum.currentCEFRLevel} to {curriculum.targetCEFRLevel}\n              </p>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <span className={`px-3 py-1 text-sm font-medium rounded-full ${getLevelColor(curriculum.currentCEFRLevel)}`}>\n                Current: {curriculum.currentCEFRLevel}\n              </span>\n              <span className={`px-3 py-1 text-sm font-medium rounded-full ${getLevelColor(curriculum.targetCEFRLevel)}`}>\n                Target: {curriculum.targetCEFRLevel}\n              </span>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          {/* Progress Overview */}\n          <div className=\"lg:col-span-2\">\n            <div className=\"bg-white rounded-lg shadow-md p-6 mb-6\">\n              <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">Overall Progress</h2>\n              \n              {analytics && (\n                <div className=\"space-y-6\">\n                  {/* Progress Bar */}\n                  <div>\n                    <div className=\"flex items-center justify-between mb-2\">\n                      <span className=\"text-sm font-medium text-gray-700\">Overall Progress</span>\n                      <span className=\"text-sm font-medium text-gray-700\">{analytics.overallProgress.toFixed(1)}%</span>\n                    </div>\n                    <div className=\"w-full bg-gray-200 rounded-full h-3\">\n                      <div \n                        className=\"bg-blue-600 h-3 rounded-full transition-all duration-300\"\n                        style={{ width: `${analytics.overallProgress}%` }}\n                      ></div>\n                    </div>\n                  </div>\n\n                  {/* Stats Grid */}\n                  <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                    <div className=\"text-center p-4 bg-blue-50 rounded-lg\">\n                      <div className=\"text-2xl font-bold text-blue-600\">{analytics.lessonsCompleted}</div>\n                      <div className=\"text-sm text-gray-600\">Lessons Completed</div>\n                    </div>\n                    <div className=\"text-center p-4 bg-green-50 rounded-lg\">\n                      <div className=\"text-2xl font-bold text-green-600\">{analytics.testsCompleted}</div>\n                      <div className=\"text-sm text-gray-600\">Tests Completed</div>\n                    </div>\n                    <div className=\"text-center p-4 bg-purple-50 rounded-lg\">\n                      <div className=\"text-2xl font-bold text-purple-600\">{analytics.currentPhase}</div>\n                      <div className=\"text-sm text-gray-600\">Current Phase</div>\n                    </div>\n                    <div className=\"text-center p-4 bg-orange-50 rounded-lg\">\n                      <div className=\"text-2xl font-bold text-orange-600\">\n                        {analytics.currentStreak ? analytics.currentStreak.title : '0'}\n                      </div>\n                      <div className=\"text-sm text-gray-600\">Current Streak</div>\n                    </div>\n                  </div>\n\n                  {/* Skill Progress */}\n                  <div>\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-3\">Skill Progress</h3>\n                    <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4\">\n                      {Object.entries(analytics.skillProgress).map(([skill, progress]) => (\n                        <div key={skill} className=\"text-center p-3 border border-gray-200 rounded-lg\">\n                          <div className=\"text-xl mb-1\">{getSkillIcon(skill)}</div>\n                          <div className=\"font-medium text-gray-900 capitalize\">{skill}</div>\n                          <div className=\"text-sm font-bold text-blue-600\">{progress}%</div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n\n            {/* Current Phase */}\n            <div className=\"bg-white rounded-lg shadow-md p-6\">\n              <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">Current Phase</h2>\n              {curriculum.curriculumPath[curriculum.progress.currentPhase - 1] && (\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <h3 className=\"text-lg font-medium text-gray-900\">\n                      Phase {curriculum.progress.currentPhase}: {curriculum.curriculumPath[curriculum.progress.currentPhase - 1].title}\n                    </h3>\n                    <span className=\"text-sm text-gray-500\">\n                      {curriculum.curriculumPath[curriculum.progress.currentPhase - 1].estimatedDuration} days\n                    </span>\n                  </div>\n                  <p className=\"text-gray-600\">\n                    {curriculum.curriculumPath[curriculum.progress.currentPhase - 1].description}\n                  </p>\n                  \n                  {/* Phase Progress */}\n                  <div className=\"space-y-3\">\n                    <div className=\"flex items-center justify-between text-sm\">\n                      <span>Lessons: {curriculum.curriculumPath[curriculum.progress.currentPhase - 1].lessons.filter(l => l.isCompleted).length} / {curriculum.curriculumPath[curriculum.progress.currentPhase - 1].lessons.length}</span>\n                      <span>Tests: {curriculum.curriculumPath[curriculum.progress.currentPhase - 1].tests.filter(t => t.isCompleted).length} / {curriculum.curriculumPath[curriculum.progress.currentPhase - 1].tests.length}</span>\n                    </div>\n                    <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                      <div \n                        className=\"bg-green-600 h-2 rounded-full transition-all duration-300\"\n                        style={{ \n                          width: `${((curriculum.curriculumPath[curriculum.progress.currentPhase - 1].lessons.filter(l => l.isCompleted).length + curriculum.curriculumPath[curriculum.progress.currentPhase - 1].tests.filter(t => t.isCompleted).length) / (curriculum.curriculumPath[curriculum.progress.currentPhase - 1].lessons.length + curriculum.curriculumPath[curriculum.progress.currentPhase - 1].tests.length)) * 100}%` \n                        }}\n                      ></div>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Sidebar */}\n          <div className=\"space-y-6\">\n            {/* Quick Actions */}\n            <div className=\"bg-white rounded-lg shadow-md p-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Quick Actions</h3>\n              <div className=\"space-y-3\">\n                <button\n                  onClick={() => router.push('/curriculum/next-lesson')}\n                  className=\"w-full bg-blue-600 hover:bg-blue-700 text-white font-medium px-4 py-2 rounded-md transition-colors\"\n                >\n                  Continue Learning\n                </button>\n                <button\n                  onClick={() => router.push('/cefr-tests')}\n                  className=\"w-full bg-green-600 hover:bg-green-700 text-white font-medium px-4 py-2 rounded-md transition-colors\"\n                >\n                  Take Progress Test\n                </button>\n                <button\n                  onClick={() => router.push('/curriculum/schedule')}\n                  className=\"w-full bg-purple-600 hover:bg-purple-700 text-white font-medium px-4 py-2 rounded-md transition-colors\"\n                >\n                  View Schedule\n                </button>\n              </div>\n            </div>\n\n            {/* Recent Achievements */}\n            <div className=\"bg-white rounded-lg shadow-md p-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Recent Achievements</h3>\n              <div className=\"space-y-3\">\n                {curriculum.achievements.slice(0, 3).map((achievement, index) => (\n                  <div key={index} className=\"flex items-center space-x-3 p-3 bg-gray-50 rounded-lg\">\n                    <div className=\"text-2xl\">{achievement.icon}</div>\n                    <div>\n                      <div className=\"font-medium text-gray-900\">{achievement.title}</div>\n                      <div className=\"text-sm text-gray-600\">{achievement.description}</div>\n                    </div>\n                  </div>\n                ))}\n                {curriculum.achievements.length === 0 && (\n                  <p className=\"text-gray-500 text-sm\">No achievements yet. Keep learning!</p>\n                )}\n              </div>\n            </div>\n\n            {/* Learning Goals */}\n            <div className=\"bg-white rounded-lg shadow-md p-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Learning Goals</h3>\n              <div className=\"space-y-3\">\n                {curriculum.learningGoals.map((goal, index) => (\n                  <div key={index} className=\"p-3 border border-gray-200 rounded-lg\">\n                    <div className=\"flex items-center justify-between mb-2\">\n                      <div className=\"flex items-center space-x-2\">\n                        <span className=\"text-lg\">{getSkillIcon(goal.skill)}</span>\n                        <span className=\"font-medium capitalize\">{goal.skill}</span>\n                      </div>\n                      <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n                        goal.priority === 'high' ? 'bg-red-100 text-red-800' :\n                        goal.priority === 'medium' ? 'bg-yellow-100 text-yellow-800' :\n                        'bg-green-100 text-green-800'\n                      }`}>\n                        {goal.priority}\n                      </span>\n                    </div>\n                    <div className=\"text-sm text-gray-600\">\n                      Level {goal.currentLevel} → {goal.targetLevel}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}; ","import React from 'react';\nimport Head from 'next/head';\nimport { CurriculumDashboard } from '../../src/features/personalizedCurriculum/view/CurriculumDashboard';\nimport { useAuthContext } from '@/context/AuthContext';\nimport { useRouter } from 'next/router';\nimport { useEffect } from 'react';\n\nexport default function CurriculumDashboardPage() {\n  const { user, loading } = useAuthContext();\n  const router = useRouter();\n\n  useEffect(() => {\n    if (!loading && !user) {\n      router.push('/login');\n    }\n  }, [user, loading, router]);\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">Loading...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!user) {\n    return null;\n  }\n\n  return (\n    <>\n      <Head>\n        <title>My Curriculum - Verbfy</title>\n        <meta name=\"description\" content=\"Track your personalized learning journey and progress\" />\n      </Head>\n\n      <CurriculumDashboard />\n    </>\n  );\n} "],"names":["window","__NEXT_P","push","__webpack_require__","CurriculumDashboard","router","useRouter","user","useAuthContext","curriculum","setCurriculum","useState","analytics","setAnalytics","loading","setLoading","useEffect","fetchCurriculumData","curriculumResponse","analyticsResponse","Promise","all","personalizedCurriculumAPI","getCurriculum","getAnalytics","error","console","getLevelColor","colors","A1","A2","B1","B2","C1","C2","level","getSkillIcon","icons","grammar","reading","writing","speaking","listening","vocabulary","skill","jsx_runtime","jsx","div","className","jsxs","p","h1","currentCEFRLevel","targetCEFRLevel","span","concat","h2","overallProgress","toFixed","style","width","lessonsCompleted","testsCompleted","currentPhase","currentStreak","title","h3","Object","entries","skillProgress","map","progress","param","curriculumPath","estimatedDuration","description","lessons","filter","l","isCompleted","length","tests","t","button","onClick","achievements","slice","achievement","index","icon","learningGoals","goal","priority","currentLevel","targetLevel","CurriculumDashboardPage","Fragment","Head","meta","name","content"],"sourceRoot":""}