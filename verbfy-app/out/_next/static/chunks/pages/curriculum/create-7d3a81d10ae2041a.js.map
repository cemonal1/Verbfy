{"version":3,"file":"static/chunks/pages/curriculum/create-7d3a81d10ae2041a.js","mappings":"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","sources":["webpack://_N_E/?d91f","webpack://_N_E/./src/features/personalizedCurriculum/view/CurriculumCreationTool.tsx","webpack://_N_E/./pages/curriculum/create.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/curriculum/create\",\n      function () {\n        return require(\"private-next-pages/curriculum/create.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/curriculum/create\"])\n      });\n    }\n  ","import React, { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { CreateCurriculumRequest } from '@/types/personalizedCurriculum';\nimport { personalizedCurriculumAPI } from '@/lib/api';\nimport { useAuthContext } from '@/context/AuthContext';\n\nexport const CurriculumCreationTool: React.FC = () => {\n  const router = useRouter();\n  const { user } = useAuthContext();\n  const [currentStep, setCurrentStep] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [formData, setFormData] = useState<CreateCurriculumRequest>({\n    currentCEFRLevel: 'A1',\n    targetCEFRLevel: 'A2',\n    learningGoals: []\n  });\n\n  const cefrLevels = [\n    { value: 'A1', label: 'A1 - Beginner', description: 'Can understand and use familiar everyday expressions' },\n    { value: 'A2', label: 'A2 - Elementary', description: 'Can communicate in simple and routine tasks' },\n    { value: 'B1', label: 'B1 - Intermediate', description: 'Can deal with most situations while traveling' },\n    { value: 'B2', label: 'B2 - Upper Intermediate', description: 'Can interact with fluency and spontaneity' },\n    { value: 'C1', label: 'C1 - Advanced', description: 'Can express ideas fluently and spontaneously' },\n    { value: 'C2', label: 'C2 - Proficient', description: 'Can understand virtually everything heard or read' }\n  ];\n\n  const skills = [\n    { value: 'grammar', label: 'Grammar', icon: '📝', description: 'Sentence structure and language rules' },\n    { value: 'reading', label: 'Reading', icon: '📖', description: 'Comprehension and interpretation' },\n    { value: 'writing', label: 'Writing', icon: '✍️', description: 'Composition and expression' },\n    { value: 'speaking', label: 'Speaking', icon: '🗣️', description: 'Oral communication and pronunciation' },\n    { value: 'listening', label: 'Listening', icon: '👂', description: 'Audio comprehension and understanding' },\n    { value: 'vocabulary', label: 'Vocabulary', icon: '📚', description: 'Word knowledge and usage' }\n  ];\n\n  const priorities = [\n    { value: 'low', label: 'Low Priority', color: 'bg-green-100 text-green-800' },\n    { value: 'medium', label: 'Medium Priority', color: 'bg-yellow-100 text-yellow-800' },\n    { value: 'high', label: 'High Priority', color: 'bg-red-100 text-red-800' }\n  ];\n\n  const handleNext = () => {\n    setCurrentStep(currentStep + 1);\n  };\n\n  const handlePrevious = () => {\n    setCurrentStep(currentStep - 1);\n  };\n\n  const handleSkillToggle = (skill: string) => {\n    const existingGoal = formData.learningGoals.find(goal => goal.skill === skill);\n    if (existingGoal) {\n      setFormData(prev => ({\n        ...prev,\n        learningGoals: prev.learningGoals.filter(goal => goal.skill !== skill)\n      }));\n    } else {\n      setFormData(prev => ({\n        ...prev,\n        learningGoals: [...prev.learningGoals, {\n          skill: skill as any,\n          currentLevel: 1,\n          targetLevel: 3,\n          priority: 'medium'\n        }]\n      }));\n    }\n  };\n\n  const updateGoal = (skill: string, field: string, value: any) => {\n    setFormData(prev => ({\n      ...prev,\n      learningGoals: prev.learningGoals.map(goal => \n        goal.skill === skill ? { ...goal, [field]: value } : goal\n      )\n    }));\n  };\n\n  const handleSubmit = async () => {\n    try {\n      setLoading(true);\n      await personalizedCurriculumAPI.createCurriculum(formData);\n      router.push('/curriculum/dashboard');\n    } catch (error) {\n      console.error('Error creating curriculum:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getCurrentLevel = (skill: string) => {\n    const goal = formData.learningGoals.find(g => g.skill === skill);\n    return goal?.currentLevel || 1;\n  };\n\n  const getTargetLevel = (skill: string) => {\n    const goal = formData.learningGoals.find(g => g.skill === skill);\n    return goal?.targetLevel || 3;\n  };\n\n  const getPriority = (skill: string) => {\n    const goal = formData.learningGoals.find(g => g.skill === skill);\n    return goal?.priority || 'medium';\n  };\n\n  const isSkillSelected = (skill: string) => {\n    return formData.learningGoals.some(goal => goal.skill === skill);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 py-8\">\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n        {/* Progress Bar */}\n        <div className=\"bg-white rounded-lg shadow-md p-6 mb-6\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h1 className=\"text-2xl font-bold text-gray-900\">Create Your Curriculum</h1>\n            <span className=\"text-sm text-gray-500\">Step {currentStep} of 3</span>\n          </div>\n          <div className=\"w-full bg-gray-200 rounded-full h-2\">\n            <div \n              className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\n              style={{ width: `${(currentStep / 3) * 100}%` }}\n            ></div>\n          </div>\n        </div>\n\n        {/* Step 1: Current and Target Levels */}\n        {currentStep === 1 && (\n          <div className=\"bg-white rounded-lg shadow-md p-6\">\n            <h2 className=\"text-xl font-semibold text-gray-900 mb-6\">What's your current English level?</h2>\n            \n            <div className=\"space-y-6\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-3\">Current CEFR Level</label>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  {cefrLevels.map((level) => (\n                    <label\n                      key={level.value}\n                      className={`relative flex cursor-pointer rounded-lg border p-4 focus:outline-none ${\n                        formData.currentCEFRLevel === level.value\n                          ? 'border-blue-500 bg-blue-50'\n                          : 'border-gray-300 bg-white hover:bg-gray-50'\n                      }`}\n                    >\n                      <input\n                        type=\"radio\"\n                        name=\"currentLevel\"\n                        value={level.value}\n                        checked={formData.currentCEFRLevel === level.value}\n                        onChange={(e) => setFormData(prev => ({ ...prev, currentCEFRLevel: e.target.value as any }))}\n                        className=\"sr-only\"\n                      />\n                      <div className=\"flex w-full items-center justify-between\">\n                        <div className=\"flex items-center\">\n                          <div className=\"text-sm\">\n                            <p className=\"font-medium text-gray-900\">{level.label}</p>\n                            <p className=\"text-gray-500\">{level.description}</p>\n                          </div>\n                        </div>\n                        {formData.currentCEFRLevel === level.value && (\n                          <div className=\"shrink-0 text-blue-600\">\n                            <svg className=\"h-6 w-6\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                            </svg>\n                          </div>\n                        )}\n                      </div>\n                    </label>\n                  ))}\n                </div>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700 mb-3\">Target CEFR Level</label>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  {cefrLevels\n                    .filter(level => level.value !== formData.currentCEFRLevel)\n                    .map((level) => (\n                      <label\n                        key={level.value}\n                        className={`relative flex cursor-pointer rounded-lg border p-4 focus:outline-none ${\n                          formData.targetCEFRLevel === level.value\n                            ? 'border-blue-500 bg-blue-50'\n                            : 'border-gray-300 bg-white hover:bg-gray-50'\n                        }`}\n                      >\n                        <input\n                          type=\"radio\"\n                          name=\"targetLevel\"\n                          value={level.value}\n                          checked={formData.targetCEFRLevel === level.value}\n                          onChange={(e) => setFormData(prev => ({ ...prev, targetCEFRLevel: e.target.value as any }))}\n                          className=\"sr-only\"\n                        />\n                        <div className=\"flex w-full items-center justify-between\">\n                          <div className=\"flex items-center\">\n                            <div className=\"text-sm\">\n                              <p className=\"font-medium text-gray-900\">{level.label}</p>\n                              <p className=\"text-gray-500\">{level.description}</p>\n                            </div>\n                          </div>\n                          {formData.targetCEFRLevel === level.value && (\n                            <div className=\"shrink-0 text-blue-600\">\n                              <svg className=\"h-6 w-6\" fill=\"currentColor\" viewBox=\"0 0 24 24\">\n                                <path d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                              </svg>\n                            </div>\n                          )}\n                        </div>\n                      </label>\n                    ))}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"mt-8 flex justify-end\">\n              <button\n                onClick={handleNext}\n                disabled={!formData.currentCEFRLevel || !formData.targetCEFRLevel}\n                className=\"bg-blue-600 hover:bg-blue-700 text-white font-medium px-6 py-2 rounded-md disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                Next\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Step 2: Learning Goals */}\n        {currentStep === 2 && (\n          <div className=\"bg-white rounded-lg shadow-md p-6\">\n            <h2 className=\"text-xl font-semibold text-gray-900 mb-6\">What skills do you want to focus on?</h2>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-8\">\n              {skills.map((skill) => (\n                <div\n                  key={skill.value}\n                  className={`relative border rounded-lg p-4 cursor-pointer transition-all ${\n                    isSkillSelected(skill.value)\n                      ? 'border-blue-500 bg-blue-50'\n                      : 'border-gray-300 bg-white hover:bg-gray-50'\n                  }`}\n                  onClick={() => handleSkillToggle(skill.value)}\n                >\n                  <div className=\"flex items-center space-x-3\">\n                    <div className=\"text-2xl\">{skill.icon}</div>\n                    <div>\n                      <h3 className=\"font-medium text-gray-900\">{skill.label}</h3>\n                      <p className=\"text-sm text-gray-500\">{skill.description}</p>\n                    </div>\n                  </div>\n                  {isSkillSelected(skill.value) && (\n                    <div className=\"absolute top-2 right-2 text-blue-600\">\n                      <svg className=\"h-5 w-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                        <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                      </svg>\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n\n            {/* Selected Skills Configuration */}\n            {formData.learningGoals.length > 0 && (\n              <div className=\"space-y-4\">\n                <h3 className=\"text-lg font-medium text-gray-900\">Configure Your Goals</h3>\n                {formData.learningGoals.map((goal) => (\n                  <div key={goal.skill} className=\"border border-gray-200 rounded-lg p-4\">\n                    <div className=\"flex items-center space-x-3 mb-4\">\n                      <div className=\"text-xl\">{skills.find(s => s.value === goal.skill)?.icon}</div>\n                      <h4 className=\"font-medium text-gray-900 capitalize\">{goal.skill}</h4>\n                    </div>\n                    \n                    <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">Current Level</label>\n                        <select\n                          value={goal.currentLevel}\n                          onChange={(e) => updateGoal(goal.skill, 'currentLevel', parseInt(e.target.value))}\n                          className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                        >\n                          {[1, 2, 3, 4, 5].map(level => (\n                            <option key={level} value={level}>Level {level}</option>\n                          ))}\n                        </select>\n                      </div>\n                      \n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">Target Level</label>\n                        <select\n                          value={goal.targetLevel}\n                          onChange={(e) => updateGoal(goal.skill, 'targetLevel', parseInt(e.target.value))}\n                          className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                        >\n                          {[1, 2, 3, 4, 5].map(level => (\n                            <option key={level} value={level}>Level {level}</option>\n                          ))}\n                        </select>\n                      </div>\n                      \n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">Priority</label>\n                        <select\n                          value={goal.priority}\n                          onChange={(e) => updateGoal(goal.skill, 'priority', e.target.value)}\n                          className=\"w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                        >\n                          {priorities.map(priority => (\n                            <option key={priority.value} value={priority.value}>{priority.label}</option>\n                          ))}\n                        </select>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n\n            <div className=\"mt-8 flex justify-between\">\n              <button\n                onClick={handlePrevious}\n                className=\"bg-gray-600 hover:bg-gray-700 text-white font-medium px-6 py-2 rounded-md\"\n              >\n                Previous\n              </button>\n              <button\n                onClick={handleNext}\n                disabled={formData.learningGoals.length === 0}\n                className=\"bg-blue-600 hover:bg-blue-700 text-white font-medium px-6 py-2 rounded-md disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                Next\n              </button>\n            </div>\n          </div>\n        )}\n\n        {/* Step 3: Review and Create */}\n        {currentStep === 3 && (\n          <div className=\"bg-white rounded-lg shadow-md p-6\">\n            <h2 className=\"text-xl font-semibold text-gray-900 mb-6\">Review Your Curriculum</h2>\n            \n            <div className=\"space-y-6\">\n              {/* Level Summary */}\n              <div className=\"border border-gray-200 rounded-lg p-4\">\n                <h3 className=\"font-medium text-gray-900 mb-3\">Learning Journey</h3>\n                <div className=\"flex items-center space-x-4\">\n                  <span className=\"px-3 py-1 bg-blue-100 text-blue-800 text-sm font-medium rounded-full\">\n                    {formData.currentCEFRLevel}\n                  </span>\n                  <span className=\"text-gray-500\">→</span>\n                  <span className=\"px-3 py-1 bg-green-100 text-green-800 text-sm font-medium rounded-full\">\n                    {formData.targetCEFRLevel}\n                  </span>\n                </div>\n              </div>\n\n              {/* Goals Summary */}\n              <div className=\"border border-gray-200 rounded-lg p-4\">\n                <h3 className=\"font-medium text-gray-900 mb-3\">Learning Goals ({formData.learningGoals.length})</h3>\n                <div className=\"space-y-2\">\n                  {formData.learningGoals.map((goal) => (\n                    <div key={goal.skill} className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center space-x-2\">\n                        <span className=\"text-lg\">{skills.find(s => s.value === goal.skill)?.icon}</span>\n                        <span className=\"font-medium capitalize\">{goal.skill}</span>\n                      </div>\n                      <div className=\"flex items-center space-x-2 text-sm text-gray-600\">\n                        <span>Level {goal.currentLevel} → {goal.targetLevel}</span>\n                        <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n                          goal.priority === 'high' ? 'bg-red-100 text-red-800' :\n                          goal.priority === 'medium' ? 'bg-yellow-100 text-yellow-800' :\n                          'bg-green-100 text-green-800'\n                        }`}>\n                          {goal.priority}\n                        </span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              {/* Estimated Timeline */}\n              <div className=\"border border-gray-200 rounded-lg p-4\">\n                <h3 className=\"font-medium text-gray-900 mb-3\">Estimated Timeline</h3>\n                <p className=\"text-gray-600\">\n                  Based on your goals, we estimate it will take approximately{' '}\n                  <span className=\"font-medium text-blue-600\">\n                    {Math.max(30, formData.learningGoals.length * 20)} days\n                  </span>{' '}\n                  to reach your target level with regular study sessions.\n                </p>\n              </div>\n            </div>\n\n            <div className=\"mt-8 flex justify-between\">\n              <button\n                onClick={handlePrevious}\n                className=\"bg-gray-600 hover:bg-gray-700 text-white font-medium px-6 py-2 rounded-md\"\n              >\n                Previous\n              </button>\n              <button\n                onClick={handleSubmit}\n                disabled={loading}\n                className=\"bg-green-600 hover:bg-green-700 text-white font-medium px-6 py-2 rounded-md disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                {loading ? 'Creating...' : 'Create Curriculum'}\n              </button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}; ","import React from 'react';\nimport Head from 'next/head';\nimport { CurriculumCreationTool } from '../../src/features/personalizedCurriculum/view/CurriculumCreationTool';\nimport { useAuthContext } from '@/context/AuthContext';\nimport { useRouter } from 'next/router';\nimport { useEffect } from 'react';\n\nexport default function CurriculumCreationPage() {\n  const { user, loading } = useAuthContext();\n  const router = useRouter();\n\n  useEffect(() => {\n    if (!loading && !user) {\n      router.push('/login');\n    }\n  }, [user, loading, router]);\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">Loading...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!user) {\n    return null;\n  }\n\n  return (\n    <>\n      <Head>\n        <title>Create Curriculum - Verbfy</title>\n        <meta name=\"description\" content=\"Create your personalized English learning curriculum\" />\n      </Head>\n\n      <CurriculumCreationTool />\n    </>\n  );\n} "],"names":["window","__NEXT_P","push","__webpack_require__","CurriculumCreationTool","router","useRouter","user","useAuthContext","currentStep","setCurrentStep","useState","loading","setLoading","formData","setFormData","currentCEFRLevel","targetCEFRLevel","learningGoals","cefrLevels","value","label","description","skills","icon","priorities","color","handleNext","handlePrevious","handleSkillToggle","find","goal","skill","prev","filter","currentLevel","targetLevel","priority","updateGoal","field","map","handleSubmit","personalizedCurriculumAPI","createCurriculum","error","console","isSkillSelected","some","jsx_runtime","jsx","div","className","jsxs","h1","span","style","width","concat","h2","level","input","type","name","checked","onChange","e","target","p","svg","fill","viewBox","path","d","button","onClick","disabled","h3","fillRule","clipRule","length","s","h4","select","parseInt","option","Math","max","CurriculumCreationPage","useEffect","Fragment","Head","title","meta","content"],"sourceRoot":""}