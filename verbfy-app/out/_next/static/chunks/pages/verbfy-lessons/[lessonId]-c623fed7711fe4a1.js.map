{"version":3,"file":"static/chunks/pages/verbfy-lessons/[lessonId]-c623fed7711fe4a1.js","mappings":"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","sources":["webpack://_N_E/?da88","webpack://_N_E/./pages/verbfy-lessons/[lessonId].tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/verbfy-lessons/[lessonId]\",\n      function () {\n        return require(\"private-next-pages/verbfy-lessons/[lessonId].tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/verbfy-lessons/[lessonId]\"])\n      });\n    }\n  ","import React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\nimport DashboardLayout from '@/components/layout/DashboardLayout';\nimport { verbfyLessonsAPI } from '@/lib/api';\nimport { VerbfyLesson, LessonAttempt } from '@/types/verbfyLessons';\nimport { useAuthContext } from '@/context/AuthContext';\nimport { useToast } from '@/components/common/Toast';\n\nexport default function LessonTakingPage() {\n  const router = useRouter();\n  const { lessonId } = router.query;\n  const { user } = useAuthContext();\n  const { success, error } = useToast();\n  \n  const [lesson, setLesson] = useState<VerbfyLesson | null>(null);\n  const [attempt, setAttempt] = useState<LessonAttempt | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [answers, setAnswers] = useState<{ [key: string]: any }>({});\n  const [timeSpent, setTimeSpent] = useState(0);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [showConfirmSubmit, setShowConfirmSubmit] = useState(false);\n\n  useEffect(() => {\n    if (lessonId && typeof lessonId === 'string') {\n      loadLesson();\n    }\n  }, [lessonId]);\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setTimeSpent(prev => prev + 1);\n    }, 1000);\n\n    return () => clearInterval(timer);\n  }, []);\n\n  const loadLesson = async () => {\n    try {\n      setLoading(true);\n      const lessonResponse = await verbfyLessonsAPI.getLesson(lessonId as string);\n      setLesson(lessonResponse.lesson);\n      \n      // Start lesson attempt\n      const attemptResponse = await verbfyLessonsAPI.startLesson(lessonId as string);\n      setAttempt(attemptResponse.attempt);\n    } catch (err) {\n      error('Failed to load lesson');\n      console.error('Error loading lesson:', err);\n      router.push('/verbfy-lessons');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleAnswerChange = (exerciseIndex: string | number, answer: any) => {\n    setAnswers(prev => ({\n      ...prev,\n      [exerciseIndex]: answer\n    }));\n  };\n\n  const handleNextStep = () => {\n    if (currentStep < lesson!.content.exercises.length - 1) {\n      setCurrentStep(currentStep + 1);\n    }\n  };\n\n  const handlePreviousStep = () => {\n    if (currentStep > 0) {\n      setCurrentStep(currentStep - 1);\n    }\n  };\n\n  const handleSubmit = async () => {\n    if (!attempt) return;\n    \n    setIsSubmitting(true);\n    try {\n      const response = await verbfyLessonsAPI.submitLesson(attempt._id, {\n        answers,\n        timeSpent\n      });\n      \n      success('Lesson completed successfully!');\n      router.push(`/verbfy-lessons/${lessonId}/results`);\n    } catch (err) {\n      error('Failed to submit lesson');\n      console.error('Error submitting lesson:', err);\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n\n  const formatTime = (seconds: number) => {\n    const minutes = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${minutes}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  const getProgressPercentage = () => {\n    if (!lesson) return 0;\n    return ((currentStep + 1) / lesson.content.exercises.length) * 100;\n  };\n\n  const getLessonTypeIcon = (lessonType: string) => {\n    const icons = {\n      'VerbfyGrammar': '📝',\n      'VerbfyRead': '📖',\n      'VerbfyWrite': '✍️',\n      'VerbfySpeak': '🎤',\n      'VerbfyListen': '🎧',\n      'VerbfyVocab': '📚'\n    };\n    return icons[lessonType as keyof typeof icons] || '📚';\n  };\n\n  if (loading) {\n    return (\n      <DashboardLayout allowedRoles={['student', 'teacher', 'admin']}>\n        <div className=\"flex items-center justify-center h-64\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n        </div>\n      </DashboardLayout>\n    );\n  }\n\n  if (!lesson || !attempt) {\n    return (\n      <DashboardLayout allowedRoles={['student', 'teacher', 'admin']}>\n        <div className=\"text-center py-12\">\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">Lesson not found</h2>\n          <button\n            onClick={() => router.push('/verbfy-lessons')}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\"\n          >\n            Back to Lessons\n          </button>\n        </div>\n      </DashboardLayout>\n    );\n  }\n\n  const currentExercise = lesson.content.exercises[currentStep];\n\n  return (\n    <DashboardLayout allowedRoles={['student', 'teacher', 'admin']}>\n      <Head>\n        <title>{lesson.title} - Verbfy</title>\n      </Head>\n\n      <div className=\"min-h-screen bg-gray-50\">\n        {/* Header with Progress */}\n        <div className=\"bg-white border-b sticky top-0 z-10\">\n          <div className=\"max-w-7xl mx-auto px-6 py-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <h1 className=\"text-xl font-semibold text-gray-900\">{lesson.title}</h1>\n                <p className=\"text-sm text-gray-600\">\n                  {getLessonTypeIcon(lesson.lessonType)} {lesson.lessonType} • \n                  {lesson.cefrLevel} • {lesson.difficulty} • \n                  Step {currentStep + 1} of {lesson.content.exercises.length}\n                </p>\n              </div>\n              \n              <div className=\"flex items-center space-x-4\">\n                <div className=\"text-sm text-gray-600\">\n                  Time: {formatTime(timeSpent)}\n                </div>\n                \n                <button\n                  onClick={() => setShowConfirmSubmit(true)}\n                  className=\"px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 transition-colors\"\n                >\n                  Complete Lesson\n                </button>\n              </div>\n            </div>\n            \n            {/* Progress Bar */}\n            <div className=\"mt-4\">\n              <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                <div \n                  className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\n                  style={{ width: `${getProgressPercentage()}%` }}\n                ></div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"max-w-4xl mx-auto px-6 py-8\">\n          <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-8\">\n            {/* Main Content */}\n            <div className=\"lg:col-span-3\">\n              <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n                {/* Lesson Instructions */}\n                {currentStep === 0 && (\n                  <div className=\"mb-8 p-6 bg-blue-50 rounded-lg border border-blue-200\">\n                    <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">📋 Lesson Instructions</h3>\n                    <div className=\"prose prose-sm text-gray-700\">\n                      <p>{lesson.content.instructions}</p>\n                    </div>\n                    \n                    {lesson.learningObjectives.length > 0 && (\n                      <div className=\"mt-4\">\n                        <h4 className=\"font-medium text-gray-900 mb-2\">Learning Objectives:</h4>\n                        <ul className=\"space-y-1\">\n                          {lesson.learningObjectives.map((objective, index) => (\n                            <li key={index} className=\"text-sm text-gray-600 flex items-start\">\n                              <span className=\"mr-2\">•</span>\n                              {objective}\n                            </li>\n                          ))}\n                        </ul>\n                      </div>\n                    )}\n                  </div>\n                )}\n\n                {/* Materials */}\n                {lesson.content.materials.length > 0 && (\n                  <div className=\"mb-8\">\n                    <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">📚 Learning Materials</h3>\n                    <div className=\"space-y-4\">\n                      {lesson.content.materials.map((material, index) => (\n                        <div key={index} className=\"p-4 border rounded-lg\">\n                          <div className=\"flex items-center mb-2\">\n                            <span className=\"mr-2\">\n                              {material.type === 'text' && '📄'}\n                              {material.type === 'audio' && '🎵'}\n                              {material.type === 'video' && '🎥'}\n                              {material.type === 'image' && '🖼️'}\n                            </span>\n                            <span className=\"font-medium text-gray-900 capitalize\">{material.type}</span>\n                          </div>\n                          \n                          {material.type === 'text' && (\n                            <div className=\"prose prose-sm text-gray-700\">\n                              <p>{material.content}</p>\n                            </div>\n                          )}\n                          \n                          {material.type === 'audio' && (\n                            <audio controls className=\"w-full\">\n                              <source src={material.fileUrl} type=\"audio/mpeg\" />\n                              Your browser does not support the audio element.\n                            </audio>\n                          )}\n                          \n                          {material.type === 'video' && (\n                            <video controls className=\"w-full rounded\">\n                              <source src={material.fileUrl} type=\"video/mp4\" />\n                              Your browser does not support the video element.\n                            </video>\n                          )}\n                          \n                          {material.type === 'image' && (\n                            <img \n                              src={material.fileUrl || material.content} \n                              alt=\"Lesson material\"\n                              className=\"w-full rounded\"\n                            />\n                          )}\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                )}\n\n                {/* Current Exercise */}\n                {currentExercise && (\n                  <div className=\"mb-8\">\n                    <div className=\"flex items-center justify-between mb-4\">\n                      <h3 className=\"text-lg font-semibold text-gray-900\">\n                        Exercise {currentStep + 1} of {lesson.content.exercises.length}\n                      </h3>\n                      <span className=\"text-sm text-gray-500 capitalize\">{currentExercise.type}</span>\n                    </div>\n                    \n                    <div className=\"mb-6\">\n                      <p className=\"text-lg text-gray-900\">{currentExercise.question}</p>\n                    </div>\n\n                    {/* Answer Options */}\n                    <div className=\"space-y-3\">\n                      {currentExercise.type === 'multiple-choice' && currentExercise.options && (\n                        currentExercise.options.map((option, index) => (\n                          <label key={index} className=\"flex items-center p-4 border rounded-lg hover:bg-gray-50 cursor-pointer\">\n                            <input\n                              type=\"radio\"\n                              name={`exercise-${currentStep}`}\n                              value={option}\n                              checked={answers[currentStep] === option}\n                              onChange={(e) => handleAnswerChange(currentStep, e.target.value)}\n                              className=\"mr-3\"\n                            />\n                            <span className=\"text-gray-900\">{option}</span>\n                          </label>\n                        ))\n                      )}\n                      \n                      {currentExercise.type === 'fill-blank' && (\n                        <input\n                          type=\"text\"\n                          value={answers[currentStep] || ''}\n                          onChange={(e) => handleAnswerChange(currentStep, e.target.value)}\n                          placeholder=\"Enter your answer...\"\n                          className=\"w-full p-4 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                        />\n                      )}\n                      \n                      {currentExercise.type === 'essay' && (\n                        <textarea\n                          value={answers[currentStep] || ''}\n                          onChange={(e) => handleAnswerChange(currentStep, e.target.value)}\n                          placeholder=\"Type your answer here...\"\n                          className=\"w-full p-4 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                          rows={4}\n                        />\n                      )}\n                      \n                      {currentExercise.type === 'matching' && currentExercise.options && (\n                        <div className=\"space-y-3\">\n                          {currentExercise.options.map((option, index) => (\n                            <div key={index} className=\"flex items-center space-x-3\">\n                              <span className=\"text-sm font-medium text-gray-700 w-20\">\n                                {index + 1}.\n                              </span>\n                              <input\n                                type=\"text\"\n                                value={answers[`${currentStep}-${index}`] || ''}\n                                onChange={(e) => handleAnswerChange(`${currentStep}-${index}`, e.target.value)}\n                                placeholder=\"Match with...\"\n                                className=\"flex-1 p-2 border rounded focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                              />\n                            </div>\n                          ))}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                )}\n\n                {/* Navigation */}\n                <div className=\"flex items-center justify-between pt-6 border-t\">\n                  <button\n                    onClick={handlePreviousStep}\n                    disabled={currentStep === 0}\n                    className=\"px-4 py-2 text-gray-600 border border-gray-300 rounded-md hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n                  >\n                    Previous\n                  </button>\n                  \n                  <button\n                    onClick={handleNextStep}\n                    disabled={currentStep === lesson.content.exercises.length - 1}\n                    className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n                  >\n                    Next\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            {/* Sidebar - Exercise Navigator */}\n            <div className=\"lg:col-span-1\">\n              <div className=\"bg-white rounded-lg shadow-sm border p-6 sticky top-24\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Exercise Navigator</h3>\n                \n                <div className=\"space-y-2\">\n                  {lesson.content.exercises.map((exercise, index) => {\n                    const isAnswered = answers[index] !== undefined;\n                    const isCurrent = index === currentStep;\n                    \n                    return (\n                      <button\n                        key={index}\n                        onClick={() => setCurrentStep(index)}\n                        className={`w-full p-3 text-left rounded-lg border transition-colors ${\n                          isCurrent \n                            ? 'bg-blue-600 text-white border-blue-600' \n                            : isAnswered \n                              ? 'bg-green-100 text-green-800 border-green-300 hover:bg-green-200' \n                              : 'bg-gray-100 text-gray-600 border-gray-300 hover:bg-gray-200'\n                        }`}\n                      >\n                        <div className=\"flex items-center justify-between\">\n                          <span className=\"font-medium\">Exercise {index + 1}</span>\n                          <span className=\"text-xs capitalize\">{exercise.type}</span>\n                        </div>\n                        {isAnswered && !isCurrent && (\n                          <div className=\"text-xs mt-1\">✓ Answered</div>\n                        )}\n                      </button>\n                    );\n                  })}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Confirm Submit Modal */}\n        {showConfirmSubmit && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n            <div className=\"bg-white rounded-lg p-6 max-w-md w-full mx-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Complete Lesson?</h3>\n              <p className=\"text-gray-600 mb-6\">\n                You have completed {Object.keys(answers).length} out of {lesson.content.exercises.length} exercises. \n                Are you sure you want to complete this lesson?\n              </p>\n              <div className=\"flex space-x-3\">\n                <button\n                  onClick={() => setShowConfirmSubmit(false)}\n                  className=\"flex-1 px-4 py-2 text-gray-600 border border-gray-300 rounded-md hover:bg-gray-50 transition-colors\"\n                >\n                  Continue Lesson\n                </button>\n                <button\n                  onClick={handleSubmit}\n                  disabled={isSubmitting}\n                  className=\"flex-1 px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700 disabled:opacity-50 transition-colors\"\n                >\n                  {isSubmitting ? 'Submitting...' : 'Complete Lesson'}\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </DashboardLayout>\n  );\n} "],"names":["window","__NEXT_P","push","__webpack_require__","LessonTakingPage","router","useRouter","lessonId","query","user","useAuthContext","success","error","useToast","lesson","setLesson","useState","attempt","setAttempt","loading","setLoading","currentStep","setCurrentStep","answers","setAnswers","timeSpent","setTimeSpent","isSubmitting","setIsSubmitting","showConfirmSubmit","setShowConfirmSubmit","useEffect","loadLesson","timer","setInterval","prev","clearInterval","lessonResponse","verbfyLessonsAPI","getLesson","attemptResponse","startLesson","err","console","handleAnswerChange","exerciseIndex","answer","handleSubmit","submitLesson","_id","concat","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","DashboardLayout","allowedRoles","div","className","jsxs","h2","button","onClick","currentExercise","content","exercises","Head","title","h1","p","icons","lessonType","cefrLevel","difficulty","length","secs","Math","floor","seconds","toString","padStart","style","width","h3","instructions","learningObjectives","h4","ul","map","objective","index","li","span","materials","material","type","audio","controls","source","src","fileUrl","video","img","alt","question","options","option","label","input","name","value","checked","onChange","e","target","placeholder","textarea","rows","disabled","exercise","isAnswered","undefined","isCurrent","Object","keys"],"sourceRoot":""}