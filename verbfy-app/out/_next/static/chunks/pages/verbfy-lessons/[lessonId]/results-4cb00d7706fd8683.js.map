{"version":3,"file":"static/chunks/pages/verbfy-lessons/[lessonId]/results-4cb00d7706fd8683.js","mappings":"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","sources":["webpack://_N_E/?d6c6","webpack://_N_E/./pages/verbfy-lessons/[lessonId]/results.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/verbfy-lessons/[lessonId]/results\",\n      function () {\n        return require(\"private-next-pages/verbfy-lessons/[lessonId]/results.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/verbfy-lessons/[lessonId]/results\"])\n      });\n    }\n  ","import React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\nimport DashboardLayout from '@/components/layout/DashboardLayout';\nimport { verbfyLessonsAPI } from '@/lib/api';\nimport { LessonAttempt } from '@/types/verbfyLessons';\nimport { useAuthContext } from '@/context/AuthContext';\nimport { useToast } from '@/components/common/Toast';\n\nexport default function LessonResultsPage() {\n  const router = useRouter();\n  const { lessonId } = router.query;\n  const { user } = useAuthContext();\n  const { error } = useToast();\n  \n  const [attempt, setAttempt] = useState<LessonAttempt | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (lessonId && typeof lessonId === 'string') {\n      loadLessonResults();\n    }\n  }, [lessonId]);\n\n  const loadLessonResults = async () => {\n    try {\n      setLoading(true);\n      // This would need to be implemented in the API\n      // const response = await verbfyLessonsAPI.getLessonResults(lessonId);\n      // setAttempt(response.attempt);\n      \n      // For now, we'll simulate the data structure\n      setAttempt({\n        _id: 'attempt-id',\n        student: user?._id || '',\n        lessonId: lessonId as string,\n        resourceType: 'lesson',\n        lessonType: 'VerbfyGrammar',\n        cefrLevel: 'B1',\n        startedAt: new Date().toISOString(),\n        score: 88,\n        maxScore: 100,\n        timeSpent: 1200, // 20 minutes\n        isCompleted: true,\n        isPassed: true,\n        answers: [\n          { questionIndex: 0, studentAnswer: 'A', correctAnswer: 'A', isCorrect: true, points: 10 },\n          { questionIndex: 1, studentAnswer: 'The cat is sleeping', correctAnswer: 'The cat is sleeping', isCorrect: true, points: 15 },\n          { questionIndex: 2, studentAnswer: 'B', correctAnswer: 'C', isCorrect: false, points: 0 },\n          { questionIndex: 3, studentAnswer: 'quickly', correctAnswer: 'quickly', isCorrect: true, points: 10 }\n        ],\n        skills: {\n          grammar: 85,\n          reading: 90,\n          writing: 80,\n          speaking: 85,\n          listening: 88,\n          vocabulary: 92\n        },\n        feedback: {\n          overall: 'Excellent work! You demonstrated strong understanding of the lesson concepts.',\n          strengths: [\n            'Good grasp of grammar rules',\n            'Strong vocabulary usage',\n            'Clear understanding of the main concepts'\n          ],\n          areasForImprovement: [\n            'Pay attention to question 3 - review the context more carefully',\n            'Practice more with complex sentence structures'\n          ],\n          recommendations: [\n            'Try the next lesson in this series',\n            'Practice with similar exercises to reinforce learning',\n            'Review the grammar rules covered in this lesson'\n          ]\n        }\n      } as LessonAttempt);\n    } catch (err) {\n      error('Failed to load lesson results');\n      console.error('Error loading lesson results:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getScoreColor = (score: number) => {\n    if (score >= 90) return 'text-green-600';\n    if (score >= 80) return 'text-blue-600';\n    if (score >= 70) return 'text-yellow-600';\n    return 'text-red-600';\n  };\n\n  const getScoreBackground = (score: number) => {\n    if (score >= 90) return 'bg-green-100';\n    if (score >= 80) return 'bg-blue-100';\n    if (score >= 70) return 'bg-yellow-100';\n    return 'bg-red-100';\n  };\n\n  const formatTime = (seconds: number) => {\n    const minutes = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${minutes}m ${secs}s`;\n  };\n\n  if (loading) {\n    return (\n      <DashboardLayout allowedRoles={['student', 'teacher', 'admin']}>\n        <div className=\"flex items-center justify-center h-64\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n        </div>\n      </DashboardLayout>\n    );\n  }\n\n  if (!attempt) {\n    return (\n      <DashboardLayout allowedRoles={['student', 'teacher', 'admin']}>\n        <div className=\"text-center py-12\">\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">Results not found</h2>\n          <button\n            onClick={() => router.push('/verbfy-lessons')}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\"\n          >\n            Back to Lessons\n          </button>\n        </div>\n      </DashboardLayout>\n    );\n  }\n\n  return (\n    <DashboardLayout allowedRoles={['student', 'teacher', 'admin']}>\n      <Head>\n        <title>Lesson Results - Verbfy</title>\n      </Head>\n\n      <div className=\"p-6 max-w-6xl mx-auto\">\n        {/* Header */}\n        <div className=\"mb-8\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Lesson Results</h1>\n              <p className=\"text-gray-600\">\n                Your performance analysis and detailed feedback\n              </p>\n            </div>\n            <button\n              onClick={() => router.push('/verbfy-lessons')}\n              className=\"px-4 py-2 text-gray-600 border border-gray-300 rounded-md hover:bg-gray-50 transition-colors\"\n            >\n              Back to Lessons\n            </button>\n          </div>\n        </div>\n\n        {/* Overall Score Card */}\n        <div className=\"mb-8 p-6 bg-white rounded-lg shadow-sm border\">\n          <div className=\"text-center\">\n            <div className={`inline-flex items-center justify-center w-24 h-24 rounded-full ${getScoreBackground(attempt.score)} mb-4`}>\n              <span className={`text-3xl font-bold ${getScoreColor(attempt.score)}`}>\n                {attempt.score}%\n              </span>\n            </div>\n            <h2 className=\"text-2xl font-semibold text-gray-900 mb-2\">\n              {attempt.isPassed ? '🎉 Great Job!' : 'Keep Practicing!'}\n            </h2>\n            <p className=\"text-gray-600 mb-4\">\n              {attempt.isPassed \n                ? `You successfully completed the lesson with a score of ${attempt.score}%!` \n                : `You need ${attempt.maxScore - attempt.score} more points to pass.`\n              }\n            </p>\n            \n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 text-sm\">\n              <div className=\"p-3 bg-gray-50 rounded-lg\">\n                <div className=\"font-medium text-gray-900\">Time Spent</div>\n                <div className=\"text-gray-600\">{formatTime(attempt.timeSpent)}</div>\n              </div>\n              <div className=\"p-3 bg-gray-50 rounded-lg\">\n                <div className=\"font-medium text-gray-900\">CEFR Level</div>\n                <div className=\"text-gray-600\">{attempt.cefrLevel}</div>\n              </div>\n              <div className=\"p-3 bg-gray-50 rounded-lg\">\n                <div className=\"font-medium text-gray-900\">Status</div>\n                <div className={`font-medium ${attempt.isPassed ? 'text-green-600' : 'text-red-600'}`}>\n                  {attempt.isPassed ? 'Completed' : 'Incomplete'}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n          {/* Skills Breakdown */}\n          <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n            <h3 className=\"text-xl font-semibold text-gray-900 mb-6\">Skills Assessment</h3>\n            \n            <div className=\"space-y-4\">\n              {Object.entries(attempt.skills).map(([skill, score]) => (\n                <div key={skill} className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center\">\n                    <span className=\"w-4 h-4 mr-3\">\n                      {skill === 'grammar' && '📝'}\n                      {skill === 'reading' && '📖'}\n                      {skill === 'writing' && '✍️'}\n                      {skill === 'speaking' && '🎤'}\n                      {skill === 'listening' && '🎧'}\n                      {skill === 'vocabulary' && '📚'}\n                    </span>\n                    <span className=\"capitalize font-medium text-gray-900\">{skill}</span>\n                  </div>\n                  <div className=\"flex items-center space-x-3\">\n                    <div className=\"w-32 bg-gray-200 rounded-full h-2\">\n                      <div \n                        className={`h-2 rounded-full ${getScoreBackground(score)}`}\n                        style={{ width: `${score}%` }}\n                      ></div>\n                    </div>\n                    <span className={`font-semibold ${getScoreColor(score)}`}>\n                      {score}%\n                    </span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Feedback */}\n          <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n            <h3 className=\"text-xl font-semibold text-gray-900 mb-6\">Detailed Feedback</h3>\n            \n            <div className=\"space-y-6\">\n              {/* Overall Feedback */}\n              <div>\n                <h4 className=\"font-medium text-gray-900 mb-2\">Overall Assessment</h4>\n                <p className=\"text-gray-600 text-sm leading-relaxed\">\n                  {attempt.feedback.overall}\n                </p>\n              </div>\n\n              {/* Strengths */}\n              <div>\n                <h4 className=\"font-medium text-green-700 mb-2 flex items-center\">\n                  <span className=\"mr-2\">✅</span>\n                  Your Strengths\n                </h4>\n                <ul className=\"space-y-1\">\n                  {attempt.feedback.strengths.map((strength, index) => (\n                    <li key={index} className=\"text-sm text-gray-600 flex items-start\">\n                      <span className=\"mr-2\">•</span>\n                      {strength}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n\n              {/* Areas for Improvement */}\n              <div>\n                <h4 className=\"font-medium text-orange-700 mb-2 flex items-center\">\n                  <span className=\"mr-2\">🔧</span>\n                  Areas for Improvement\n                </h4>\n                <ul className=\"space-y-1\">\n                  {attempt.feedback.areasForImprovement.map((area, index) => (\n                    <li key={index} className=\"text-sm text-gray-600 flex items-start\">\n                      <span className=\"mr-2\">•</span>\n                      {area}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n\n              {/* Recommendations */}\n              <div>\n                <h4 className=\"font-medium text-blue-700 mb-2 flex items-center\">\n                  <span className=\"mr-2\">💡</span>\n                  Recommendations\n                </h4>\n                <ul className=\"space-y-1\">\n                  {attempt.feedback.recommendations.map((recommendation, index) => (\n                    <li key={index} className=\"text-sm text-gray-600 flex items-start\">\n                      <span className=\"mr-2\">•</span>\n                      {recommendation}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Answer Review */}\n        <div className=\"mt-8 bg-white rounded-lg shadow-sm border p-6\">\n          <h3 className=\"text-xl font-semibold text-gray-900 mb-6\">Answer Review</h3>\n          \n          <div className=\"space-y-4\">\n            {attempt.answers.map((answer, index) => (\n              <div key={index} className={`p-4 border rounded-lg ${\n                answer.isCorrect ? 'bg-green-50 border-green-200' : 'bg-red-50 border-red-200'\n              }`}>\n                <div className=\"flex items-center justify-between mb-2\">\n                  <span className=\"font-medium text-gray-900\">Question {answer.questionIndex + 1}</span>\n                  <div className=\"flex items-center space-x-2\">\n                    <span className={`px-2 py-1 text-xs font-medium rounded-full ${\n                      answer.isCorrect ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'\n                    }`}>\n                      {answer.isCorrect ? 'Correct' : 'Incorrect'}\n                    </span>\n                    <span className=\"text-sm text-gray-600\">{answer.points} points</span>\n                  </div>\n                </div>\n                \n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm\">\n                  <div>\n                    <span className=\"font-medium text-gray-700\">Your Answer:</span>\n                    <p className=\"text-gray-900 mt-1\">{answer.studentAnswer}</p>\n                  </div>\n                  {!answer.isCorrect && (\n                    <div>\n                      <span className=\"font-medium text-gray-700\">Correct Answer:</span>\n                      <p className=\"text-gray-900 mt-1\">{answer.correctAnswer}</p>\n                    </div>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Action Buttons */}\n        <div className=\"mt-8 flex flex-col sm:flex-row gap-4 justify-center\">\n          <button\n            onClick={() => router.push('/personalized-curriculum')}\n            className=\"px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors font-medium\"\n          >\n            View My Curriculum\n          </button>\n          <button\n            onClick={() => router.push('/verbfy-lessons')}\n            className=\"px-6 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors font-medium\"\n          >\n            Take Another Lesson\n          </button>\n          <button\n            onClick={() => router.push('/cefr-tests')}\n            className=\"px-6 py-3 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors font-medium\"\n          >\n            Take a Test\n          </button>\n        </div>\n      </div>\n    </DashboardLayout>\n  );\n} "],"names":["window","__NEXT_P","push","__webpack_require__","LessonResultsPage","seconds","router","useRouter","lessonId","query","user","useAuthContext","error","useToast","attempt","setAttempt","useState","loading","setLoading","useEffect","loadLessonResults","_id","student","resourceType","lessonType","cefrLevel","startedAt","Date","toISOString","score","maxScore","timeSpent","isCompleted","isPassed","answers","questionIndex","studentAnswer","correctAnswer","isCorrect","points","skills","grammar","reading","writing","speaking","listening","vocabulary","feedback","overall","strengths","areasForImprovement","recommendations","err","console","getScoreColor","getScoreBackground","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","DashboardLayout","allowedRoles","div","className","jsxs","Head","title","h1","p","button","onClick","concat","span","h2","secs","Math","floor","h3","Object","entries","map","skill","param","style","width","h4","ul","strength","index","li","area","recommendation","answer"],"sourceRoot":""}