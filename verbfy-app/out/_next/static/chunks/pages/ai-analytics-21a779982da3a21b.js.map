{"version":3,"file":"static/chunks/pages/ai-analytics-21a779982da3a21b.js","mappings":"qFACA,CAAAA,OAAAC,QAAA,CAAAD,OAAAC,QAAA,MAAAC,IAAA,EACA,gBACA,WACA,OAAeC,EAAQ,MACvB,EACA,sJCGO,IAAMC,EAA4D,OAAC,CACxEC,SAAAA,CAAQ,CACT,CAAAC,EACO,CAAEC,KAAAA,CAAI,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,EAAAA,IACX,CAACC,EAAWC,EAAa,CAAGC,CAAAA,EAAAA,EAAAA,QAAAA,EAA6B,MACzD,CAACC,EAAcC,EAAgB,CAAGF,CAAAA,EAAAA,EAAAA,QAAAA,EAAgC,MAClE,CAACG,EAASC,EAAW,CAAGJ,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IACjC,CAACK,EAAQC,EAAU,CAAGN,CAAAA,EAAAA,EAAAA,QAAAA,EAAyC,UAC/D,CAACO,EAAcC,EAAgB,CAAGR,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IAAIS,OAAOC,WAAW,GAAGC,KAAK,CAAC,IAAI,CAAC,EAAE,EAEvFC,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,KACRC,GACF,EAAG,CAACR,EAAQE,EAAa,EAEzB,IAAMM,EAAiB,UACrB,GAAI,CACFT,EAAW,IACX,IAAMU,EAAgBC,OAAAA,EAAAA,EAAaA,EAAbA,KAAaA,IAAbA,EAAAA,EAAaA,CAAAA,KAAAA,EAAdC,EAAAC,EAAA,CAAwBH,YAAY,CACnDI,EAAmBH,OAAAA,EAAAA,EAAaA,EAAbA,KAAaA,IAAbA,EAAAA,EAAaA,CAAAA,KAAAA,EAAdC,EAAAC,EAAA,CAAwBC,eAAe,CACzD,CAACC,EAAmBC,EAAiB,CAAG,MAAMC,QAAQC,GAAG,CAAC,CAC9DR,MAAAA,EAAAA,KAAAA,EAAAA,EAAe,CACbT,OAAAA,EACAkB,UAAWhB,EACXiB,QAASjB,CACX,GACAW,MAAAA,EAAAA,KAAAA,EAAAA,EAAkB,CAChBb,OAAAA,EACAkB,UAAWhB,EACXiB,QAASjB,CACX,GACD,EAEGY,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAmBrB,SAAS,GAAEC,EAAaoB,EAAkBrB,SAAS,EACtEsB,GAAkBlB,EAAgBkB,EACxC,CAAE,MAAOK,EAAO,CACdC,QAAQD,KAAK,CAAC,+BAAgCA,EAChD,QAAU,CACRrB,EAAW,GACb,CACF,EAEMuB,EAAe,GACZ,IAAIC,KAAKC,YAAY,GAAGC,MAAM,CAACC,GAGlCC,EAAmB,GAChB,GAA0BC,MAAA,CAAvB,CAACF,IAAAA,CAAM,EAAKG,OAAO,CAAC,GAAG,KAG7BC,EAAiB,GACd,IAAIP,KAAKC,YAAY,CAAC,QAAS,CACpCO,MAAO,WACPC,SAAU,KACZ,GAAGP,MAAM,CAACQ,GAGNC,EAAiB,SAACC,CAAAA,MAAeC,EAAAA,UAAAA,MAAAA,CAAAA,GAAAA,KAAAA,IAAAA,SAAAA,CAAAA,EAAAA,CAAAA,SAAAA,CAAAA,EAAAA,CAAoB,UACzD,GAAaA,EAAkB,iBAC3BD,GAASC,GAAAA,EAAwB,kBAC9B,cACT,EAEMC,EAAmB,SAACF,CAAAA,MAAeC,EAAAA,UAAAA,MAAAA,CAAAA,GAAAA,KAAAA,IAAAA,SAAAA,CAAAA,EAAAA,CAAAA,SAAAA,CAAAA,EAAAA,CAAoB,UAC3D,GAAaA,EAAkB,eAC3BD,GAASC,GAAAA,EAAwB,gBAC9B,YACT,SAEA,EAEI,GAAAE,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,yDACb,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,wBACb,GAAAH,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,gFACf,GAAAH,EAAAC,GAAA,EAACI,IAAAA,CAAEF,UAAU,yBAAgB,iCAOnC,GAAAH,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,wCACb,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,mDAEb,GAAAH,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,kDACb,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,8CACb,GAAAH,EAAAI,IAAA,EAACF,MAAAA,WACC,GAAAF,EAAAC,GAAA,EAACK,KAAAA,CAAGH,UAAU,4CAAmC,2BACjD,GAAAH,EAAAC,GAAA,EAACI,IAAAA,CAAEF,UAAU,8BAAqB,sEAIpC,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,wCACb,GAAAH,EAAAI,IAAA,EAACG,SAAAA,CACCV,MAAOnC,EACP8C,SAAU,GAAO7C,EAAU8C,EAAEC,MAAM,CAACb,KAAK,EACzCM,UAAU,4GAEV,GAAAH,EAAAC,GAAA,EAACU,SAAAA,CAAOd,MAAM,iBAAQ,UACtB,GAAAG,EAAAC,GAAA,EAACU,SAAAA,CAAOd,MAAM,kBAAS,WACvB,GAAAG,EAAAC,GAAA,EAACU,SAAAA,CAAOd,MAAM,mBAAU,eAE1B,GAAAG,EAAAC,GAAA,EAACW,QAAAA,CACCC,KAAK,OACLhB,MAAOjC,EACP4C,SAAU,GAAO3C,EAAgB4C,EAAEC,MAAM,CAACb,KAAK,EAC/CM,UAAU,4GAMjBhD,GACC,GAAA6C,EAAAI,IAAA,EAAAJ,EAAAc,QAAA,YAEE,GAAAd,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,sEACb,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,8CACb,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,8CACb,GAAAH,EAAAI,IAAA,EAACF,MAAAA,WACC,GAAAF,EAAAC,GAAA,EAACI,IAAAA,CAAEF,UAAU,6CAAoC,mBACjD,GAAAH,EAAAC,GAAA,EAACI,IAAAA,CAAEF,UAAU,4CAAoCnB,EAAa7B,EAAU4D,OAAO,CAACC,aAAa,OAE/F,GAAAhB,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,oBAAW,oBAE5B,GAAAH,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,gBACb,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,sCACb,GAAAH,EAAAC,GAAA,EAACgB,OAAAA,CAAKd,UAAU,0BAAiB,WACjC,GAAAH,EAAAC,GAAA,EAACgB,OAAAA,CAAKd,UAAU,8BAAqB,6BAK3C,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,8CACb,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,8CACb,GAAAH,EAAAI,IAAA,EAACF,MAAAA,WACC,GAAAF,EAAAC,GAAA,EAACI,IAAAA,CAAEF,UAAU,6CAAoC,iBACjD,GAAAH,EAAAC,GAAA,EAACI,IAAAA,CAAEF,UAAU,4CAAoCnB,EAAa7B,EAAU4D,OAAO,CAACG,WAAW,OAE7F,GAAAlB,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,oBAAW,oBAE5B,GAAAH,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,gBACb,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,sCACb,GAAAH,EAAAC,GAAA,EAACgB,OAAAA,CAAKd,UAAU,0BAAiB,UACjC,GAAAH,EAAAC,GAAA,EAACgB,OAAAA,CAAKd,UAAU,8BAAqB,6BAK3C,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,8CACb,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,8CACb,GAAAH,EAAAI,IAAA,EAACF,MAAAA,WACC,GAAAF,EAAAC,GAAA,EAACI,IAAAA,CAAEF,UAAU,6CAAoC,uBACjD,GAAAH,EAAAI,IAAA,EAACC,IAAAA,CAAEF,UAAW,sBAA0Eb,MAAA,CAApDM,EAAezC,EAAU4D,OAAO,CAACI,iBAAiB,aAClFhE,CAAAA,IAAAA,EAAU4D,OAAO,CAACI,iBAAiB,EAAQ5B,OAAO,CAAC,GAAG,UAG5D,GAAAS,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,oBAAW,SAE5B,GAAAH,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,gBACb,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,sCACb,GAAAH,EAAAC,GAAA,EAACgB,OAAAA,CAAKd,UAAU,0BAAiB,UACjC,GAAAH,EAAAC,GAAA,EAACgB,OAAAA,CAAKd,UAAU,8BAAqB,6BAK3C,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,8CACb,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,8CACb,GAAAH,EAAAI,IAAA,EAACF,MAAAA,WACC,GAAAF,EAAAC,GAAA,EAACI,IAAAA,CAAEF,UAAU,6CAAoC,gBACjD,GAAAH,EAAAI,IAAA,EAACC,IAAAA,CAAEF,UAAW,sBAA4Eb,MAAA,CAAtDM,EAAezC,EAAUiE,aAAa,CAACC,aAAa,aACpFlE,CAAAA,IAAAA,EAAUiE,aAAa,CAACC,aAAa,EAAQ9B,OAAO,CAAC,GAAG,UAG9D,GAAAS,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,oBAAW,oBAE5B,GAAAH,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,gBACb,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,sCACb,GAAAH,EAAAC,GAAA,EAACgB,OAAAA,CAAKd,UAAU,0BAAiB,UACjC,GAAAH,EAAAC,GAAA,EAACgB,OAAAA,CAAKd,UAAU,8BAAqB,gCAM7C,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,uDAEb,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,8CACb,GAAAH,EAAAC,GAAA,EAACqB,KAAAA,CAAGnB,UAAU,oDAA2C,2BACzD,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,sBACb,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,8CACb,GAAAH,EAAAC,GAAA,EAACgB,OAAAA,CAAKd,UAAU,iCAAwB,mBACxC,GAAAH,EAAAC,GAAA,EAACgB,OAAAA,CAAKd,UAAW,uBAA6Eb,MAAA,CAAtDM,EAAezC,EAAUiE,aAAa,CAACC,aAAa,YACzFhC,EAAiBlC,EAAUiE,aAAa,CAACC,aAAa,OAG3D,GAAArB,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,+CACb,GAAAH,EAAAC,GAAA,EAACC,MAAAA,CACCC,UAAW,oBAA4Eb,MAAA,CAAxDS,EAAiB5C,EAAUiE,aAAa,CAACC,aAAa,GACrF5B,MAAO,CAAE8B,MAAO,GAA+CjC,MAAA,CAA5CnC,IAAAA,EAAUiE,aAAa,CAACC,aAAa,CAAO,IAAG,MAItE,GAAArB,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,8CACb,GAAAH,EAAAC,GAAA,EAACgB,OAAAA,CAAKd,UAAU,iCAAwB,0BACxC,GAAAH,EAAAI,IAAA,EAACa,OAAAA,CAAKd,UAAU,8CACbhD,EAAUiE,aAAa,CAACI,mBAAmB,CAACjC,OAAO,CAAC,GAAG,UAG5D,GAAAS,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,+CACb,GAAAH,EAAAC,GAAA,EAACC,MAAAA,CACCC,UAAU,+BACVV,MAAO,CAAE8B,MAAO,GAAwEjC,MAAA,CAArEmC,KAAKC,GAAG,CAACvE,EAAUiE,aAAa,CAACI,mBAAmB,CAAG,EAAI,IAAK,KAAK,IAAG,MAI/F,GAAAxB,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,8CACb,GAAAH,EAAAC,GAAA,EAACgB,OAAAA,CAAKd,UAAU,iCAAwB,eACxC,GAAAH,EAAAC,GAAA,EAACgB,OAAAA,CAAKd,UAAW,uBAA6Eb,MAAA,CAAtDM,EAAe,EAAIzC,EAAUiE,aAAa,CAACO,SAAS,YACzFtC,EAAiBlC,EAAUiE,aAAa,CAACO,SAAS,OAGvD,GAAA3B,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,+CACb,GAAAH,EAAAC,GAAA,EAACC,MAAAA,CACCC,UAAW,oBAA4Eb,MAAA,CAAxDS,EAAiB,EAAI5C,EAAUiE,aAAa,CAACO,SAAS,GACrFlC,MAAO,CAAE8B,MAAO,GAAiDjC,MAAA,CAA9C,CAAC,EAAInC,EAAUiE,aAAa,CAACO,SAAS,EAAI,IAAI,IAAG,MAIxE,GAAA3B,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,8CACb,GAAAH,EAAAC,GAAA,EAACgB,OAAAA,CAAKd,UAAU,iCAAwB,wBACxC,GAAAH,EAAAC,GAAA,EAACgB,OAAAA,CAAKd,UAAW,uBAAkFb,MAAA,CAA3DM,EAAezC,EAAUiE,aAAa,CAACQ,kBAAkB,YAC9FvC,EAAiBlC,EAAUiE,aAAa,CAACQ,kBAAkB,OAGhE,GAAA5B,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,+CACb,GAAAH,EAAAC,GAAA,EAACC,MAAAA,CACCC,UAAW,oBAAiFb,MAAA,CAA7DS,EAAiB5C,EAAUiE,aAAa,CAACQ,kBAAkB,GAC1FnC,MAAO,CAAE8B,MAAO,GAAoDjC,MAAA,CAAjDnC,IAAAA,EAAUiE,aAAa,CAACQ,kBAAkB,CAAO,IAAG,YAO/E,GAAA5B,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,8CACb,GAAAH,EAAAC,GAAA,EAACqB,KAAAA,CAAGnB,UAAU,oDAA2C,oBACzD,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,sBACb,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,mCACb,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,kDACb,GAAAH,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,4CAAoChD,EAAU0E,cAAc,CAACC,QAAQ,GACpF,GAAA9B,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,iCAAwB,iBAEzC,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,mDACb,GAAAH,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,6CAAqChD,EAAU0E,cAAc,CAACE,cAAc,GAC3F,GAAA/B,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,iCAAwB,0BAI3C,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,8CACb,GAAAH,EAAAC,GAAA,EAACgB,OAAAA,CAAKd,UAAU,iCAAwB,eACxC,GAAAH,EAAAC,GAAA,EAACgB,OAAAA,CAAKd,UAAW,uBAA8Eb,MAAA,CAAvDM,EAAe,EAAIzC,EAAU0E,cAAc,CAACG,SAAS,YAC1F3C,EAAiBlC,EAAU0E,cAAc,CAACG,SAAS,OAGxD,GAAAhC,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,+CACb,GAAAH,EAAAC,GAAA,EAACC,MAAAA,CACCC,UAAW,oBAA6Eb,MAAA,CAAzDS,EAAiB,EAAI5C,EAAU0E,cAAc,CAACG,SAAS,GACtFvC,MAAO,CAAE8B,MAAO,GAAkDjC,MAAA,CAA/C,CAAC,EAAInC,EAAU0E,cAAc,CAACG,SAAS,EAAI,IAAI,IAAG,MAIzE,GAAAhC,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,8CACb,GAAAH,EAAAC,GAAA,EAACgB,OAAAA,CAAKd,UAAU,iCAAwB,0BACxC,GAAAH,EAAAC,GAAA,EAACgB,OAAAA,CAAKd,UAAU,6CACbhD,EAAU0E,cAAc,CAACI,sBAAsB,CAAC1C,OAAO,CAAC,QAG7D,GAAAS,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,+CACb,GAAAH,EAAAC,GAAA,EAACC,MAAAA,CACCC,UAAU,iCACVV,MAAO,CAAE8B,MAAO,GAA6EjC,MAAA,CAA1EmC,KAAKC,GAAG,CAACvE,EAAU0E,cAAc,CAACI,sBAAsB,CAAG,GAAK,IAAK,KAAK,IAAG,SAKtG,GAAAjC,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,iBACb,GAAAH,EAAAC,GAAA,EAACiC,KAAAA,CAAG/B,UAAU,kDAAyC,0BACvD,GAAAH,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,qBACZhD,EAAU0E,cAAc,CAACM,mBAAmB,CAACC,GAAG,CAAC,CAACC,EAASC,IAC1D,GAAAtC,EAAAI,IAAA,EAACF,MAAAA,CAAgBC,UAAU,8CACzB,GAAAH,EAAAC,GAAA,EAACgB,OAAAA,CAAKd,UAAU,iCAAyBkC,EAAQA,OAAO,GACxD,GAAArC,EAAAC,GAAA,EAACgB,OAAAA,CAAKd,UAAU,6CAAqCkC,EAAQE,UAAU,KAF/DD,eAWpB,GAAAtC,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,mDACb,GAAAH,EAAAC,GAAA,EAACqB,KAAAA,CAAGnB,UAAU,oDAA2C,wBACzD,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,kDACb,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,oDACb,GAAAH,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,8CAAsChD,EAAUqF,kBAAkB,CAACC,qBAAqB,GACvG,GAAAzC,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,iCAAwB,uBAEzC,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,mDACb,GAAAH,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,6CAAqChD,EAAUqF,kBAAkB,CAACE,eAAe,GAChG,GAAA1C,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,iCAAwB,gBAEzC,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,iDACb,GAAAH,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,2CAAmChD,EAAUqF,kBAAkB,CAACG,eAAe,GAC9F,GAAA3C,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,iCAAwB,mBAI3C,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,iBACb,GAAAH,EAAAC,GAAA,EAACiC,KAAAA,CAAG/B,UAAU,kDAAyC,qBACvD,GAAAH,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,iDACZhD,EAAUqF,kBAAkB,CAACI,cAAc,CAACR,GAAG,CAAC,CAACS,EAAOP,IACvD,GAAAtC,EAAAI,IAAA,EAACF,MAAAA,CAAgBC,UAAU,wBACzB,GAAAH,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,2CAAmC0C,EAAMC,KAAK,GAC7D,GAAA9C,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,iCAAyB0C,EAAMA,KAAK,GACnD,GAAA7C,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,kCAAwB,KAAG0C,EAAME,aAAa,CAACxD,OAAO,CAAC,QAH9D+C,YAWlB,GAAAtC,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,mDACb,GAAAH,EAAAC,GAAA,EAACqB,KAAAA,CAAGnB,UAAU,oDAA2C,kBACzD,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,kDACb,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,kDACb,GAAAH,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,4CAAoCX,EAAerC,EAAU6F,YAAY,CAACC,SAAS,IAClG,GAAAjD,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,iCAAwB,kBAEzC,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,mDACb,GAAAH,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,6CAAqCX,EAAerC,EAAU6F,YAAY,CAACE,cAAc,IACxG,GAAAlD,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,iCAAwB,wBAEzC,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,oDACb,GAAAH,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,8CAAsCX,EAAerC,EAAU6F,YAAY,CAACG,WAAW,IACtG,GAAAnD,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,iCAAwB,qBAEzC,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,oDACb,GAAAH,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,8CAAsCd,EAAiBlC,EAAU6F,YAAY,CAACI,GAAG,IAChG,GAAApD,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,iCAAwB,iBAM5C7C,GACC,GAAA0C,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,8CACb,GAAAH,EAAAC,GAAA,EAACqB,KAAAA,CAAGnB,UAAU,oDAA2C,uBACzD,GAAAH,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,iDACZkD,OAAOC,OAAO,CAAChG,EAAaiG,MAAM,EAAEnB,GAAG,CAAC,OAAC,CAACoB,EAAOC,EAAK,CAAAzG,QACrD,GAAAgD,EAAAI,IAAA,EAACF,MAAAA,CAAgBC,UAAU,kDACzB,GAAAH,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,sDAA8CqD,IAC7D,GAAAxD,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,6CAAoCsD,EAAKC,OAAO,CAAC,OAChE,GAAA1D,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,mCAAyB,IAAEsD,EAAKE,WAAW,CAAC,OAC3D,GAAA3D,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,uCACZsD,EAAKG,QAAQ,CAAC,eAAaH,EAAKI,SAAS,CAAC,kBALrCL,iBAiB9B,iBC3Xe,SAASM,IACtB,GAAM,CAAE7G,KAAAA,CAAI,CAAEO,QAAAA,CAAO,CAAE,CAAGN,CAAAA,EAAAA,EAAAA,EAAAA,IACpB6G,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,UAQf,CANA/F,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,KACHT,GAAYP,GACf8G,EAAOnH,IAAI,CAAC,SAEhB,EAAG,CAACK,EAAMO,EAASuG,EAAO,EAEtBvG,GAEA,GAAAwC,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,oEACb,GAAAH,EAAAI,IAAA,EAACF,MAAAA,CAAIC,UAAU,wBACb,GAAAH,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAU,gFACf,GAAAH,EAAAC,GAAA,EAACI,IAAAA,CAAEF,UAAU,yBAAgB,oBAMhClD,EAKDA,YAAAA,EAAKgH,IAAI,EAAkBhH,UAAAA,EAAKgH,IAAI,EACtCF,EAAOnH,IAAI,CAAC,iBACL,MAIP,GAAAoD,EAAAI,IAAA,EAAAJ,EAAAc,QAAA,YACE,GAAAd,EAAAI,IAAA,EAAC8D,IAAIA,WACH,GAAAlE,EAAAC,GAAA,EAACkE,QAAAA,UAAM,0BACP,GAAAnE,EAAAC,GAAA,EAACmE,OAAAA,CAAKC,KAAK,cAAcC,QAAQ,2DAGnC,GAAAtE,EAAAC,GAAA,EAACnD,EAAoBA,CAACC,SAAUE,EAAKgH,IAAI,MAhBpC,IAmBX","sources":["webpack://_N_E/?5488","webpack://_N_E/./src/features/aiFeatures/view/AIAnalyticsDashboard.tsx","webpack://_N_E/./pages/ai-analytics/index.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/ai-analytics\",\n      function () {\n        return require(\"private-next-pages/ai-analytics/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/ai-analytics\"])\n      });\n    }\n  ","import React, { useState, useEffect } from 'react';\nimport { AIAnalytics, AIUserProgress } from '@/types/aiFeatures';\nimport { aiFeaturesAPI } from '@/lib/api';\nimport { useAuthContext } from '@/context/AuthContext';\n\ninterface AIAnalyticsDashboardProps {\n  userRole: 'admin' | 'teacher';\n}\n\nexport const AIAnalyticsDashboard: React.FC<AIAnalyticsDashboardProps> = ({\n  userRole\n}) => {\n  const { user } = useAuthContext();\n  const [analytics, setAnalytics] = useState<AIAnalytics | null>(null);\n  const [userProgress, setUserProgress] = useState<AIUserProgress | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [period, setPeriod] = useState<'daily' | 'weekly' | 'monthly'>('weekly');\n  const [selectedDate, setSelectedDate] = useState(new Date().toISOString().split('T')[0]);\n\n  useEffect(() => {\n    fetchAnalytics();\n  }, [period, selectedDate]);\n\n  const fetchAnalytics = async () => {\n    try {\n      setLoading(true);\n      const getAnalytics = (aiFeaturesAPI as any)?.getAnalytics;\n      const getUserProgress = (aiFeaturesAPI as any)?.getUserProgress;\n      const [analyticsResponse, progressResponse] = await Promise.all([\n        getAnalytics?.({\n          period,\n          startDate: selectedDate,\n          endDate: selectedDate\n        }),\n        getUserProgress?.({\n          period,\n          startDate: selectedDate,\n          endDate: selectedDate\n        })\n      ]);\n      \n      if (analyticsResponse?.analytics) setAnalytics(analyticsResponse.analytics);\n      if (progressResponse) setUserProgress(progressResponse);\n    } catch (error) {\n      console.error('Error fetching AI analytics:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const formatNumber = (num: number) => {\n    return new Intl.NumberFormat().format(num);\n  };\n\n  const formatPercentage = (num: number) => {\n    return `${(num * 100).toFixed(1)}%`;\n  };\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    }).format(amount);\n  };\n\n  const getMetricColor = (value: number, threshold: number = 0.7) => {\n    if (value >= threshold) return 'text-green-600';\n    if (value >= threshold * 0.8) return 'text-yellow-600';\n    return 'text-red-600';\n  };\n\n  const getMetricBgColor = (value: number, threshold: number = 0.7) => {\n    if (value >= threshold) return 'bg-green-100';\n    if (value >= threshold * 0.8) return 'bg-yellow-100';\n    return 'bg-red-100';\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">Loading AI analytics...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 py-8\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        {/* Header */}\n        <div className=\"bg-white rounded-lg shadow-md p-6 mb-6\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-2xl font-bold text-gray-900\">AI Analytics Dashboard</h1>\n              <p className=\"text-gray-600 mt-1\">\n                Comprehensive insights into AI performance and user engagement\n              </p>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <select\n                value={period}\n                onChange={(e) => setPeriod(e.target.value as 'daily' | 'weekly' | 'monthly')}\n                className=\"border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              >\n                <option value=\"daily\">Daily</option>\n                <option value=\"weekly\">Weekly</option>\n                <option value=\"monthly\">Monthly</option>\n              </select>\n              <input\n                type=\"date\"\n                value={selectedDate}\n                onChange={(e) => setSelectedDate(e.target.value)}\n                className=\"border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500\"\n              />\n            </div>\n          </div>\n        </div>\n\n        {analytics && (\n          <>\n            {/* Key Metrics */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n              <div className=\"bg-white rounded-lg shadow-md p-6\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-600\">Total Sessions</p>\n                    <p className=\"text-2xl font-bold text-gray-900\">{formatNumber(analytics.metrics.totalSessions)}</p>\n                  </div>\n                  <div className=\"text-3xl\">🤖</div>\n                </div>\n                <div className=\"mt-4\">\n                  <div className=\"flex items-center text-sm\">\n                    <span className=\"text-green-600\">+12.5%</span>\n                    <span className=\"text-gray-500 ml-1\">from last period</span>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"bg-white rounded-lg shadow-md p-6\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-600\">Active Users</p>\n                    <p className=\"text-2xl font-bold text-gray-900\">{formatNumber(analytics.metrics.activeUsers)}</p>\n                  </div>\n                  <div className=\"text-3xl\">👥</div>\n                </div>\n                <div className=\"mt-4\">\n                  <div className=\"flex items-center text-sm\">\n                    <span className=\"text-green-600\">+8.3%</span>\n                    <span className=\"text-gray-500 ml-1\">from last period</span>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"bg-white rounded-lg shadow-md p-6\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-600\">Satisfaction Score</p>\n                    <p className={`text-2xl font-bold ${getMetricColor(analytics.metrics.satisfactionScore)}`}>\n                      {(analytics.metrics.satisfactionScore * 100).toFixed(1)}%\n                    </p>\n                  </div>\n                  <div className=\"text-3xl\">⭐</div>\n                </div>\n                <div className=\"mt-4\">\n                  <div className=\"flex items-center text-sm\">\n                    <span className=\"text-green-600\">+2.1%</span>\n                    <span className=\"text-gray-500 ml-1\">from last period</span>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"bg-white rounded-lg shadow-md p-6\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-sm font-medium text-gray-600\">AI Accuracy</p>\n                    <p className={`text-2xl font-bold ${getMetricColor(analytics.aiPerformance.modelAccuracy)}`}>\n                      {(analytics.aiPerformance.modelAccuracy * 100).toFixed(1)}%\n                    </p>\n                  </div>\n                  <div className=\"text-3xl\">🎯</div>\n                </div>\n                <div className=\"mt-4\">\n                  <div className=\"flex items-center text-sm\">\n                    <span className=\"text-green-600\">+1.8%</span>\n                    <span className=\"text-gray-500 ml-1\">from last period</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8\">\n              {/* AI Performance */}\n              <div className=\"bg-white rounded-lg shadow-md p-6\">\n                <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">AI Performance Metrics</h2>\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-sm text-gray-600\">Model Accuracy</span>\n                    <span className={`text-sm font-medium ${getMetricColor(analytics.aiPerformance.modelAccuracy)}`}>\n                      {formatPercentage(analytics.aiPerformance.modelAccuracy)}\n                    </span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                    <div\n                      className={`h-2 rounded-full ${getMetricBgColor(analytics.aiPerformance.modelAccuracy)}`}\n                      style={{ width: `${analytics.aiPerformance.modelAccuracy * 100}%` }}\n                    ></div>\n                  </div>\n\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-sm text-gray-600\">Average Response Time</span>\n                    <span className=\"text-sm font-medium text-gray-900\">\n                      {analytics.aiPerformance.averageResponseTime.toFixed(1)}s\n                    </span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                    <div\n                      className=\"bg-blue-600 h-2 rounded-full\"\n                      style={{ width: `${Math.min(analytics.aiPerformance.averageResponseTime / 5 * 100, 100)}%` }}\n                    ></div>\n                  </div>\n\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-sm text-gray-600\">Error Rate</span>\n                    <span className={`text-sm font-medium ${getMetricColor(1 - analytics.aiPerformance.errorRate)}`}>\n                      {formatPercentage(analytics.aiPerformance.errorRate)}\n                    </span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                    <div\n                      className={`h-2 rounded-full ${getMetricBgColor(1 - analytics.aiPerformance.errorRate)}`}\n                      style={{ width: `${(1 - analytics.aiPerformance.errorRate) * 100}%` }}\n                    ></div>\n                  </div>\n\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-sm text-gray-600\">Correction Accuracy</span>\n                    <span className={`text-sm font-medium ${getMetricColor(analytics.aiPerformance.correctionAccuracy)}`}>\n                      {formatPercentage(analytics.aiPerformance.correctionAccuracy)}\n                    </span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                    <div\n                      className={`h-2 rounded-full ${getMetricBgColor(analytics.aiPerformance.correctionAccuracy)}`}\n                      style={{ width: `${analytics.aiPerformance.correctionAccuracy * 100}%` }}\n                    ></div>\n                  </div>\n                </div>\n              </div>\n\n              {/* User Engagement */}\n              <div className=\"bg-white rounded-lg shadow-md p-6\">\n                <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">User Engagement</h2>\n                <div className=\"space-y-4\">\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div className=\"text-center p-4 bg-blue-50 rounded-lg\">\n                      <div className=\"text-2xl font-bold text-blue-600\">{analytics.userEngagement.newUsers}</div>\n                      <div className=\"text-sm text-gray-600\">New Users</div>\n                    </div>\n                    <div className=\"text-center p-4 bg-green-50 rounded-lg\">\n                      <div className=\"text-2xl font-bold text-green-600\">{analytics.userEngagement.returningUsers}</div>\n                      <div className=\"text-sm text-gray-600\">Returning Users</div>\n                    </div>\n                  </div>\n\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-sm text-gray-600\">Churn Rate</span>\n                    <span className={`text-sm font-medium ${getMetricColor(1 - analytics.userEngagement.churnRate)}`}>\n                      {formatPercentage(analytics.userEngagement.churnRate)}\n                    </span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                    <div\n                      className={`h-2 rounded-full ${getMetricBgColor(1 - analytics.userEngagement.churnRate)}`}\n                      style={{ width: `${(1 - analytics.userEngagement.churnRate) * 100}%` }}\n                    ></div>\n                  </div>\n\n                  <div className=\"flex items-center justify-between\">\n                    <span className=\"text-sm text-gray-600\">Avg Sessions per User</span>\n                    <span className=\"text-sm font-medium text-gray-900\">\n                      {analytics.userEngagement.averageSessionsPerUser.toFixed(1)}\n                    </span>\n                  </div>\n                  <div className=\"w-full bg-gray-200 rounded-full h-2\">\n                    <div\n                      className=\"bg-purple-600 h-2 rounded-full\"\n                      style={{ width: `${Math.min(analytics.userEngagement.averageSessionsPerUser / 10 * 100, 100)}%` }}\n                    ></div>\n                  </div>\n                </div>\n\n                <div className=\"mt-6\">\n                  <h3 className=\"text-sm font-medium text-gray-900 mb-3\">Most Popular Features</h3>\n                  <div className=\"space-y-2\">\n                    {analytics.userEngagement.mostPopularFeatures.map((feature, index) => (\n                      <div key={index} className=\"flex items-center justify-between\">\n                        <span className=\"text-sm text-gray-600\">{feature.feature}</span>\n                        <span className=\"text-sm font-medium text-gray-900\">{feature.usageCount}</span>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            {/* Content Performance */}\n            <div className=\"bg-white rounded-lg shadow-md p-6 mb-8\">\n              <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">Content Performance</h2>\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n                <div className=\"text-center p-4 bg-yellow-50 rounded-lg\">\n                  <div className=\"text-2xl font-bold text-yellow-600\">{analytics.contentPerformance.totalContentGenerated}</div>\n                  <div className=\"text-sm text-gray-600\">Total Generated</div>\n                </div>\n                <div className=\"text-center p-4 bg-green-50 rounded-lg\">\n                  <div className=\"text-2xl font-bold text-green-600\">{analytics.contentPerformance.approvedContent}</div>\n                  <div className=\"text-sm text-gray-600\">Approved</div>\n                </div>\n                <div className=\"text-center p-4 bg-red-50 rounded-lg\">\n                  <div className=\"text-2xl font-bold text-red-600\">{analytics.contentPerformance.rejectedContent}</div>\n                  <div className=\"text-sm text-gray-600\">Rejected</div>\n                </div>\n              </div>\n\n              <div className=\"mt-6\">\n                <h3 className=\"text-sm font-medium text-gray-900 mb-3\">Content by Level</h3>\n                <div className=\"grid grid-cols-2 md:grid-cols-6 gap-4\">\n                  {analytics.contentPerformance.contentByLevel.map((level, index) => (\n                    <div key={index} className=\"text-center\">\n                      <div className=\"text-lg font-bold text-gray-900\">{level.count}</div>\n                      <div className=\"text-xs text-gray-600\">{level.level}</div>\n                      <div className=\"text-xs text-gray-500\">⭐ {level.averageRating.toFixed(1)}</div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n\n            {/* Cost Analysis */}\n            <div className=\"bg-white rounded-lg shadow-md p-6 mb-8\">\n              <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">Cost Analysis</h2>\n              <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\n                <div className=\"text-center p-4 bg-blue-50 rounded-lg\">\n                  <div className=\"text-2xl font-bold text-blue-600\">{formatCurrency(analytics.costAnalysis.totalCost)}</div>\n                  <div className=\"text-sm text-gray-600\">Total Cost</div>\n                </div>\n                <div className=\"text-center p-4 bg-green-50 rounded-lg\">\n                  <div className=\"text-2xl font-bold text-green-600\">{formatCurrency(analytics.costAnalysis.costPerSession)}</div>\n                  <div className=\"text-sm text-gray-600\">Cost per Session</div>\n                </div>\n                <div className=\"text-center p-4 bg-purple-50 rounded-lg\">\n                  <div className=\"text-2xl font-bold text-purple-600\">{formatCurrency(analytics.costAnalysis.costPerUser)}</div>\n                  <div className=\"text-sm text-gray-600\">Cost per User</div>\n                </div>\n                <div className=\"text-center p-4 bg-orange-50 rounded-lg\">\n                  <div className=\"text-2xl font-bold text-orange-600\">{formatPercentage(analytics.costAnalysis.roi)}</div>\n                  <div className=\"text-sm text-gray-600\">ROI</div>\n                </div>\n              </div>\n            </div>\n\n            {/* Skill Improvements */}\n            {userProgress && (\n              <div className=\"bg-white rounded-lg shadow-md p-6\">\n                <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">Skill Improvements</h2>\n                <div className=\"grid grid-cols-2 md:grid-cols-4 gap-6\">\n                  {Object.entries(userProgress.skills).map(([skill, data]) => (\n                    <div key={skill} className=\"text-center p-4 bg-gray-50 rounded-lg\">\n                      <div className=\"text-lg font-bold text-gray-900 capitalize\">{skill}</div>\n                      <div className=\"text-2xl font-bold text-blue-600\">{data.current}%</div>\n                      <div className=\"text-sm text-green-600\">+{data.improvement}%</div>\n                      <div className=\"text-xs text-gray-500 mt-2\">\n                        {data.sessions} sessions | {data.exercises} exercises\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  );\n}; ","import React from 'react';\nimport Head from 'next/head';\nimport { AIAnalyticsDashboard } from '../../src/features/aiFeatures/view/AIAnalyticsDashboard';\nimport { useAuthContext } from '@/context/AuthContext';\nimport { useRouter } from 'next/router';\nimport { useEffect } from 'react';\n\nexport default function AIAnalyticsPage() {\n  const { user, loading } = useAuthContext();\n  const router = useRouter();\n\n  useEffect(() => {\n    if (!loading && !user) {\n      router.push('/login');\n    }\n  }, [user, loading, router]);\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">Loading...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!user) {\n    return null;\n  }\n\n  // Only allow teachers and admins to access this page\n  if (user.role !== 'teacher' && user.role !== 'admin') {\n    router.push('/unauthorized');\n    return null;\n  }\n\n  return (\n    <>\n      <Head>\n        <title>AI Analytics - Verbfy</title>\n        <meta name=\"description\" content=\"Comprehensive AI performance analytics and insights\" />\n      </Head>\n\n      <AIAnalyticsDashboard userRole={user.role as 'admin' | 'teacher'} />\n    </>\n  );\n} "],"names":["window","__NEXT_P","push","__webpack_require__","AIAnalyticsDashboard","userRole","param","user","useAuthContext","analytics","setAnalytics","useState","userProgress","setUserProgress","loading","setLoading","period","setPeriod","selectedDate","setSelectedDate","Date","toISOString","split","useEffect","fetchAnalytics","getAnalytics","aiFeaturesAPI","api","qV","getUserProgress","analyticsResponse","progressResponse","Promise","all","startDate","endDate","error","console","formatNumber","Intl","NumberFormat","format","num","formatPercentage","concat","toFixed","formatCurrency","style","currency","amount","getMetricColor","value","threshold","getMetricBgColor","jsx_runtime","jsx","div","className","jsxs","p","h1","select","onChange","e","target","option","input","type","Fragment","metrics","totalSessions","span","activeUsers","satisfactionScore","aiPerformance","modelAccuracy","h2","width","averageResponseTime","Math","min","errorRate","correctionAccuracy","userEngagement","newUsers","returningUsers","churnRate","averageSessionsPerUser","h3","mostPopularFeatures","map","feature","index","usageCount","contentPerformance","totalContentGenerated","approvedContent","rejectedContent","contentByLevel","level","count","averageRating","costAnalysis","totalCost","costPerSession","costPerUser","roi","Object","entries","skills","skill","data","current","improvement","sessions","exercises","AIAnalyticsPage","router","useRouter","role","Head","title","meta","name","content"],"sourceRoot":""}