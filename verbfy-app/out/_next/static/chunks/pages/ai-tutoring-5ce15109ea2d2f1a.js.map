{"version":3,"file":"static/chunks/pages/ai-tutoring-5ce15109ea2d2f1a.js","mappings":"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","sources":["webpack://_N_E/?976e","webpack://_N_E/./src/features/aiFeatures/view/AITutoringInterface.tsx","webpack://_N_E/./pages/ai-tutoring/index.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/ai-tutoring\",\n      function () {\n        return require(\"private-next-pages/ai-tutoring/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/ai-tutoring\"])\n      });\n    }\n  ","import React, { useState, useEffect, useRef } from 'react';\nimport { useRouter } from 'next/router';\nimport { AITutoringSession, AITutoringMessage } from '@/types/aiFeatures';\nimport { aiFeaturesAPI } from '@/lib/api';\nimport { useAuthContext } from '@/context/AuthContext';\n\ninterface AITutoringInterfaceProps {\n  sessionType?: 'conversation' | 'grammar' | 'pronunciation' | 'writing' | 'reading' | 'listening';\n  onComplete?: (session: AITutoringSession) => void;\n}\n\nexport const AITutoringInterface: React.FC<AITutoringInterfaceProps> = ({\n  sessionType = 'conversation',\n  onComplete\n}) => {\n  const router = useRouter();\n  const { user } = useAuthContext();\n  const [session, setSession] = useState<AITutoringSession | null>(null);\n  const [messages, setMessages] = useState<AITutoringMessage[]>([]);\n  const [inputMessage, setInputMessage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [sessionLoading, setSessionLoading] = useState(true);\n  const [isRecording, setIsRecording] = useState(false);\n  const [showCorrections, setShowCorrections] = useState(true);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    initializeSession();\n  }, [sessionType]);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  const initializeSession = async () => {\n    try {\n      setSessionLoading(true);\n      const newSession = await (aiFeaturesAPI as any).startTutoringSession?.({\n        sessionType,\n        cefrLevel: user?.cefrLevel || 'A1'\n      });\n      if (newSession) {\n        // Defer state updates to avoid act warnings in tests\n        setTimeout(() => {\n          setSession(newSession);\n          setMessages(newSession.messages || []);\n        }, 0);\n      }\n    } catch (error) {\n      console.error('Error initializing AI session:', error);\n    } finally {\n      setSessionLoading(false);\n    }\n  };\n\n  const sendMessage = async () => {\n    if (!inputMessage.trim() || !session) return;\n\n    const userMessage: AITutoringMessage = {\n      _id: Date.now().toString(),\n      role: 'student',\n      content: inputMessage,\n      timestamp: new Date().toISOString(),\n      messageType: 'text'\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n    setInputMessage('');\n    setIsLoading(true);\n\n    try {\n      const response = await (aiFeaturesAPI as any).sendTutoringMessage?.(session._id, {\n        content: inputMessage,\n        messageType: 'text'\n      });\n\n      if (response?.message) {\n        setMessages(prev => [...prev, response.message]);\n      }\n      \n      if (response?.session) {\n        setSession(response.session);\n      }\n    } catch (error) {\n      console.error('Error sending message:', error);\n      const errorMessage: AITutoringMessage = {\n        _id: Date.now().toString(),\n        role: 'ai',\n        content: 'Sorry, I encountered an error. Please try again.',\n        timestamp: new Date().toISOString(),\n        messageType: 'text'\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage();\n    }\n  };\n\n  const startRecording = async () => {\n    try {\n      setIsRecording(true);\n      // Audio recording logic would go here\n      // For now, we'll simulate recording\n      setTimeout(() => {\n        setIsRecording(false);\n        // Simulate sending audio message\n        const audioMessage: AITutoringMessage = {\n          _id: Date.now().toString(),\n          role: 'student',\n          content: '[Audio message]',\n          timestamp: new Date().toISOString(),\n          messageType: 'audio',\n          audioUrl: '/sample-audio.mp3'\n        };\n        setMessages(prev => [...prev, audioMessage]);\n      }, 3000);\n    } catch (error) {\n      console.error('Error starting recording:', error);\n      setIsRecording(false);\n    }\n  };\n\n  const stopRecording = () => {\n    setIsRecording(false);\n  };\n\n  const endSession = async () => {\n    if (!session) return;\n\n    try {\n      const completedSession = await aiFeaturesAPI.endTutoringSession(session._id);\n      setSession(completedSession);\n      \n      if (onComplete) {\n        onComplete(completedSession);\n      } else {\n        router.push(`/ai-tutoring/session/${session._id}/results`);\n      }\n    } catch (error) {\n      console.error('Error ending session:', error);\n    }\n  };\n\n  const getSessionTypeIcon = (type: string) => {\n    const icons = {\n      conversation: '💬',\n      grammar: '📝',\n      pronunciation: '🗣️',\n      writing: '✍️',\n      reading: '📖',\n      listening: '👂'\n    };\n    return icons[type as keyof typeof icons] || '🤖';\n  };\n\n  const getSessionTypeColor = (type: string) => {\n    const colors = {\n      conversation: 'bg-blue-100 text-blue-800',\n      grammar: 'bg-green-100 text-green-800',\n      pronunciation: 'bg-purple-100 text-purple-800',\n      writing: 'bg-yellow-100 text-yellow-800',\n      reading: 'bg-indigo-100 text-indigo-800',\n      listening: 'bg-pink-100 text-pink-800'\n    };\n    return colors[type as keyof typeof colors] || 'bg-gray-100 text-gray-800';\n  };\n\n  if (sessionLoading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">Initializing AI tutor...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex flex-col\">\n      {/* Header */}\n      <div className=\"bg-white shadow-sm border-b\">\n        <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between h-16\">\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"text-2xl\">{getSessionTypeIcon(sessionType)}</div>\n              <div>\n                <h1 className=\"text-xl font-semibold text-gray-900\">AI Tutor</h1>\n                <p className=\"text-sm text-gray-500 capitalize\">{sessionType} Session</p>\n              </div>\n            </div>\n            \n            <div className=\"flex items-center space-x-4\">\n              <span className={`px-3 py-1 text-sm font-medium rounded-full ${getSessionTypeColor(sessionType)}`}>\n                {sessionType}\n              </span>\n              <button\n                onClick={endSession}\n                className=\"px-4 py-2 bg-red-600 text-white text-sm font-medium rounded-md hover:bg-red-700 transition-colors\"\n              >\n                End Session\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Chat Area */}\n      <div className=\"flex-1 flex flex-col max-w-4xl mx-auto w-full px-4 sm:px-6 lg:px-8 py-6\">\n        <div className=\"flex-1 bg-white rounded-lg shadow-md flex flex-col\">\n          {/* Messages */}\n          <div className=\"flex-1 overflow-y-auto p-6 space-y-4\">\n            {messages.map((message) => (\n              <div\n                key={message._id}\n                className={`flex ${message.role === 'student' ? 'justify-end' : 'justify-start'}`}\n              >\n                <div\n                  className={`max-w-xs lg:max-w-md px-4 py-2 rounded-lg ${\n                    message.role === 'student'\n                      ? 'bg-blue-600 text-white'\n                      : 'bg-gray-100 text-gray-900'\n                  }`}\n                >\n                  <div className=\"text-sm\">{message.content}</div>\n                  \n                  {/* Corrections */}\n                  {message.corrections && showCorrections && message.corrections.length > 0 && (\n                    <div className=\"mt-2 pt-2 border-t border-gray-200\">\n                      <div className=\"text-xs font-medium text-gray-600 mb-1\">Corrections:</div>\n                      {message.corrections.map((correction, index) => (\n                        <div key={index} className=\"text-xs\">\n                          <span className=\"line-through text-red-400\">{correction.original}</span>\n                          <span className=\"mx-1\">→</span>\n                          <span className=\"text-green-600 font-medium\">{correction.corrected}</span>\n                          <div className=\"text-gray-500 mt-1\">{correction.explanation}</div>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n\n                  {/* Suggestions */}\n                  {message.suggestions && message.suggestions.length > 0 && (\n                    <div className=\"mt-2 pt-2 border-t border-gray-200\">\n                      <div className=\"text-xs font-medium text-gray-600 mb-1\">Suggestions:</div>\n                      {message.suggestions.map((suggestion, index) => (\n                        <div key={index} className=\"text-xs\">\n                          <span className=\"font-medium\">{suggestion.suggestion}</span>\n                          <div className=\"text-gray-500 mt-1\">{suggestion.explanation}</div>\n                        </div>\n                      ))}\n                    </div>\n                  )}\n\n                  {/* Audio */}\n                  {message.audioUrl && (\n                    <div className=\"mt-2\">\n                      <audio controls className=\"w-full\">\n                        <source src={message.audioUrl} type=\"audio/mpeg\" />\n                        Your browser does not support the audio element.\n                      </audio>\n                    </div>\n                  )}\n\n                  <div className=\"text-xs opacity-70 mt-1\">\n                    {new Date(message.timestamp).toLocaleTimeString()}\n                  </div>\n                </div>\n              </div>\n            ))}\n\n            {isLoading && (\n              <div className=\"flex justify-start\">\n                <div className=\"bg-gray-100 text-gray-900 max-w-xs lg:max-w-md px-4 py-2 rounded-lg\">\n                  <div className=\"flex items-center space-x-2\">\n                    <div className=\"animate-pulse\">🤖</div>\n                    <div className=\"flex space-x-1\">\n                      <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\"></div>\n                      <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{ animationDelay: '0.1s' }}></div>\n                      <div className=\"w-2 h-2 bg-gray-400 rounded-full animate-bounce\" style={{ animationDelay: '0.2s' }}></div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n\n            <div ref={messagesEndRef} />\n          </div>\n\n          {/* Input Area */}\n          <div className=\"border-t p-4\">\n            <div className=\"flex items-center space-x-3\">\n              <div className=\"flex-1\">\n                <textarea\n                  value={inputMessage}\n                  onChange={(e) => setInputMessage(e.target.value)}\n                  onKeyPress={handleKeyPress}\n                  placeholder=\"Type your message...\"\n                  rows={1}\n                  className=\"w-full px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent resize-none\"\n                  disabled={isLoading}\n                />\n              </div>\n              \n              <button\n                onClick={sendMessage}\n                disabled={!inputMessage.trim() || isLoading}\n                className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\n              >\n                Send\n              </button>\n              \n              <button\n                onClick={isRecording ? stopRecording : startRecording}\n                disabled={isLoading}\n                className={`px-4 py-2 rounded-lg transition-colors ${\n                  isRecording\n                    ? 'bg-red-600 text-white hover:bg-red-700'\n                    : 'bg-gray-600 text-white hover:bg-gray-700'\n                } disabled:opacity-50 disabled:cursor-not-allowed`}\n              >\n                {isRecording ? '⏹️' : '🎤'}\n              </button>\n            </div>\n            \n            <div className=\"flex items-center justify-between mt-2\">\n              <div className=\"flex items-center space-x-4 text-sm text-gray-500\">\n                <label className=\"flex items-center\">\n                  <input\n                    type=\"checkbox\"\n                    checked={showCorrections}\n                    onChange={(e) => setShowCorrections(e.target.checked)}\n                    className=\"mr-2\"\n                  />\n                  Show corrections\n                </label>\n              </div>\n              \n              {session && (\n                <div className=\"text-sm text-gray-500\">\n                  Session time: {Math.floor((Date.now() - new Date(session.startedAt).getTime()) / 1000 / 60)}m\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n\n        {/* Skills Progress */}\n        {session && (\n          <div className=\"mt-6 bg-white rounded-lg shadow-md p-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Skills Progress</h3>\n            <div className=\"grid grid-cols-2 md:grid-cols-5 gap-4\">\n              {Object.entries(session.skills).map(([skill, score]) => (\n                <div key={skill} className=\"text-center\">\n                  <div className=\"text-2xl font-bold text-blue-600\">{score}%</div>\n                  <div className=\"text-sm text-gray-600 capitalize\">{skill}</div>\n                  <div className=\"w-full bg-gray-200 rounded-full h-2 mt-2\">\n                    <div\n                      className=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\n                      style={{ width: `${score}%` }}\n                    ></div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}; ","import React from 'react';\nimport Head from 'next/head';\nimport { AITutoringInterface } from '../../src/features/aiFeatures/view/AITutoringInterface';\nimport { useAuthContext } from '@/context/AuthContext';\nimport { useRouter } from 'next/router';\nimport { useEffect } from 'react';\n\nexport default function AITutoringPage() {\n  const { user, loading } = useAuthContext();\n  const router = useRouter();\n\n  useEffect(() => {\n    if (!loading && !user) {\n      router.push('/login');\n    }\n  }, [user, loading, router]);\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">Loading...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (!user) {\n    return null;\n  }\n\n  return (\n    <>\n      <Head>\n        <title>AI Tutoring - Verbfy</title>\n        <meta name=\"description\" content=\"Start your AI-powered English tutoring session\" />\n      </Head>\n\n      <AITutoringInterface\n        sessionType=\"conversation\"\n        onComplete={(session) => {\n          console.log('AI session completed:', session);\n          router.push(`/ai-tutoring/session/${session._id}/results`);\n        }}\n      />\n    </>\n  );\n} "],"names":["window","__NEXT_P","push","__webpack_require__","AITutoringInterface","sessionType","onComplete","param","router","useRouter","user","useAuthContext","session","setSession","useState","messages","setMessages","inputMessage","setInputMessage","isLoading","setIsLoading","sessionLoading","setSessionLoading","isRecording","setIsRecording","showCorrections","setShowCorrections","messagesEndRef","useRef","useEffect","initializeSession","scrollToBottom","current","scrollIntoView","behavior","_aiFeaturesAPI_startTutoringSession","newSession","api","qV","startTutoringSession","call","aiFeaturesAPI","cefrLevel","setTimeout","error","console","sendMessage","trim","userMessage","_id","Date","now","toString","role","content","timestamp","toISOString","messageType","prev","_aiFeaturesAPI_sendTutoringMessage","response","sendTutoringMessage","message","errorMessage","startRecording","audioMessage","audioUrl","endSession","completedSession","endTutoringSession","concat","jsx_runtime","jsx","div","className","jsxs","p","icons","conversation","grammar","pronunciation","writing","reading","listening","h1","span","colors","button","onClick","map","corrections","length","correction","index","original","corrected","explanation","suggestions","suggestion","audio","controls","source","src","type","toLocaleTimeString","style","animationDelay","ref","textarea","value","onChange","e","target","onKeyPress","key","shiftKey","preventDefault","placeholder","rows","disabled","label","input","checked","Math","floor","startedAt","getTime","h3","Object","entries","skills","skill","score","width","AITutoringPage","loading","Fragment","Head","title","meta","name","log"],"sourceRoot":""}