{"version":3,"file":"static/chunks/pages/student/reserve-fae5e9b59aca6031.js","mappings":"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","sources":["webpack://_N_E/?5e61","webpack://_N_E/./src/components/student/TeacherAvailabilityView.tsx","webpack://_N_E/./pages/student/reserve.tsx","webpack://_N_E/./src/lib/toast.ts"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/student/reserve\",\n      function () {\n        return require(\"private-next-pages/student/reserve.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/student/reserve\"])\n      });\n    }\n  ","import React, { useState, useEffect } from 'react';\nimport api from '@/lib/api';\nimport { toastError, toastSuccess } from '@/lib/toast';\nimport { useAuthContext } from '@/context/AuthContext';\n\ninterface TimeSlot {\n  _id: string;\n  dayOfWeek: number;\n  startTime: string;\n  endTime: string;\n  teacherTimezone: string;\n  studentTimezone?: string;\n  originalStartTime?: string;\n  originalEndTime?: string;\n  originalDayOfWeek?: number;\n}\n\ninterface TeacherAvailabilityViewProps {\n  teacherId: string;\n  teacherName: string;\n  onBookingComplete?: (booking: any) => void;\n}\n\nconst DAYS = [\n  { name: 'Sunday', value: 0, short: 'Sun' },\n  { name: 'Monday', value: 1, short: 'Mon' },\n  { name: 'Tuesday', value: 2, short: 'Tue' },\n  { name: 'Wednesday', value: 3, short: 'Wed' },\n  { name: 'Thursday', value: 4, short: 'Thu' },\n  { name: 'Friday', value: 5, short: 'Fri' },\n  { name: 'Saturday', value: 6, short: 'Sat' },\n];\n\nconst LESSON_TYPES = [\n  { value: 'VerbfySpeak', label: 'VerbfySpeak', description: 'Conversation & Speaking Practice' },\n  { value: 'VerbfyListen', label: 'VerbfyListen', description: 'Listening Comprehension' },\n  { value: 'VerbfyRead', label: 'VerbfyRead', description: 'Reading & Comprehension' },\n  { value: 'VerbfyWrite', label: 'VerbfyWrite', description: 'Writing & Composition' },\n  { value: 'VerbfyGrammar', label: 'VerbfyGrammar', description: 'Grammar & Structure' },\n  { value: 'VerbfyExam', label: 'VerbfyExam', description: 'Exam Preparation' },\n];\n\nconst LESSON_LEVELS = [\n  { value: 'Beginner', label: 'Beginner', description: 'Basic English skills' },\n  { value: 'Intermediate', label: 'Intermediate', description: 'Intermediate English skills' },\n  { value: 'Advanced', label: 'Advanced', description: 'Advanced English skills' },\n];\n\nconst TeacherAvailabilityView: React.FC<TeacherAvailabilityViewProps> = ({\n  teacherId,\n  teacherName,\n  onBookingComplete\n}) => {\n  const { user } = useAuthContext();\n  const [availability, setAvailability] = useState<TimeSlot[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedSlot, setSelectedSlot] = useState<TimeSlot | null>(null);\n  const [selectedDate, setSelectedDate] = useState<string>('');\n  const [studentTimezone, setStudentTimezone] = useState<string>('');\n  const [selectedLessonType, setSelectedLessonType] = useState<string>('VerbfySpeak');\n  const [selectedLessonLevel, setSelectedLessonLevel] = useState<string>('Intermediate');\n  const [booking, setBooking] = useState(false);\n\n  useEffect(() => {\n    const timezone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n    setStudentTimezone(timezone);\n    loadAvailability(timezone);\n  }, [teacherId]);\n\n  const loadAvailability = async (timezone: string) => {\n    setLoading(true);\n    try {\n      const response = await api.get(`/api/availability/${teacherId}/available`, {\n        params: { studentTimezone: timezone }\n      });\n      setAvailability(response.data);\n    } catch (error) {\n      console.error('Error loading teacher availability:', error);\n      toastError('Failed to load teacher availability');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSlotSelect = (slot: TimeSlot) => {\n    setSelectedSlot(slot);\n    // Calculate the next occurrence of this day\n    const nextDate = getNextOccurrenceOfDay(slot.dayOfWeek, slot.startTime);\n    setSelectedDate(nextDate.toISOString().split('T')[0]);\n  };\n\n  const getNextOccurrenceOfDay = (dayOfWeek: number, time: string): Date => {\n    const now = new Date();\n    const [hours, minutes] = time.split(':').map(Number);\n    \n    const currentDay = now.getDay();\n    let daysToAdd = (dayOfWeek - currentDay + 7) % 7;\n    \n    if (daysToAdd === 0 && (now.getHours() > hours || (now.getHours() === hours && now.getMinutes() >= minutes))) {\n      daysToAdd = 7;\n    }\n    \n    const targetDate = new Date(now);\n    targetDate.setDate(now.getDate() + daysToAdd);\n    targetDate.setHours(hours, minutes, 0, 0);\n    \n    return targetDate;\n  };\n\n  const handleBookLesson = async () => {\n    if (!selectedSlot || !selectedDate) {\n      toastError('Please select a time slot and date');\n      return;\n    }\n\n    setBooking(true);\n    \n    try {\n      console.log('Booking lesson:', {\n        teacherId,\n        slotId: selectedSlot._id,\n        actualDate: selectedDate,\n        studentTimezone,\n        lessonType: selectedLessonType,\n        lessonLevel: selectedLessonLevel\n      });\n\n      const response = await api.post('/api/reservations/reserve', {\n        teacherId,\n        slotId: selectedSlot._id,\n        actualDate: selectedDate,\n        studentTimezone,\n        lessonType: selectedLessonType,\n        lessonLevel: selectedLessonLevel\n      });\n\n      console.log('Booking successful:', response.data);\n      \n      toastSuccess('Lesson booked successfully!');\n      \n      if (onBookingComplete) {\n        onBookingComplete(response.data.reservation);\n      }\n      \n      // Clear selection\n      setSelectedSlot(null);\n      setSelectedDate('');\n      setSelectedLessonType('VerbfySpeak');\n      setSelectedLessonLevel('Intermediate');\n      \n      // Reload availability to reflect the booking\n      await loadAvailability(studentTimezone);\n      \n    } catch (error: any) {\n      console.error('Error booking lesson:', error);\n      \n      // Handle specific error cases\n      if (error.response?.status === 409) {\n        const errorMessage = error.response?.data?.message || 'This time slot is no longer available';\n        toastError(errorMessage);\n        \n        // Reload availability to get updated slot status\n        await loadAvailability(studentTimezone);\n      } else if (error.response?.status === 400) {\n        const errorMessage = error.response?.data?.message || 'Invalid booking request';\n        toastError(errorMessage);\n      } else if (error.response?.status === 403) {\n        const errorMessage = error.response?.data?.message || 'You are not authorized to book this lesson';\n        toastError(errorMessage);\n      } else {\n        const errorMessage = error.response?.data?.message || 'Failed to book lesson. Please try again.';\n        toastError(errorMessage);\n      }\n    } finally {\n      setBooking(false);\n    }\n  };\n\n  const formatTime = (time: string) => {\n    const [hours, minutes] = time.split(':');\n    const hour = parseInt(hours);\n    const ampm = hour >= 12 ? 'PM' : 'AM';\n    const displayHour = hour % 12 || 12;\n    return `${displayHour}:${minutes} ${ampm}`;\n  };\n\n  const getDayName = (dayOfWeek: number) => {\n    return DAYS.find(day => day.value === dayOfWeek)?.name || 'Unknown';\n  };\n\n  const slotsByDay = availability.reduce((acc, slot) => {\n    const day = slot.dayOfWeek;\n    if (!acc[day]) {\n      acc[day] = [];\n    }\n    acc[day].push(slot);\n    return acc;\n  }, {} as Record<number, TimeSlot[]>);\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  if (availability.length === 0) {\n    return (\n      <div className=\"bg-white rounded-lg shadow-lg p-6\">\n        <div className=\"text-center py-8\">\n          <div className=\"text-gray-500 text-lg mb-2\">No available time slots</div>\n          <p className=\"text-gray-400 text-sm\">\n            {teacherName} hasn't set their availability yet.\n          </p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-lg p-6\">\n      {/* Header with Timezone Info */}\n      <div className=\"mb-6\">\n        <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">Available Time Slots</h3>\n        <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\n          <p className=\"text-gray-600 text-sm\">\n            All times are shown in your local timezone: <strong>{studentTimezone}</strong>\n          </p>\n          {availability.length > 0 && (\n            <div className=\"text-sm text-gray-500\">\n              {availability.length} available slot{availability.length !== 1 ? 's' : ''}\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Timezone Conversion Notice */}\n      {availability.some(slot => slot.teacherTimezone !== studentTimezone) && (\n        <div className=\"mb-4 p-3 bg-blue-50 border border-blue-200 rounded-lg\">\n          <div className=\"text-sm text-blue-800\">\n            <div className=\"font-medium mb-1\">⏰ Timezone Conversion</div>\n            <div className=\"text-xs\">\n              Times have been converted from teacher's timezone ({availability[0]?.teacherTimezone})\n              to your timezone ({studentTimezone})\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Available Slots */}\n      <div className=\"space-y-4\">\n        {DAYS.map(day => {\n          const daySlots = slotsByDay[day.value] || [];\n          if (daySlots.length === 0) return null;\n\n          return (\n            <div key={day.value} className=\"border border-gray-200 rounded-lg overflow-hidden\">\n              <div className=\"bg-gray-50 px-4 py-3 border-b border-gray-200\">\n                <h4 className=\"font-medium text-gray-900\">{day.name}</h4>\n              </div>\n              <div className=\"p-4\">\n                <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-3\">\n                  {daySlots.map(slot => (\n                    <button\n                      key={slot._id}\n                      onClick={() => handleSlotSelect(slot)}\n                      className={`\n                        p-3 text-left rounded-lg border transition-all duration-200\n                        ${selectedSlot?._id === slot._id\n                          ? 'border-blue-500 bg-blue-50 text-blue-700'\n                          : 'border-gray-200 bg-white text-gray-700 hover:border-blue-300 hover:bg-blue-50'\n                        }\n                      `}\n                    >\n                      <div className=\"font-medium\">\n                        {formatTime(slot.startTime)} - {formatTime(slot.endTime)}\n                      </div>\n                      <div className=\"text-xs text-gray-500 mt-1\">\n                        {slot.originalStartTime && slot.originalEndTime && (\n                          <span>\n                            Teacher's time: {formatTime(slot.originalStartTime)} - {formatTime(slot.originalEndTime)}\n                          </span>\n                        )}\n                      </div>\n                    </button>\n                  ))}\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n\n      {/* Booking Section */}\n      {selectedSlot && (\n        <div className=\"mt-6 p-4 bg-green-50 border border-green-200 rounded-lg\">\n          <div className=\"space-y-4\">\n            <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4\">\n              <div>\n                <div className=\"font-medium text-green-800\">Selected Time Slot</div>\n                <div className=\"text-sm text-green-700\">\n                  {getDayName(selectedSlot.dayOfWeek)} at {formatTime(selectedSlot.startTime)} - {formatTime(selectedSlot.endTime)}\n                </div>\n                <div className=\"text-xs text-green-600 mt-1\">\n                  Next occurrence: {selectedDate ? new Date(selectedDate).toLocaleDateString() : 'Calculating...'}\n                </div>\n              </div>\n            </div>\n\n            {/* Lesson Type Selection */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Lesson Type\n              </label>\n              <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-2\">\n                {LESSON_TYPES.map(type => (\n                  <button\n                    key={type.value}\n                    onClick={() => setSelectedLessonType(type.value)}\n                    className={`\n                      p-3 text-left rounded-lg border transition-all duration-200\n                      ${selectedLessonType === type.value\n                        ? 'border-blue-500 bg-blue-50 text-blue-700'\n                        : 'border-gray-200 bg-white text-gray-700 hover:border-blue-300 hover:bg-blue-50'\n                      }\n                    `}\n                  >\n                    <div className=\"font-medium text-sm\">{type.label}</div>\n                    <div className=\"text-xs text-gray-500 mt-1\">{type.description}</div>\n                  </button>\n                ))}\n              </div>\n            </div>\n\n            {/* Lesson Level Selection */}\n            <div>\n              <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                Lesson Level\n              </label>\n              <div className=\"grid grid-cols-1 sm:grid-cols-3 gap-2\">\n                {LESSON_LEVELS.map(level => (\n                  <button\n                    key={level.value}\n                    onClick={() => setSelectedLessonLevel(level.value)}\n                    className={`\n                      p-3 text-center rounded-lg border transition-all duration-200\n                      ${selectedLessonLevel === level.value\n                        ? 'border-blue-500 bg-blue-50 text-blue-700'\n                        : 'border-gray-200 bg-white text-gray-700 hover:border-blue-300 hover:bg-blue-50'\n                      }\n                    `}\n                  >\n                    <div className=\"font-medium text-sm\">{level.label}</div>\n                    <div className=\"text-xs text-gray-500 mt-1\">{level.description}</div>\n                  </button>\n                ))}\n              </div>\n            </div>\n\n            {/* Action Buttons */}\n            <div className=\"flex gap-2 pt-2\">\n              <button\n                onClick={() => {\n                  setSelectedSlot(null);\n                  setSelectedDate('');\n                  setSelectedLessonType('VerbfySpeak');\n                  setSelectedLessonLevel('Intermediate');\n                }}\n                className=\"px-3 py-1.5 text-sm text-green-600 hover:text-green-800 border border-green-300 rounded-md hover:bg-green-100 transition-colors\"\n              >\n                Clear Selection\n              </button>\n              <button\n                onClick={handleBookLesson}\n                disabled={booking || !selectedDate}\n                className={`\n                  px-4 py-1.5 text-sm font-medium text-white rounded-md transition-colors\n                  ${booking || !selectedDate\n                    ? 'bg-gray-400 cursor-not-allowed'\n                    : 'bg-green-600 hover:bg-green-700'\n                  }\n                `}\n              >\n                {booking ? (\n                  <span className=\"flex items-center gap-1.5\">\n                    <div className=\"animate-spin rounded-full h-3 w-3 border-b-2 border-white\"></div>\n                    Booking...\n                  </span>\n                ) : (\n                  'Book Lesson'\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Instructions */}\n      <div className=\"mt-6 p-4 bg-gray-50 rounded-lg\">\n        <h4 className=\"font-medium text-gray-900 mb-2\">How to Book</h4>\n        <div className=\"text-sm text-gray-600 space-y-1\">\n          <p>• Click on any available time slot to select it</p>\n          <p>• The selected slot will be highlighted in blue</p>\n          <p>• Click \"Book Lesson\" to confirm your booking</p>\n          <p>• All times are shown in your local timezone</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TeacherAvailabilityView; ","import React, { useState, useEffect } from 'react';\r\nimport Head from 'next/head';\r\nimport { useRouter } from 'next/router';\r\nimport DashboardLayout from '@/components/layout/DashboardLayout';\r\nimport TeacherAvailabilityView from '@/components/student/TeacherAvailabilityView';\r\nimport { useAuthContext } from '@/context/AuthContext';\r\nimport api from '@/lib/api';\r\nimport { toastError, toastSuccess } from '@/lib/toast';\r\n\r\ninterface Teacher {\r\n  _id: string;\r\n  name: string;\r\n  email: string;\r\n  specialty?: string;\r\n  rating?: number;\r\n}\r\n\r\ninterface Booking {\r\n  id: string;\r\n  teacher: Teacher;\r\n  date: string;\r\n  startTime: string;\r\n  endTime: string;\r\n  status: string;\r\n}\r\n\r\nconst StudentReservePage: React.FC = () => {\r\n  const { user } = useAuthContext();\r\n  const router = useRouter();\r\n  const [teachers, setTeachers] = useState<Teacher[]>([]);\r\n  const [selectedTeacher, setSelectedTeacher] = useState<Teacher | null>(null);\r\n  const [loadingTeachers, setLoadingTeachers] = useState(true);\r\n  const [bookingComplete, setBookingComplete] = useState(false);\r\n  const [recentBooking, setRecentBooking] = useState<Booking | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (user && user.role !== 'student') {\r\n      router.replace('/dashboard');\r\n      return;\r\n    }\r\n    loadTeachers();\r\n  }, [user, router]);\r\n\r\n  const loadTeachers = async () => {\r\n    setLoadingTeachers(true);\r\n    try {\r\n      const response = await api.get('/api/users/teachers');\r\n      setTeachers(response.data);\r\n    } catch (error) {\r\n      console.error('Error loading teachers:', error);\r\n      toastError('Failed to load teachers');\r\n    } finally {\r\n      setLoadingTeachers(false);\r\n    }\r\n  };\r\n\r\n  const handleTeacherSelect = (teacher: Teacher) => {\r\n    setSelectedTeacher(teacher);\r\n    setBookingComplete(false);\r\n    setRecentBooking(null);\r\n  };\r\n\r\n  const handleBookingComplete = (booking: Booking) => {\r\n    setBookingComplete(true);\r\n    setRecentBooking(booking);\r\n    toastSuccess(`Lesson booked successfully with ${booking.teacher.name}!`);\r\n  };\r\n\r\n  const handleViewMyBookings = () => {\r\n    router.push('/student/bookings');\r\n  };\r\n\r\n  if (loadingTeachers) {\r\n    return (\r\n      <DashboardLayout allowedRoles={['student']}>\r\n        <div className=\"flex items-center justify-center h-64\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\r\n        </div>\r\n      </DashboardLayout>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>Book a Lesson - Verbfy</title>\r\n        <meta name=\"description\" content=\"Book a lesson with one of our expert teachers\" />\r\n      </Head>\r\n\r\n      <DashboardLayout allowedRoles={['student']}>\r\n        <div className=\"space-y-6\">\r\n          {/* Page Header */}\r\n          <div className=\"bg-white rounded-lg shadow-sm p-6\">\r\n            <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Book a Lesson</h1>\r\n            <p className=\"text-gray-600\">\r\n              Choose a teacher and select an available time slot to book your lesson.\r\n            </p>\r\n          </div>\r\n\r\n          {/* Success Message */}\r\n          {bookingComplete && recentBooking && (\r\n            <div className=\"bg-green-50 border border-green-200 rounded-lg p-6\">\r\n              <div className=\"flex items-start\">\r\n                <div className=\"flex-shrink-0\">\r\n                  <div className=\"w-8 h-8 bg-green-100 rounded-full flex items-center justify-center\">\r\n                    <span className=\"text-green-600 text-lg\">✓</span>\r\n                  </div>\r\n                </div>\r\n                <div className=\"ml-3 flex-1\">\r\n                  <h3 className=\"text-lg font-medium text-green-800\">Booking Confirmed!</h3>\r\n                  <div className=\"mt-2 text-sm text-green-700\">\r\n                    <p>Your lesson with <strong>{recentBooking.teacher.name}</strong> has been booked successfully.</p>\r\n                    <p className=\"mt-1\">\r\n                      <strong>Date:</strong> {new Date(recentBooking.date).toLocaleDateString()} at {recentBooking.startTime}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"mt-4 flex gap-3\">\r\n                    <button\r\n                      onClick={handleViewMyBookings}\r\n                      className=\"px-4 py-2 text-sm font-medium text-green-700 bg-green-100 border border-green-300 rounded-md hover:bg-green-200 transition-colors\"\r\n                    >\r\n                      View My Bookings\r\n                    </button>\r\n                    <button\r\n                      onClick={() => {\r\n                        setBookingComplete(false);\r\n                        setRecentBooking(null);\r\n                        setSelectedTeacher(null);\r\n                      }}\r\n                      className=\"px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 transition-colors\"\r\n                    >\r\n                      Book Another Lesson\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Teacher Selection */}\r\n          {!bookingComplete && (\r\n            <div className=\"bg-white rounded-lg shadow-sm p-6\">\r\n              <h2 className=\"text-xl font-semibold text-gray-900 mb-4\">Select a Teacher</h2>\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n                {teachers.map((teacher) => (\r\n                  <button\r\n                    key={teacher._id}\r\n                    onClick={() => handleTeacherSelect(teacher)}\r\n                    className={`\r\n                      p-4 rounded-lg border-2 transition-all duration-200 text-left\r\n                      ${selectedTeacher?._id === teacher._id\r\n                        ? 'border-blue-500 bg-blue-50'\r\n                        : 'border-gray-200 hover:border-gray-300 hover:bg-gray-50'\r\n                      }\r\n                    `}\r\n                  >\r\n                    <div className=\"flex items-center space-x-3\">\r\n                      <div className=\"w-12 h-12 bg-gradient-to-r from-blue-500 to-purple-600 rounded-full flex items-center justify-center\">\r\n                        <span className=\"text-white font-semibold\">\r\n                          {teacher.name.charAt(0).toUpperCase()}\r\n                        </span>\r\n                      </div>\r\n                      <div>\r\n                        <h3 className=\"font-semibold text-gray-900\">{teacher.name}</h3>\r\n                        <p className=\"text-sm text-gray-600\">{teacher.specialty || 'General English'}</p>\r\n                        {teacher.rating && (\r\n                          <div className=\"flex items-center mt-1\">\r\n                            <span className=\"text-yellow-400\">★</span>\r\n                            <span className=\"text-sm text-gray-600 ml-1\">{teacher.rating}</span>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Teacher Availability */}\r\n          {selectedTeacher && !bookingComplete && (\r\n            <TeacherAvailabilityView\r\n              teacherId={selectedTeacher._id}\r\n              teacherName={selectedTeacher.name}\r\n              onBookingComplete={handleBookingComplete}\r\n            />\r\n          )}\r\n\r\n          {/* Instructions */}\r\n          {!selectedTeacher && !bookingComplete && (\r\n            <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-6\">\r\n              <h3 className=\"text-lg font-medium text-blue-800 mb-2\">How to Book a Lesson</h3>\r\n              <div className=\"text-sm text-blue-700 space-y-2\">\r\n                <p>1. <strong>Select a Teacher:</strong> Choose from our qualified English teachers above</p>\r\n                <p>2. <strong>View Availability:</strong> See the teacher's available time slots</p>\r\n                <p>3. <strong>Choose a Time:</strong> Click on an available slot that works for you</p>\r\n                <p>4. <strong>Confirm Booking:</strong> Review and confirm your lesson booking</p>\r\n                <p>5. <strong>Get Ready:</strong> You'll receive confirmation and can join your lesson at the scheduled time</p>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </DashboardLayout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StudentReservePage; ","// Toast implementation that integrates with the existing Toast component system\r\nimport { toast } from '../components/common/Toast';\r\n\r\nexport const toastError = (message: string) => {\r\n  toast.error(message);\r\n};\r\n\r\nexport const toastSuccess = (message: string) => {\r\n  toast.success(message);\r\n};\r\n\r\nexport const toastWarning = (message: string) => {\r\n  toast.warning(message);\r\n};\r\n\r\nexport const toastInfo = (message: string) => {\r\n  toast.info(message);\r\n}; "],"names":["window","__NEXT_P","push","__webpack_require__","DAYS","name","value","short","LESSON_TYPES","label","description","LESSON_LEVELS","student_TeacherAvailabilityView","availability","dayOfWeek","teacherId","teacherName","onBookingComplete","param","user","useAuthContext","setAvailability","useState","loading","setLoading","selectedSlot","setSelectedSlot","selectedDate","setSelectedDate","studentTimezone","setStudentTimezone","selectedLessonType","setSelectedLessonType","selectedLessonLevel","setSelectedLessonLevel","booking","setBooking","useEffect","timezone","Intl","DateTimeFormat","resolvedOptions","timeZone","loadAvailability","response","api","get","concat","params","data","error","console","toastError","handleSlotSelect","slot","nextDate","startTime","toISOString","split","getNextOccurrenceOfDay","time","now","Date","hours","minutes","map","Number","daysToAdd","getDay","getHours","getMinutes","targetDate","setDate","getDate","setHours","handleBookLesson","log","slotId","_id","actualDate","lessonType","lessonLevel","post","toastSuccess","reservation","status","errorMessage","message","formatTime","hour","parseInt","ampm","slotsByDay","reduce","acc","day","jsx_runtime","jsx","div","className","length","jsxs","p","h3","strong","some","teacherTimezone","daySlots","h4","button","onClick","endTime","originalStartTime","originalEndTime","span","find","toLocaleDateString","type","level","disabled","reserve","router","useRouter","teachers","setTeachers","selectedTeacher","setSelectedTeacher","loadingTeachers","setLoadingTeachers","bookingComplete","setBookingComplete","recentBooking","setRecentBooking","role","replace","loadTeachers","handleTeacherSelect","teacher","DashboardLayout","allowedRoles","Fragment","Head","title","meta","content","h1","date","h2","charAt","toUpperCase","specialty","rating","TeacherAvailabilityView","toast","success"],"sourceRoot":""}