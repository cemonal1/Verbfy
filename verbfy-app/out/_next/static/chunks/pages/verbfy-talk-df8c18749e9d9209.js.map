{"version":3,"file":"static/chunks/pages/verbfy-talk-df8c18749e9d9209.js","mappings":"sFACA,CAAAA,OAAAC,QAAA,CAAAD,OAAAC,QAAA,MAAAC,IAAA,EACA,eACA,WACA,OAAeC,EAAQ,MACvB,EACA,oLCoZAC,CAAAA,EAAA,QA3YA,WACE,IAAMC,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,IACT,CAACC,EAAOC,EAAS,CAAGC,CAAAA,EAAAA,EAAAA,QAAAA,EAA2B,EAAE,EACjD,CAACC,EAASC,EAAW,CAAGF,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IACjC,CAACG,EAAiBC,EAAmB,CAAGJ,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IACjD,CAACK,EAASC,EAAW,CAAGN,CAAAA,EAAAA,EAAAA,QAAAA,EAAsB,CAClDO,MAAO,MACPC,UAAW,GACXC,KAAM,EACNC,MAAO,EACT,GACM,CAACC,EAAYC,EAAc,CAAGZ,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,CAC3CS,KAAM,EACNC,MAAO,GACPG,MAAO,EACPC,MAAO,CACT,GACM,CAACC,EAAMC,EAAQ,CAAGhB,CAAAA,EAAAA,EAAAA,QAAAA,EAAyB,CAC/CiB,KAAM,GACNC,YAAa,GACbV,UAAW,GACXW,SAAU,GACVC,MAAO,GACPb,MAAO,QACPc,gBAAiB,CACnB,GAEAC,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,KACRC,GACF,EAAG,CAAClB,EAAQ,EAEZ,IAAMkB,EAAY,UAChB,GAAI,CACFrB,EAAW,IACX,IAAMsB,EAAW,MAAMC,EAAAA,EAAaA,CAACC,QAAQ,CAACrB,GAC9CN,EAASyB,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAUG,IAAI,GAAI,EAAE,EAC7Bf,EAAcY,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAUb,UAAU,GAAI,CACpCF,KAAM,EACNC,MAAO,GACPG,MAAO,EACPC,MAAO,CACT,EACF,CAAE,MAAOc,EAAO,CACdC,QAAQD,KAAK,CAAC,uBAAwBA,GACtCE,EAAAA,EAAKA,CAACF,KAAK,CAAC,wBACZ7B,EAAS,EAAE,EACXa,EAAc,CACZH,KAAM,EACNC,MAAO,GACPG,MAAO,EACPC,MAAO,CACT,EACF,QAAU,CACRZ,EAAW,GACb,CACF,EAEM6B,EAAmB,MAAOC,IAC9BA,EAAEC,cAAc,GAChB,GAAI,CACF,IAAMC,EAAW,CAAE,GAAGnB,CAAI,CACrBmB,CAAAA,EAAS1B,SAAS,EACrB,OAAO0B,EAASf,QAAQ,CAG1B,IAAMK,EAAW,MAAMC,EAAAA,EAAaA,CAACU,UAAU,CAACD,GAChDJ,EAAAA,EAAKA,CAACM,OAAO,CAAC,8BACdhC,EAAmB,IACnBY,EAAQ,CACNC,KAAM,GACNC,YAAa,GACbV,UAAW,GACXW,SAAU,GACVC,MAAO,GACPb,MAAO,QACPc,gBAAiB,CACnB,GACAE,IAGA3B,EAAOH,IAAI,CAAC,gBAAkC4C,MAAA,CAAlBb,EAASG,IAAI,CAACW,GAAG,EAC/C,CAAE,MAAOV,EAAY,KACPA,EAAAA,EAAZE,EAAAA,EAAKA,CAACF,KAAK,CAACA,CAAAA,OAAAA,CAAAA,EAAAA,EAAMJ,QAAQ,GAAdI,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAgBD,IAAI,GAApBC,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAsBW,OAAO,GAAI,wBAC/C,CACF,EAEMC,EAAiB,IACrB,GAAIC,EAAKjC,SAAS,CAAE,CAClB,IAAMW,EAAWuB,OAAO,wBACpBvB,GACFwB,EAASF,EAAKH,GAAG,CAAEnB,EAEvB,MACEwB,EAASF,EAAKH,GAAG,CAErB,EAEMK,EAAW,MAAOC,EAAgBzB,KACtC,GAAI,CAEFvB,EAAOH,IAAI,CAAC,gBAAuB4C,MAAA,CAAPO,GAC9B,CAAE,MAAOhB,EAAY,CACnBE,EAAAA,EAAKA,CAACF,KAAK,CAAC,sBACd,CACF,EAEMiB,EAAe,IACnB,OAAQtC,GACN,IAAK,WACH,MAAO,GAAAuC,EAAAC,GAAA,EAACC,EAAAA,CAAeA,CAAAA,CAACC,UAAU,0BACpC,KAAK,eACH,MAAO,GAAAH,EAAAC,GAAA,EAACC,EAAAA,CAAeA,CAAAA,CAACC,UAAU,2BACpC,KAAK,WACH,MAAO,GAAAH,EAAAC,GAAA,EAACC,EAAAA,CAAeA,CAAAA,CAACC,UAAU,wBACpC,SACE,MAAO,GAAAH,EAAAC,GAAA,EAACC,EAAAA,CAAeA,CAAAA,CAACC,UAAU,yBACtC,CACF,EAEMC,EAAgB,IACpB,OAAQ3C,GACN,IAAK,WACH,MAAO,6BACT,KAAK,eACH,MAAO,+BACT,KAAK,WACH,MAAO,yBACT,SACE,MAAO,2BACX,CACF,EAEA,MACE,GAAAuC,EAAAC,GAAA,EAACI,EAAAA,CAAeA,CAAAA,UACd,GAAAL,EAAAM,IAAA,EAACC,MAAAA,CAAIJ,UAAU,wDAEb,GAAAH,EAAAM,IAAA,EAACC,MAAAA,CAAIJ,UAAU,mDACb,GAAAH,EAAAM,IAAA,EAACC,MAAAA,WACC,GAAAP,EAAAM,IAAA,EAACE,KAAAA,CAAGL,UAAU,qEACZ,GAAAH,EAAAC,GAAA,EAACQ,EAAAA,CAAuBA,CAAAA,CAACN,UAAU,0BAA0B,gBAG/D,GAAAH,EAAAC,GAAA,EAACS,IAAAA,CAAEP,UAAU,8BAAqB,mDAEpC,GAAAH,EAAAM,IAAA,EAACK,SAAAA,CACCC,QAAS,IAAMtD,EAAmB,IAClC6C,UAAU,oHAEV,GAAAH,EAAAC,GAAA,EAACY,EAAAA,CAAQA,CAAAA,CAACV,UAAU,YAAY,oBAMpC,GAAAH,EAAAC,GAAA,EAACM,MAAAA,CAAIJ,UAAU,yDACb,GAAAH,EAAAM,IAAA,EAACC,MAAAA,CAAIJ,UAAU,iCACb,GAAAH,EAAAM,IAAA,EAACQ,SAAAA,CACCC,MAAOxD,EAAQE,KAAK,CACpBuD,SAAU,GAAOxD,EAAW,CAAE,GAAGD,CAAO,CAAEE,MAAOyB,EAAE+B,MAAM,CAACF,KAAK,GAC/DZ,UAAU,4GAEV,GAAAH,EAAAC,GAAA,EAACiB,SAAAA,CAAOH,MAAM,eAAM,eACpB,GAAAf,EAAAC,GAAA,EAACiB,SAAAA,CAAOH,MAAM,oBAAW,aACzB,GAAAf,EAAAC,GAAA,EAACiB,SAAAA,CAAOH,MAAM,wBAAe,iBAC7B,GAAAf,EAAAC,GAAA,EAACiB,SAAAA,CAAOH,MAAM,oBAAW,aACzB,GAAAf,EAAAC,GAAA,EAACiB,SAAAA,CAAOH,MAAM,iBAAQ,aAGxB,GAAAf,EAAAM,IAAA,EAACa,QAAAA,CAAMhB,UAAU,oCACf,GAAAH,EAAAC,GAAA,EAACmB,QAAAA,CACCC,KAAK,WACLC,QAAS/D,EAAQG,SAAS,CAC1BsD,SAAU,GAAOxD,EAAW,CAAE,GAAGD,CAAO,CAAEG,UAAWwB,EAAE+B,MAAM,CAACK,OAAO,GACrEnB,UAAU,YAEZ,GAAAH,EAAAC,GAAA,EAACsB,OAAAA,CAAKpB,UAAU,iCAAwB,+BAM7ChD,EACC,GAAA6C,EAAAC,GAAA,EAACM,MAAAA,CAAIJ,UAAU,gEACZ,IAAIqB,MAAM,GAAG,CAACC,GAAG,CAAC,CAACC,EAAGC,IACrB,GAAA3B,EAAAM,IAAA,EAACC,MAAAA,CAAYJ,UAAU,mEACrB,GAAAH,EAAAC,GAAA,EAACM,MAAAA,CAAIJ,UAAU,iCACf,GAAAH,EAAAC,GAAA,EAACM,MAAAA,CAAIJ,UAAU,iCACf,GAAAH,EAAAC,GAAA,EAACM,MAAAA,CAAIJ,UAAU,oCAHPwB,MAQd,GAAA3B,EAAAC,GAAA,EAACM,MAAAA,CAAIJ,UAAU,gEACZnD,MAAAA,EAAAA,KAAAA,EAAAA,EAAOyE,GAAG,CAAC,QAkCwD9B,QAjClE,GAAAK,EAAAM,IAAA,EAACC,MAAAA,CAAmBJ,UAAU,uFAC5B,GAAAH,EAAAM,IAAA,EAACC,MAAAA,CAAIJ,UAAU,kDACb,GAAAH,EAAAC,GAAA,EAAC2B,KAAAA,CAAGzB,UAAU,wDAAgDR,EAAKxB,IAAI,GACtEwB,EAAKjC,SAAS,CACb,GAAAsC,EAAAC,GAAA,EAAC4B,EAAAA,CAAcA,CAAAA,CAAC1B,UAAU,wCAE1B,GAAAH,EAAAC,GAAA,EAAC6B,EAAAA,CAAYA,CAAAA,CAAC3B,UAAU,2CAI5B,GAAAH,EAAAC,GAAA,EAACS,IAAAA,CAAEP,UAAU,mDAA2CR,EAAKvB,WAAW,GAEvEuB,EAAKrB,KAAK,EACT,GAAA0B,EAAAM,IAAA,EAACC,MAAAA,CAAIJ,UAAU,uCAA6B,UAClCR,EAAKrB,KAAK,IAItB,GAAA0B,EAAAM,IAAA,EAACC,MAAAA,CAAIJ,UAAU,mDACb,GAAAH,EAAAM,IAAA,EAACC,MAAAA,CAAIJ,UAAU,oCACZJ,EAAaJ,EAAKlC,KAAK,EACxB,GAAAuC,EAAAC,GAAA,EAACsB,OAAAA,CAAKpB,UAAW,kCAA4DZ,MAAA,CAA1Ba,EAAcT,EAAKlC,KAAK,YACxEkC,EAAKlC,KAAK,MAIf,GAAAuC,EAAAM,IAAA,EAACC,MAAAA,CAAIJ,UAAU,0DACb,GAAAH,EAAAC,GAAA,EAAC8B,EAAAA,CAASA,CAAAA,CAAC5B,UAAU,YACrB,GAAAH,EAAAM,IAAA,EAACiB,OAAAA,WAAM5B,EAAKqC,sBAAsB,EAAI,EAAE,IAAErC,EAAKpB,eAAe,UAIjD,GAAAyB,EAAAM,IAAA,EAACC,MAAAA,CAAIJ,UAAU,uCAA6B,cAC9C,iBAAOR,EAAKsC,SAAS,CAAgB,UAAYtC,CAAAA,OAAAA,CAAAA,EAAAA,EAAKsC,SAAS,GAAdtC,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAgBxB,IAAI,GAAI,aAGxF,GAAA6B,EAAAC,GAAA,EAACU,SAAAA,CACCC,QAAS,IAAMlB,EAAeC,GAC9BQ,UAAU,kGACX,gBAvCOR,EAAKH,GAAG,MAgDvB,CAACrC,GAAWH,IAAAA,EAAMkF,MAAM,EACvB,GAAAlC,EAAAM,IAAA,EAACC,MAAAA,CAAIJ,UAAU,8BACb,GAAAH,EAAAC,GAAA,EAACM,MAAAA,CAAIJ,UAAU,4FACb,GAAAH,EAAAC,GAAA,EAACQ,EAAAA,CAAuBA,CAAAA,CAACN,UAAU,8BAErC,GAAAH,EAAAC,GAAA,EAAC2B,KAAAA,CAAGzB,UAAU,oDAA2C,uBACzD,GAAAH,EAAAC,GAAA,EAACS,IAAAA,CAAEP,UAAU,8BAAqB,gDAClC,GAAAH,EAAAM,IAAA,EAACK,SAAAA,CACCC,QAAS,IAAMtD,EAAmB,IAClC6C,UAAU,4HAEV,GAAAH,EAAAC,GAAA,EAACY,EAAAA,CAAQA,CAAAA,CAACV,UAAU,YAAY,oBAOrCtC,EAAWG,KAAK,CAAG,GAClB,GAAAgC,EAAAC,GAAA,EAACM,MAAAA,CAAIJ,UAAU,oCACb,GAAAH,EAAAC,GAAA,EAACM,MAAAA,CAAIJ,UAAU,sBACZqB,MAAMW,IAAI,CAAC,CAAED,OAAQrE,EAAWG,KAAK,EAAI,CAAC0D,EAAGC,IAC5C,GAAA3B,EAAAC,GAAA,EAACU,SAAAA,CAECC,QAAS,IAAMpD,EAAW,CAAE,GAAGD,CAAO,CAAEI,KAAMgE,EAAI,CAAE,GACpDxB,UAAW,wBAIVZ,MAAA,CAHChC,EAAQI,IAAI,GAAKgE,EAAI,EACjB,yBACA,wDAGLA,EAAI,GARAA,QAgBdtE,GACC,GAAA2C,EAAAC,GAAA,EAACM,MAAAA,CAAIJ,UAAU,0FACb,GAAAH,EAAAC,GAAA,EAACM,MAAAA,CAAIJ,UAAU,yDACb,GAAAH,EAAAM,IAAA,EAACC,MAAAA,CAAIJ,UAAU,gBACb,GAAAH,EAAAC,GAAA,EAAC2B,KAAAA,CAAGzB,UAAU,sCAA6B,2BAC3C,GAAAH,EAAAM,IAAA,EAACrC,OAAAA,CAAKmE,SAAUnD,EAAkBkB,UAAU,sBAC1C,GAAAH,EAAAM,IAAA,EAACC,MAAAA,WACC,GAAAP,EAAAC,GAAA,EAACkB,QAAAA,CAAMhB,UAAU,wDAA+C,cAChE,GAAAH,EAAAC,GAAA,EAACmB,QAAAA,CACCC,KAAK,OACLN,MAAO9C,EAAKE,IAAI,CAChB6C,SAAU,GAAO9C,EAAQ,CAAE,GAAGD,CAAI,CAAEE,KAAMe,EAAE+B,MAAM,CAACF,KAAK,GACxDZ,UAAU,yGACVkC,SAAQ,QAIZ,GAAArC,EAAAM,IAAA,EAACC,MAAAA,WACC,GAAAP,EAAAC,GAAA,EAACkB,QAAAA,CAAMhB,UAAU,wDAA+C,gBAChE,GAAAH,EAAAC,GAAA,EAACqC,WAAAA,CACCvB,MAAO9C,EAAKG,WAAW,CACvB4C,SAAU,GAAO9C,EAAQ,CAAE,GAAGD,CAAI,CAAEG,YAAac,EAAE+B,MAAM,CAACF,KAAK,GAC/DZ,UAAU,yGACVoC,KAAM,OAIV,GAAAvC,EAAAM,IAAA,EAACC,MAAAA,WACC,GAAAP,EAAAC,GAAA,EAACkB,QAAAA,CAAMhB,UAAU,wDAA+C,qBAChE,GAAAH,EAAAC,GAAA,EAACmB,QAAAA,CACCC,KAAK,OACLN,MAAO9C,EAAKK,KAAK,CACjB0C,SAAU,GAAO9C,EAAQ,CAAE,GAAGD,CAAI,CAAEK,MAAOY,EAAE+B,MAAM,CAACF,KAAK,GACzDZ,UAAU,yGACVqC,YAAY,0CAIhB,GAAAxC,EAAAM,IAAA,EAACC,MAAAA,WACC,GAAAP,EAAAC,GAAA,EAACkB,QAAAA,CAAMhB,UAAU,wDAA+C,UAChE,GAAAH,EAAAM,IAAA,EAACQ,SAAAA,CACCC,MAAO9C,EAAKR,KAAK,CACjBuD,SAAU,GAAO9C,EAAQ,CAAE,GAAGD,CAAI,CAAER,MAAOyB,EAAE+B,MAAM,CAACF,KAAK,GACzDZ,UAAU,mHAEV,GAAAH,EAAAC,GAAA,EAACiB,SAAAA,CAAOH,MAAM,iBAAQ,UACtB,GAAAf,EAAAC,GAAA,EAACiB,SAAAA,CAAOH,MAAM,oBAAW,aACzB,GAAAf,EAAAC,GAAA,EAACiB,SAAAA,CAAOH,MAAM,wBAAe,iBAC7B,GAAAf,EAAAC,GAAA,EAACiB,SAAAA,CAAOH,MAAM,oBAAW,mBAI7B,GAAAf,EAAAM,IAAA,EAACC,MAAAA,WACC,GAAAP,EAAAC,GAAA,EAACkB,QAAAA,CAAMhB,UAAU,wDAA+C,qBAChE,GAAAH,EAAAM,IAAA,EAACQ,SAAAA,CACCC,MAAO9C,EAAKM,eAAe,CAC3ByC,SAAU,GAAO9C,EAAQ,CAAE,GAAGD,CAAI,CAAEM,gBAAiBkE,OAAOvD,EAAE+B,MAAM,CAACF,KAAK,CAAE,GAC5EZ,UAAU,mHAEV,GAAAH,EAAAC,GAAA,EAACiB,SAAAA,CAAOH,MAAO,WAAG,aAClB,GAAAf,EAAAC,GAAA,EAACiB,SAAAA,CAAOH,MAAO,WAAG,aAClB,GAAAf,EAAAC,GAAA,EAACiB,SAAAA,CAAOH,MAAO,WAAG,aAClB,GAAAf,EAAAC,GAAA,EAACiB,SAAAA,CAAOH,MAAO,WAAG,mBAItB,GAAAf,EAAAM,IAAA,EAACC,MAAAA,CAAIJ,UAAU,oCACb,GAAAH,EAAAC,GAAA,EAACmB,QAAAA,CACCC,KAAK,WACLC,QAASrD,EAAKP,SAAS,CACvBsD,SAAU,GAAO9C,EAAQ,CAAE,GAAGD,CAAI,CAAEP,UAAWwB,EAAE+B,MAAM,CAACK,OAAO,GAC/DnB,UAAU,YAEZ,GAAAH,EAAAC,GAAA,EAACkB,QAAAA,CAAMhB,UAAU,iCAAwB,oBAG1ClC,EAAKP,SAAS,EACb,GAAAsC,EAAAM,IAAA,EAACC,MAAAA,WACC,GAAAP,EAAAC,GAAA,EAACkB,QAAAA,CAAMhB,UAAU,wDAA+C,aAChE,GAAAH,EAAAC,GAAA,EAACmB,QAAAA,CACCC,KAAK,WACLN,MAAO9C,EAAKI,QAAQ,CACpB2C,SAAU,GAAO9C,EAAQ,CAAE,GAAGD,CAAI,CAAEI,SAAUa,EAAE+B,MAAM,CAACF,KAAK,GAC5DZ,UAAU,yGACVkC,SAAQ,QAKd,GAAArC,EAAAM,IAAA,EAACC,MAAAA,CAAIJ,UAAU,4BACb,GAAAH,EAAAC,GAAA,EAACU,SAAAA,CACCU,KAAK,SACLlB,UAAU,kGACX,gBAGD,GAAAH,EAAAC,GAAA,EAACU,SAAAA,CACCU,KAAK,SACLT,QAAS,IAAMtD,EAAmB,IAClC6C,UAAU,qGACX,4BAYrB","sources":["webpack://_N_E/?e055","webpack://_N_E/./pages/verbfy-talk/index.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/verbfy-talk\",\n      function () {\n        return require(\"private-next-pages/verbfy-talk/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/verbfy-talk\"])\n      });\n    }\n  ","import React, { useEffect, useState } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport DashboardLayout from '@/components/layout/DashboardLayout';\r\nimport { verbfyTalkAPI } from '@/lib/api';\r\nimport { VerbfyTalkRoom, CreateRoomData, RoomFilters } from '@/types/verbfyTalk';\r\nimport { toast } from 'react-hot-toast';\r\nimport { \r\n  PlusIcon, \r\n  UsersIcon, \r\n  LockClosedIcon, \r\n  GlobeAltIcon,\r\n  AcademicCapIcon,\r\n  ChatBubbleLeftRightIcon\r\n} from '@heroicons/react/24/outline';\r\n\r\nfunction VerbfyTalkPage() {\r\n  const router = useRouter();\r\n  const [rooms, setRooms] = useState<VerbfyTalkRoom[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [showCreateModal, setShowCreateModal] = useState(false);\r\n  const [filters, setFilters] = useState<RoomFilters>({\r\n    level: 'All',\r\n    isPrivate: false,\r\n    page: 1,\r\n    limit: 10\r\n  });\r\n  const [pagination, setPagination] = useState({\r\n    page: 1,\r\n    limit: 10,\r\n    total: 0,\r\n    pages: 0\r\n  });\r\n  const [form, setForm] = useState<CreateRoomData>({\r\n    name: '',\r\n    description: '',\r\n    isPrivate: false,\r\n    password: '',\r\n    topic: '',\r\n    level: 'Mixed',\r\n    maxParticipants: 5\r\n  });\r\n\r\n  useEffect(() => {\r\n    loadRooms();\r\n  }, [filters]);\r\n\r\n  const loadRooms = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await verbfyTalkAPI.getRooms(filters);\r\n      setRooms(response?.data || []);\r\n      setPagination(response?.pagination || {\r\n        page: 1,\r\n        limit: 10,\r\n        total: 0,\r\n        pages: 0\r\n      });\r\n    } catch (error) {\r\n      console.error('Error loading rooms:', error);\r\n      toast.error('Failed to load rooms');\r\n      setRooms([]);\r\n      setPagination({\r\n        page: 1,\r\n        limit: 10,\r\n        total: 0,\r\n        pages: 0\r\n      });\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCreateRoom = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    try {\r\n      const roomData = { ...form };\r\n      if (!roomData.isPrivate) {\r\n        delete roomData.password;\r\n      }\r\n      \r\n      const response = await verbfyTalkAPI.createRoom(roomData);\r\n      toast.success('Room created successfully!');\r\n      setShowCreateModal(false);\r\n      setForm({\r\n        name: '',\r\n        description: '',\r\n        isPrivate: false,\r\n        password: '',\r\n        topic: '',\r\n        level: 'Mixed',\r\n        maxParticipants: 5\r\n      });\r\n      loadRooms();\r\n      \r\n      // Navigate to the new room\r\n      router.push(`/verbfy-talk/${response.data._id}`);\r\n    } catch (error: any) {\r\n      toast.error(error.response?.data?.message || 'Failed to create room');\r\n    }\r\n  };\r\n\r\n  const handleJoinRoom = (room: VerbfyTalkRoom) => {\r\n    if (room.isPrivate) {\r\n      const password = prompt('Enter room password:');\r\n      if (password) {\r\n        joinRoom(room._id, password);\r\n      }\r\n    } else {\r\n      joinRoom(room._id);\r\n    }\r\n  };\r\n\r\n  const joinRoom = async (roomId: string, password?: string) => {\r\n    try {\r\n      // Direct navigation - room joining will be handled by the room page\r\n      router.push(`/verbfy-talk/${roomId}`);\r\n    } catch (error: any) {\r\n      toast.error('Failed to join room');\r\n    }\r\n  };\r\n\r\n  const getLevelIcon = (level: string) => {\r\n    switch (level) {\r\n      case 'Beginner':\r\n        return <AcademicCapIcon className=\"w-4 h-4 text-green-500\" />;\r\n      case 'Intermediate':\r\n        return <AcademicCapIcon className=\"w-4 h-4 text-yellow-500\" />;\r\n      case 'Advanced':\r\n        return <AcademicCapIcon className=\"w-4 h-4 text-red-500\" />;\r\n      default:\r\n        return <AcademicCapIcon className=\"w-4 h-4 text-blue-500\" />;\r\n    }\r\n  };\r\n\r\n  const getLevelColor = (level: string) => {\r\n    switch (level) {\r\n      case 'Beginner':\r\n        return 'bg-green-100 text-green-800';\r\n      case 'Intermediate':\r\n        return 'bg-yellow-100 text-yellow-800';\r\n      case 'Advanced':\r\n        return 'bg-red-100 text-red-800';\r\n      default:\r\n        return 'bg-blue-100 text-blue-800';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <DashboardLayout>\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\r\n        {/* Header */}\r\n        <div className=\"flex justify-between items-center mb-8\">\r\n          <div>\r\n            <h1 className=\"text-3xl font-bold text-gray-900 flex items-center gap-3\">\r\n              <ChatBubbleLeftRightIcon className=\"w-8 h-8 text-blue-600\" />\r\n              VerbfyTalk\r\n            </h1>\r\n            <p className=\"text-gray-600 mt-2\">Join conversation rooms with up to 5 people</p>\r\n          </div>\r\n          <button\r\n            onClick={() => setShowCreateModal(true)}\r\n            className=\"bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-lg flex items-center gap-2 transition-colors\"\r\n          >\r\n            <PlusIcon className=\"w-5 h-5\" />\r\n            Create Room\r\n          </button>\r\n        </div>\r\n\r\n        {/* Filters */}\r\n        <div className=\"bg-white rounded-lg shadow-sm border p-4 mb-6\">\r\n          <div className=\"flex flex-wrap gap-4\">\r\n            <select\r\n              value={filters.level}\r\n              onChange={(e) => setFilters({ ...filters, level: e.target.value as any })}\r\n              className=\"px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n            >\r\n              <option value=\"All\">All Levels</option>\r\n              <option value=\"Beginner\">Beginner</option>\r\n              <option value=\"Intermediate\">Intermediate</option>\r\n              <option value=\"Advanced\">Advanced</option>\r\n              <option value=\"Mixed\">Mixed</option>\r\n            </select>\r\n            \r\n            <label className=\"flex items-center gap-2\">\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={filters.isPrivate}\r\n                onChange={(e) => setFilters({ ...filters, isPrivate: e.target.checked })}\r\n                className=\"rounded\"\r\n              />\r\n              <span className=\"text-sm text-gray-600\">Show private rooms</span>\r\n            </label>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Rooms Grid */}\r\n        {loading ? (\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n            {[...Array(6)].map((_, i) => (\r\n              <div key={i} className=\"bg-white rounded-lg shadow-sm border p-6 animate-pulse\">\r\n                <div className=\"h-4 bg-gray-200 rounded mb-2\"></div>\r\n                <div className=\"h-3 bg-gray-200 rounded mb-4\"></div>\r\n                <div className=\"h-3 bg-gray-200 rounded w-2/3\"></div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ) : (\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n            {rooms?.map((room) => (\r\n              <div key={room._id} className=\"bg-white rounded-lg shadow-sm border p-6 hover:shadow-md transition-shadow\">\r\n                <div className=\"flex justify-between items-start mb-3\">\r\n                  <h3 className=\"font-semibold text-lg text-gray-900 truncate\">{room.name}</h3>\r\n                  {room.isPrivate ? (\r\n                    <LockClosedIcon className=\"w-5 h-5 text-gray-400 flex-shrink-0\" />\r\n                  ) : (\r\n                    <GlobeAltIcon className=\"w-5 h-5 text-gray-400 flex-shrink-0\" />\r\n                  )}\r\n                </div>\r\n                \r\n                <p className=\"text-gray-600 text-sm mb-4 line-clamp-2\">{room.description}</p>\r\n                \r\n                {room.topic && (\r\n                  <div className=\"text-sm text-blue-600 mb-3\">\r\n                    Topic: {room.topic}\r\n                  </div>\r\n                )}\r\n                \r\n                <div className=\"flex items-center justify-between mb-4\">\r\n                  <div className=\"flex items-center gap-2\">\r\n                    {getLevelIcon(room.level)}\r\n                    <span className={`text-xs px-2 py-1 rounded-full ${getLevelColor(room.level)}`}>\r\n                      {room.level}\r\n                    </span>\r\n                  </div>\r\n                  \r\n                  <div className=\"flex items-center gap-1 text-sm text-gray-500\">\r\n                    <UsersIcon className=\"w-4 h-4\" />\r\n                    <span>{room.activeParticipantCount || 0}/{room.maxParticipants}</span>\r\n                  </div>\r\n                </div>\r\n                \r\n                                 <div className=\"text-xs text-gray-400 mb-4\">\r\n                   Created by {typeof room.createdBy === 'string' ? 'Unknown' : room.createdBy?.name || 'Unknown'}\r\n                 </div>\r\n                \r\n                <button\r\n                  onClick={() => handleJoinRoom(room)}\r\n                  className=\"w-full bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded-md transition-colors\"\r\n                >\r\n                  Join Room\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        {/* Empty State */}\r\n        {!loading && rooms.length === 0 && (\r\n          <div className=\"text-center py-12\">\r\n            <div className=\"w-24 h-24 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n              <ChatBubbleLeftRightIcon className=\"w-12 h-12 text-gray-400\" />\r\n            </div>\r\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">No rooms available</h3>\r\n            <p className=\"text-gray-600 mb-6\">Be the first to create a conversation room!</p>\r\n            <button\r\n              onClick={() => setShowCreateModal(true)}\r\n              className=\"bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-lg flex items-center gap-2 mx-auto transition-colors\"\r\n            >\r\n              <PlusIcon className=\"w-5 h-5\" />\r\n              Create Room\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        {/* Pagination */}\r\n        {pagination.pages > 1 && (\r\n          <div className=\"flex justify-center mt-8\">\r\n            <div className=\"flex gap-2\">\r\n              {Array.from({ length: pagination.pages }, (_, i) => (\r\n                <button\r\n                  key={i}\r\n                  onClick={() => setFilters({ ...filters, page: i + 1 })}\r\n                  className={`px-3 py-2 rounded-md ${\r\n                    filters.page === i + 1\r\n                      ? 'bg-blue-600 text-white'\r\n                      : 'bg-gray-200 text-gray-700 hover:bg-gray-300'\r\n                  }`}\r\n                >\r\n                  {i + 1}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Create Room Modal */}\r\n        {showCreateModal && (\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4\">\r\n            <div className=\"bg-white rounded-lg shadow-xl w-full max-w-md\">\r\n              <div className=\"p-6\">\r\n                <h3 className=\"text-lg font-semibold mb-4\">Create VerbfyTalk Room</h3>\r\n                <form onSubmit={handleCreateRoom} className=\"space-y-4\">\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Room Name</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={form.name}\r\n                      onChange={(e) => setForm({ ...form, name: e.target.value })}\r\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                      required\r\n                    />\r\n                  </div>\r\n                  \r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Description</label>\r\n                    <textarea\r\n                      value={form.description}\r\n                      onChange={(e) => setForm({ ...form, description: e.target.value })}\r\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                      rows={3}\r\n                    />\r\n                  </div>\r\n                  \r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Topic (Optional)</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      value={form.topic}\r\n                      onChange={(e) => setForm({ ...form, topic: e.target.value })}\r\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                      placeholder=\"e.g., Travel, Business, Daily Life\"\r\n                    />\r\n                  </div>\r\n                  \r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Level</label>\r\n                    <select\r\n                      value={form.level}\r\n                      onChange={(e) => setForm({ ...form, level: e.target.value as any })}\r\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    >\r\n                      <option value=\"Mixed\">Mixed</option>\r\n                      <option value=\"Beginner\">Beginner</option>\r\n                      <option value=\"Intermediate\">Intermediate</option>\r\n                      <option value=\"Advanced\">Advanced</option>\r\n                    </select>\r\n                  </div>\r\n                  \r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Max Participants</label>\r\n                    <select\r\n                      value={form.maxParticipants}\r\n                      onChange={(e) => setForm({ ...form, maxParticipants: Number(e.target.value) })}\r\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    >\r\n                      <option value={2}>2 people</option>\r\n                      <option value={3}>3 people</option>\r\n                      <option value={4}>4 people</option>\r\n                      <option value={5}>5 people</option>\r\n                    </select>\r\n                  </div>\r\n                  \r\n                  <div className=\"flex items-center gap-2\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={form.isPrivate}\r\n                      onChange={(e) => setForm({ ...form, isPrivate: e.target.checked })}\r\n                      className=\"rounded\"\r\n                    />\r\n                    <label className=\"text-sm text-gray-700\">Private room</label>\r\n                  </div>\r\n                  \r\n                  {form.isPrivate && (\r\n                    <div>\r\n                      <label className=\"block text-sm font-medium text-gray-700 mb-1\">Password</label>\r\n                      <input\r\n                        type=\"password\"\r\n                        value={form.password}\r\n                        onChange={(e) => setForm({ ...form, password: e.target.value })}\r\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                        required\r\n                      />\r\n                    </div>\r\n                  )}\r\n                  \r\n                  <div className=\"flex gap-3 pt-4\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"flex-1 bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded-md transition-colors\"\r\n                    >\r\n                      Create Room\r\n                    </button>\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => setShowCreateModal(false)}\r\n                      className=\"flex-1 bg-gray-300 hover:bg-gray-400 text-gray-700 py-2 px-4 rounded-md transition-colors\"\r\n                    >\r\n                      Cancel\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </DashboardLayout>\r\n  );\r\n}\r\n\r\nexport default VerbfyTalkPage; "],"names":["window","__NEXT_P","push","__webpack_require__","__webpack_exports__","router","useRouter","rooms","setRooms","useState","loading","setLoading","showCreateModal","setShowCreateModal","filters","setFilters","level","isPrivate","page","limit","pagination","setPagination","total","pages","form","setForm","name","description","password","topic","maxParticipants","useEffect","loadRooms","response","verbfyTalkAPI","getRooms","data","error","console","toast","handleCreateRoom","e","preventDefault","roomData","createRoom","success","concat","_id","message","handleJoinRoom","room","prompt","joinRoom","roomId","getLevelIcon","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","AcademicCapIcon","className","getLevelColor","DashboardLayout","jsxs","div","h1","ChatBubbleLeftRightIcon","p","button","onClick","PlusIcon","select","value","onChange","target","option","label","input","type","checked","span","Array","map","_","i","h3","LockClosedIcon","GlobeAltIcon","UsersIcon","activeParticipantCount","createdBy","length","from","onSubmit","required","textarea","rows","placeholder","Number"],"sourceRoot":""}