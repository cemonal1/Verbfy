{"version":3,"file":"static/chunks/pages/verbfy-talk/[roomId]-75cd0e0b55e6d2e9.js","mappings":"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","sources":["webpack://_N_E/?9c3e","webpack://_N_E/./pages/verbfy-talk/[roomId].tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/verbfy-talk/[roomId]\",\n      function () {\n        return require(\"private-next-pages/verbfy-talk/[roomId].tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/verbfy-talk/[roomId]\"])\n      });\n    }\n  ","import React, { useEffect, useState } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport DashboardLayout from '@/components/layout/DashboardLayout';\r\nimport { useI18n } from '@/lib/i18n';\r\nimport { verbfyTalkAPI } from '@/lib/api';\r\nimport { \r\n  UsersIcon, \r\n  LockClosedIcon, \r\n  GlobeAltIcon,\r\n  AcademicCapIcon,\r\n  ChatBubbleLeftRightIcon,\r\n  CalendarIcon,\r\n  ClockIcon\r\n} from '@heroicons/react/24/outline';\r\n\r\nexport default function VerbfyTalkRoomPage() {\r\n  const router = useRouter();\r\n  const { roomId } = router.query as { roomId?: string };\r\n  const { t } = useI18n();\r\n  const [room, setRoom] = useState<any | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [joining, setJoining] = useState(false);\r\n  const [joined, setJoined] = useState(false);\r\n  const [joinPassword, setJoinPassword] = useState('');\r\n  const [showPasswordModal, setShowPasswordModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!roomId) return;\r\n    const load = async () => {\r\n      try {\r\n        const res: any = await verbfyTalkAPI.getRoomDetails(roomId);\r\n        setRoom(res.data || res);\r\n        // Check if user is already in the room\r\n        if (res.data?.participants || res?.participants) {\r\n          const participants = res.data?.participants || res?.participants;\r\n          const isInRoom = participants.some((p: any) => p.isActive);\r\n          setJoined(isInRoom);\r\n        }\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    load();\r\n  }, [roomId]);\r\n\r\n  const handleJoin = async () => {\r\n    if (!roomId) return;\r\n    \r\n    if (room?.isPrivate && !joinPassword) {\r\n      setShowPasswordModal(true);\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setJoining(true);\r\n      const res: any = await verbfyTalkAPI.joinRoom(roomId, { password: joinPassword });\r\n      if (res.success) {\r\n        setJoined(true);\r\n        setJoinPassword('');\r\n        setShowPasswordModal(false);\r\n        // Reload room data to show updated participants\r\n        const updatedRes = await verbfyTalkAPI.getRoomDetails(roomId);\r\n        setRoom(updatedRes.data || updatedRes);\r\n      }\r\n    } catch (error: any) {\r\n      console.error('Failed to join room:', error);\r\n      alert(error.response?.data?.message || 'Failed to join room');\r\n    } finally {\r\n      setJoining(false);\r\n    }\r\n  };\r\n\r\n  const handleLeave = async () => {\r\n    if (!roomId) return;\r\n    try {\r\n      await verbfyTalkAPI.leaveRoom(roomId);\r\n      setJoined(false);\r\n      // Reload room data\r\n      const res = await verbfyTalkAPI.getRoomDetails(roomId);\r\n      setRoom(res.data || res);\r\n    } catch (error: any) {\r\n      console.error('Failed to leave room:', error);\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString: string) => {\r\n    return new Date(dateString).toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  const getLevelIcon = (level: string) => {\r\n    switch (level) {\r\n      case 'Beginner':\r\n        return <AcademicCapIcon className=\"w-4 h-4 text-green-500\" />;\r\n      case 'Intermediate':\r\n        return <AcademicCapIcon className=\"w-4 h-4 text-yellow-500\" />;\r\n      case 'Advanced':\r\n        return <AcademicCapIcon className=\"w-4 h-4 text-red-500\" />;\r\n      default:\r\n        return <AcademicCapIcon className=\"w-4 h-4 text-blue-500\" />;\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <DashboardLayout title=\"Loading Room...\">\r\n        <div className=\"p-8 text-center text-gray-500\">Loading room details...</div>\r\n      </DashboardLayout>\r\n    );\r\n  }\r\n\r\n  if (!room) {\r\n    return (\r\n      <DashboardLayout title=\"Room Not Found\">\r\n        <div className=\"p-8 text-center text-gray-500\">Room not found</div>\r\n      </DashboardLayout>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <DashboardLayout title={room.name || 'VerbfyTalk Room'}>\r\n      <div className=\"max-w-4xl mx-auto p-6\">\r\n        {/* Room Header */}\r\n        <div className=\"bg-white rounded-lg shadow-sm border p-6 mb-6\">\r\n          <div className=\"flex items-start justify-between mb-4\">\r\n            <div className=\"flex-1\">\r\n              <h1 className=\"text-3xl font-bold text-gray-900 flex items-center gap-3\">\r\n                <ChatBubbleLeftRightIcon className=\"w-8 h-8 text-blue-600\" />\r\n                {room.name}\r\n              </h1>\r\n              <p className=\"text-gray-600 mt-2\">{room.description}</p>\r\n              \r\n              <div className=\"flex items-center gap-4 mt-4 text-sm text-gray-500\">\r\n                <div className=\"flex items-center gap-2\">\r\n                  {room.isPrivate ? (\r\n                    <LockClosedIcon className=\"w-4 h-4\" />\r\n                  ) : (\r\n                    <GlobeAltIcon className=\"w-4 h-4\" />\r\n                  )}\r\n                  <span>{room.isPrivate ? 'Private' : 'Public'}</span>\r\n                </div>\r\n                \r\n                <div className=\"flex items-center gap-2\">\r\n                  {getLevelIcon(room.level)}\r\n                  <span>{room.level}</span>\r\n                </div>\r\n                \r\n                <div className=\"flex items-center gap-2\">\r\n                  <UsersIcon className=\"w-4 h-4\" />\r\n                  <span>{room.participants?.filter((p: any) => p.isActive).length || 0}/{room.maxParticipants}</span>\r\n                </div>\r\n                \r\n                {room.startedAt && (\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <CalendarIcon className=\"w-4 h-4\" />\r\n                    <span>Started {formatDate(room.startedAt)}</span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"flex flex-col gap-2\">\r\n              {!joined ? (\r\n                <button\r\n                  onClick={handleJoin}\r\n                  disabled={joining}\r\n                  className=\"bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-lg font-medium transition-colors disabled:opacity-50\"\r\n                >\r\n                  {joining ? 'Joining...' : 'Join Room'}\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  onClick={handleLeave}\r\n                  className=\"bg-red-600 hover:bg-red-700 text-white px-6 py-3 rounded-lg font-medium transition-colors\"\r\n                >\r\n                  Leave Room\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          {room.topic && (\r\n            <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\r\n              <h3 className=\"font-medium text-blue-900 mb-2\">Discussion Topic</h3>\r\n              <p className=\"text-blue-800\">{room.topic}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Participants */}\r\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\r\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-4 flex items-center gap-2\">\r\n            <UsersIcon className=\"w-5 h-5\" />\r\n            Participants ({room.participants?.filter((p: any) => p.isActive).length || 0})\r\n          </h2>\r\n          \r\n          {room.participants && room.participants.length > 0 ? (\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n              {room.participants\r\n                .filter((p: any) => p.isActive)\r\n                .map((participant: any, index: number) => (\r\n                  <div key={index} className=\"flex items-center gap-3 p-3 bg-gray-50 rounded-lg\">\r\n                    <div className=\"w-10 h-10 bg-blue-600 rounded-full flex items-center justify-center text-white font-medium\">\r\n                      {participant.userId?.name?.charAt(0) || 'U'}\r\n                    </div>\r\n                    <div>\r\n                      <p className=\"font-medium text-gray-900\">{participant.userId?.name || 'Unknown User'}</p>\r\n                      <p className=\"text-sm text-gray-500\">\r\n                        Joined {formatDate(participant.joinedAt)}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          ) : (\r\n            <p className=\"text-gray-500 text-center py-8\">No participants yet</p>\r\n          )}\r\n        </div>\r\n\r\n        {/* Password Modal */}\r\n        {showPasswordModal && (\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n            <div className=\"bg-white rounded-lg p-6 max-w-md w-full mx-4\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Enter Room Password</h3>\r\n              <input\r\n                type=\"password\"\r\n                value={joinPassword}\r\n                onChange={(e) => setJoinPassword(e.target.value)}\r\n                placeholder=\"Enter password\"\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 mb-4\"\r\n              />\r\n              <div className=\"flex gap-3\">\r\n                <button\r\n                  onClick={() => {\r\n                    setShowPasswordModal(false);\r\n                    setJoinPassword('');\r\n                  }}\r\n                  className=\"flex-1 px-4 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  onClick={handleJoin}\r\n                  disabled={joining}\r\n                  className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50\"\r\n                >\r\n                  {joining ? 'Joining...' : 'Join'}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </DashboardLayout>\r\n  );\r\n}"],"names":["window","__NEXT_P","push","__webpack_require__","VerbfyTalkRoomPage","room","roomId","router","useRouter","query","t","useI18n","setRoom","useState","loading","setLoading","joining","setJoining","joined","setJoined","joinPassword","setJoinPassword","showPasswordModal","setShowPasswordModal","useEffect","load","res","verbfyTalkAPI","getRoomDetails","data","participants","isInRoom","some","p","isActive","handleJoin","isPrivate","joinRoom","password","success","updatedRes","error","console","alert","response","message","handleLeave","leaveRoom","formatDate","Date","dateString","toLocaleDateString","year","month","day","hour","minute","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","DashboardLayout","title","div","className","name","jsxs","h1","ChatBubbleLeftRightIcon","description","LockClosedIcon","GlobeAltIcon","span","getLevelIcon","level","AcademicCapIcon","UsersIcon","filter","length","maxParticipants","startedAt","CalendarIcon","button","onClick","disabled","topic","h3","h2","map","participant","index","userId","charAt","joinedAt","input","type","value","onChange","e","target","placeholder"],"sourceRoot":""}