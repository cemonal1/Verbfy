{"version":3,"file":"static/chunks/pages/verbfy-talk/[roomId]-8212dbc76012d8c9.js","mappings":"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","sources":["webpack://_N_E/?9c3e","webpack://_N_E/./src/hooks/useVoiceChat.ts","webpack://_N_E/./src/components/voiceChat/VoiceChatRoom.tsx","webpack://_N_E/./pages/verbfy-talk/[roomId].tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/verbfy-talk/[roomId]\",\n      function () {\n        return require(\"private-next-pages/verbfy-talk/[roomId].tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/verbfy-talk/[roomId]\"])\n      });\n    }\n  ","import { useState, useEffect, useRef, useCallback } from 'react';\r\nimport io, { Socket } from 'socket.io-client';\r\n\r\ninterface User {\r\n  id: string;\r\n  name: string;\r\n  socketId: string;\r\n}\r\n\r\ninterface VoiceChatState {\r\n  isConnected: boolean;\r\n  isConnecting: boolean;\r\n  currentRoom: string | null;\r\n  users: User[];\r\n  localStream: MediaStream | null;\r\n  isMicOn: boolean;\r\n  error: string | null;\r\n  connectionStatus: 'disconnected' | 'connecting' | 'connected' | 'error';\r\n}\r\n\r\ninterface VoiceChatActions {\r\n  connect: (token: string) => Promise<void>;\r\n  disconnect: () => void;\r\n  joinRoom: (roomId: string) => Promise<void>;\r\n  leaveRoom: () => void;\r\n  toggleMic: () => void;\r\n  requestMicrophone: () => Promise<boolean>;\r\n  clearError: () => void;\r\n}\r\n\r\nexport function useVoiceChat(): VoiceChatState & VoiceChatActions {\r\n  const [state, setState] = useState<VoiceChatState>({\r\n    isConnected: false,\r\n    isConnecting: false,\r\n    currentRoom: null,\r\n    users: [],\r\n    localStream: null,\r\n    isMicOn: true,\r\n    error: null,\r\n    connectionStatus: 'disconnected'\r\n  });\r\n\r\n  const socketRef = useRef<Socket | null>(null);\r\n  const peerConnectionsRef = useRef<Map<string, RTCPeerConnection>>(new Map());\r\n  const audioRefsRef = useRef<Map<string, HTMLAudioElement>>(new Map());\r\n  const localStreamRef = useRef<MediaStream | null>(null);\r\n  const reconnectAttemptsRef = useRef(0);\r\n  const maxReconnectAttempts = 3;\r\n\r\n  // WebRTC configuration\r\n  const webrtcConfig = {\r\n    iceServers: [\r\n      { urls: 'stun:stun.l.google.com:19302' },\r\n      { urls: 'stun:stun1.l.google.com:19302' },\r\n      { urls: 'stun:stun2.l.google.com:19302' },\r\n      { urls: 'stun:stun3.l.google.com:19302' }\r\n    ]\r\n  };\r\n\r\n  // Initialize audio context for Safari\r\n  const initAudioContext = useCallback(() => {\r\n    if (typeof window !== 'undefined' && window.AudioContext) {\r\n      const audioContext = new (window.AudioContext || (window as any).webkitAudioContext)();\r\n      \r\n      // Resume audio context on user interaction\r\n      const resumeAudio = () => {\r\n        if (audioContext.state === 'suspended') {\r\n          audioContext.resume();\r\n        }\r\n      };\r\n      \r\n      document.addEventListener('click', resumeAudio, { once: true });\r\n      document.addEventListener('touchstart', resumeAudio, { once: true });\r\n    }\r\n  }, []);\r\n\r\n  // Request microphone access\r\n  const requestMicrophone = useCallback(async (): Promise<boolean> => {\r\n    try {\r\n      console.log('🎤 Requesting microphone access...');\r\n      \r\n      // Check if we're in a secure context\r\n      if (!window.isSecureContext) {\r\n        throw new Error('Microphone access requires HTTPS');\r\n      }\r\n\r\n      // Check permissions policy\r\n      if (navigator.permissions) {\r\n        try {\r\n          const permission = await navigator.permissions.query({ name: 'microphone' as PermissionName });\r\n          console.log('🔍 Microphone permission status:', permission.state);\r\n          \r\n          if (permission.state === 'denied') {\r\n            throw new Error('Microphone permission permanently denied');\r\n          }\r\n        } catch (permError) {\r\n          console.log('⚠️ Could not check permission status, proceeding with getUserMedia');\r\n        }\r\n      }\r\n\r\n      const stream = await navigator.mediaDevices.getUserMedia({\r\n        audio: {\r\n          echoCancellation: true,\r\n          noiseSuppression: true,\r\n          autoGainControl: true,\r\n          sampleRate: 44100,\r\n          channelCount: 1\r\n        }\r\n      });\r\n\r\n      console.log('✅ Microphone access granted');\r\n      localStreamRef.current = stream;\r\n      \r\n      setState(prev => ({\r\n        ...prev,\r\n        localStream: stream,\r\n        isMicOn: true,\r\n        error: null\r\n      }));\r\n\r\n      return true;\r\n    } catch (err: any) {\r\n      console.error(\"❌ Microphone error:\", err);\r\n      \r\n      let errorMessage = 'Microphone access denied';\r\n      if (err.name === 'NotAllowedError') {\r\n        errorMessage = 'Microphone permission denied. Please allow microphone access and try again.';\r\n      } else if (err.name === 'NotFoundError') {\r\n        errorMessage = 'No microphone found. Please connect a microphone and try again.';\r\n      } else if (err.name === 'NotSupportedError') {\r\n        errorMessage = 'Microphone access not supported in this browser.';\r\n      } else if (err.name === 'NotReadableError') {\r\n        errorMessage = 'Microphone is already in use by another application.';\r\n      } else if (err.message.includes('secure context')) {\r\n        errorMessage = 'Microphone access requires HTTPS. Please use https://verbfy.com instead of http.';\r\n      } else if (err.message.includes('permanently denied')) {\r\n        errorMessage = 'Microphone access permanently blocked. Please enable it in browser settings.';\r\n      } else if (err.message.includes('permissions policy')) {\r\n        errorMessage = 'Permissions policy violation. Please try refreshing the page or check browser settings.';\r\n      }\r\n      \r\n      setState(prev => ({\r\n        ...prev,\r\n        error: errorMessage,\r\n        localStream: null,\r\n        isMicOn: false\r\n      }));\r\n\r\n      return false;\r\n    }\r\n  }, []);\r\n\r\n  // Create peer connection\r\n  const createPeerConnection = useCallback((socketId: string, isInitiator: boolean): RTCPeerConnection => {\r\n    const peer = new RTCPeerConnection(webrtcConfig);\r\n    \r\n    // Add local stream if available\r\n    if (localStreamRef.current) {\r\n      localStreamRef.current.getTracks().forEach(track => {\r\n        peer.addTrack(track, localStreamRef.current!);\r\n      });\r\n    }\r\n\r\n    // Handle remote stream\r\n    peer.ontrack = (event) => {\r\n      console.log(`🎵 Received audio stream from ${socketId}`);\r\n      \r\n      const remoteStream = event.streams[0];\r\n      \r\n      // Create audio element for remote peer\r\n      const audio = document.createElement('audio');\r\n      audio.srcObject = remoteStream;\r\n      audio.autoplay = true;\r\n      audio.volume = 0.8;\r\n      audio.muted = false;\r\n      \r\n      // Cross-platform audio attributes\r\n      audio.setAttribute('playsinline', 'true');\r\n      audio.setAttribute('webkit-playsinline', 'true');\r\n      audio.setAttribute('controls', 'false');\r\n      audio.setAttribute('preload', 'none');\r\n      \r\n      // Store reference\r\n      audioRefsRef.current.set(socketId, audio);\r\n      \r\n      // Add to DOM\r\n      document.body.appendChild(audio);\r\n    };\r\n\r\n    // Handle ICE candidates\r\n    peer.onicecandidate = (event) => {\r\n      if (event.candidate && socketRef.current) {\r\n        socketRef.current.emit('signal', {\r\n          to: socketId,\r\n          data: {\r\n            type: 'ice-candidate',\r\n            candidate: event.candidate\r\n          }\r\n        });\r\n      }\r\n    };\r\n\r\n    // Handle connection state changes\r\n    peer.onconnectionstatechange = () => {\r\n      console.log(`🔗 Peer connection state with ${socketId}:`, peer.connectionState);\r\n    };\r\n\r\n    peerConnectionsRef.current.set(socketId, peer);\r\n    return peer;\r\n  }, []);\r\n\r\n  // Handle signaling data\r\n  const handleSignal = useCallback(async (data: any) => {\r\n    const { from, data: signalData } = data;\r\n    \r\n    if (!localStreamRef.current) return;\r\n\r\n    let peer = peerConnectionsRef.current.get(from);\r\n    \r\n    if (!peer) {\r\n      peer = createPeerConnection(from, false);\r\n    }\r\n\r\n    try {\r\n      if (signalData.type === 'offer') {\r\n        await peer.setRemoteDescription(new RTCSessionDescription(signalData));\r\n        const answer = await peer.createAnswer();\r\n        await peer.setLocalDescription(answer);\r\n        \r\n        socketRef.current?.emit('signal', {\r\n          to: from,\r\n          data: {\r\n            type: 'answer',\r\n            answer: answer\r\n          }\r\n        });\r\n      } else if (signalData.type === 'answer') {\r\n        await peer.setRemoteDescription(new RTCSessionDescription(signalData.answer));\r\n      } else if (signalData.type === 'ice-candidate') {\r\n        await peer.addIceCandidate(new RTCIceCandidate(signalData.candidate));\r\n      }\r\n    } catch (error) {\r\n      console.error('❌ Error handling signal:', error);\r\n    }\r\n  }, [createPeerConnection]);\r\n\r\n  // Connect to server\r\n  const connect = useCallback(async (token: string): Promise<void> => {\r\n    if (socketRef.current?.connected) {\r\n      console.log('🔌 Already connected');\r\n      return;\r\n    }\r\n\r\n    setState(prev => ({ ...prev, isConnecting: true, connectionStatus: 'connecting' }));\r\n\r\n    try {\r\n      const socket = io(process.env.NEXT_PUBLIC_BACKEND_URL || 'https://api.verbfy.com', {\r\n        path: '/socket.io',\r\n        transports: ['websocket', 'polling'],\r\n        timeout: 20000,\r\n        forceNew: true,\r\n        auth: {\r\n          token\r\n        }\r\n      });\r\n\r\n      socket.on('connect', () => {\r\n        console.log('✅ Socket connected successfully');\r\n        setState(prev => ({\r\n          ...prev,\r\n          isConnected: true,\r\n          isConnecting: false,\r\n          connectionStatus: 'connected',\r\n          error: null\r\n        }));\r\n        reconnectAttemptsRef.current = 0;\r\n      });\r\n\r\n      socket.on('connect_error', (err) => {\r\n        console.error('❌ Socket connection error:', err);\r\n        setState(prev => ({\r\n          ...prev,\r\n          isConnecting: false,\r\n          connectionStatus: 'error',\r\n          error: 'Failed to connect to server. Please try again.'\r\n        }));\r\n      });\r\n\r\n      socket.on('disconnect', (reason) => {\r\n        console.log('🔌 Socket disconnected:', reason);\r\n        setState(prev => ({\r\n          ...prev,\r\n          isConnected: false,\r\n          connectionStatus: 'disconnected'\r\n        }));\r\n\r\n        // Attempt reconnection\r\n        if (reconnectAttemptsRef.current < maxReconnectAttempts) {\r\n          reconnectAttemptsRef.current++;\r\n          console.log(`🔄 Attempting reconnection ${reconnectAttemptsRef.current}/${maxReconnectAttempts}`);\r\n          setTimeout(() => {\r\n            socket.connect();\r\n          }, 2000 * reconnectAttemptsRef.current);\r\n        }\r\n      });\r\n\r\n      socket.on('authenticated', (data) => {\r\n        console.log('✅ User authenticated:', data);\r\n      });\r\n\r\n      socket.on('authentication_error', (data) => {\r\n        console.error('❌ Authentication error:', data);\r\n        setState(prev => ({\r\n          ...prev,\r\n          error: 'Authentication failed. Please try again.',\r\n          isConnecting: false,\r\n          connectionStatus: 'error'\r\n        }));\r\n      });\r\n\r\n      socket.on('roomJoined', (data) => {\r\n        console.log('🏠 Joined room:', data);\r\n        setState(prev => ({\r\n          ...prev,\r\n          currentRoom: data.roomId,\r\n          users: data.users\r\n        }));\r\n      });\r\n\r\n      socket.on('userJoined', (data) => {\r\n        console.log('👤 User joined:', data);\r\n        setState(prev => ({\r\n          ...prev,\r\n          users: [...prev.users, { id: data.userId, name: data.userName, socketId: data.socketId }]\r\n        }));\r\n\r\n        // Create peer connection for new user\r\n        if (localStreamRef.current) {\r\n          const peer = createPeerConnection(data.socketId, true);\r\n          \r\n          // Create offer\r\n          peer.createOffer().then(offer => {\r\n            peer.setLocalDescription(offer);\r\n            socket.emit('signal', {\r\n              to: data.socketId,\r\n              data: {\r\n                type: 'offer',\r\n                offer: offer\r\n              }\r\n            });\r\n          }).catch(error => {\r\n            console.error('❌ Error creating offer:', error);\r\n          });\r\n        }\r\n      });\r\n\r\n      socket.on('userLeft', (data) => {\r\n        console.log('👋 User left:', data);\r\n        setState(prev => ({\r\n          ...prev,\r\n          users: prev.users.filter(user => user.socketId !== data.socketId)\r\n        }));\r\n\r\n        // Close peer connection\r\n        const peer = peerConnectionsRef.current.get(data.socketId);\r\n        if (peer) {\r\n          peer.close();\r\n          peerConnectionsRef.current.delete(data.socketId);\r\n        }\r\n\r\n        // Remove audio element\r\n        const audio = audioRefsRef.current.get(data.socketId);\r\n        if (audio && audio.parentNode) {\r\n          audio.parentNode.removeChild(audio);\r\n          audioRefsRef.current.delete(data.socketId);\r\n        }\r\n      });\r\n\r\n      socket.on('signal', handleSignal);\r\n\r\n      socket.on('roomFull', (data) => {\r\n        console.log('❌ Room is full:', data);\r\n        setState(prev => ({\r\n          ...prev,\r\n          error: data.message\r\n        }));\r\n      });\r\n\r\n      socket.on('error', (data) => {\r\n        console.error('❌ Server error:', data);\r\n        setState(prev => ({\r\n          ...prev,\r\n          error: data.message\r\n        }));\r\n      });\r\n\r\n      socketRef.current = socket;\r\n\r\n      // Authenticate\r\n      socket.emit('authenticate', { token });\r\n\r\n    } catch (error) {\r\n      console.error('❌ Connection failed:', error);\r\n      setState(prev => ({\r\n        ...prev,\r\n        isConnecting: false,\r\n        connectionStatus: 'error',\r\n        error: 'Failed to connect to server'\r\n      }));\r\n    }\r\n  }, [handleSignal, createPeerConnection]);\r\n\r\n  // Disconnect from server\r\n  const disconnect = useCallback(() => {\r\n    if (socketRef.current) {\r\n      socketRef.current.disconnect();\r\n      socketRef.current = null;\r\n    }\r\n\r\n    // Cleanup peer connections\r\n    peerConnectionsRef.current.forEach(peer => peer.close());\r\n    peerConnectionsRef.current.clear();\r\n\r\n    // Cleanup audio elements\r\n    audioRefsRef.current.forEach(audio => {\r\n      if (audio.parentNode) {\r\n        audio.parentNode.removeChild(audio);\r\n      }\r\n    });\r\n    audioRefsRef.current.clear();\r\n\r\n    // Cleanup local stream\r\n    if (localStreamRef.current) {\r\n      localStreamRef.current.getTracks().forEach(track => track.stop());\r\n      localStreamRef.current = null;\r\n    }\r\n\r\n    setState(prev => ({\r\n      ...prev,\r\n      isConnected: false,\r\n      isConnecting: false,\r\n      currentRoom: null,\r\n      users: [],\r\n      localStream: null,\r\n      isMicOn: false,\r\n      connectionStatus: 'disconnected'\r\n    }));\r\n  }, []);\r\n\r\n  // Join room\r\n  const joinRoom = useCallback(async (roomId: string): Promise<void> => {\r\n    if (!socketRef.current?.connected) {\r\n      setState(prev => ({ ...prev, error: 'Not connected to server' }));\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Request microphone access first\r\n      const micGranted = await requestMicrophone();\r\n      if (!micGranted) {\r\n        setState(prev => ({ ...prev, error: 'Microphone access required to join room' }));\r\n        return;\r\n      }\r\n\r\n      socketRef.current.emit('joinRoom', { roomId });\r\n    } catch (error) {\r\n      console.error('❌ Failed to join room:', error);\r\n      setState(prev => ({ ...prev, error: 'Failed to join room' }));\r\n    }\r\n  }, [requestMicrophone]);\r\n\r\n  // Leave room\r\n  const leaveRoom = useCallback(() => {\r\n    if (socketRef.current && state.currentRoom) {\r\n      socketRef.current.emit('leaveRoom');\r\n    }\r\n\r\n    // Cleanup peer connections\r\n    peerConnectionsRef.current.forEach(peer => peer.close());\r\n    peerConnectionsRef.current.clear();\r\n\r\n    // Cleanup audio elements\r\n    audioRefsRef.current.forEach(audio => {\r\n      if (audio.parentNode) {\r\n        audio.parentNode.removeChild(audio);\r\n      }\r\n    });\r\n    audioRefsRef.current.clear();\r\n\r\n    setState(prev => ({\r\n      ...prev,\r\n      currentRoom: null,\r\n      users: []\r\n    }));\r\n  }, [state.currentRoom]);\r\n\r\n  // Toggle microphone\r\n  const toggleMic = useCallback(() => {\r\n    if (localStreamRef.current) {\r\n      const audioTrack = localStreamRef.current.getAudioTracks()[0];\r\n      if (audioTrack) {\r\n        audioTrack.enabled = !audioTrack.enabled;\r\n        setState(prev => ({\r\n          ...prev,\r\n          isMicOn: audioTrack.enabled\r\n        }));\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // Clear error\r\n  const clearError = useCallback(() => {\r\n    setState(prev => ({ ...prev, error: null }));\r\n  }, []);\r\n\r\n  // Initialize audio context on mount\r\n  useEffect(() => {\r\n    initAudioContext();\r\n  }, [initAudioContext]);\r\n\r\n  // Cleanup on unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      disconnect();\r\n    };\r\n  }, [disconnect]);\r\n\r\n  return {\r\n    ...state,\r\n    connect,\r\n    disconnect,\r\n    joinRoom,\r\n    leaveRoom,\r\n    toggleMic,\r\n    requestMicrophone,\r\n    clearError\r\n  };\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useAuthContext } from '@/context/AuthContext';\r\nimport { useVoiceChat } from '@/hooks/useVoiceChat';\r\nimport { tokenStorage } from '@/utils/secureStorage';\r\n\r\ninterface VoiceChatRoomProps {\r\n  roomId: string;\r\n  onLeave?: () => void;\r\n}\r\n\r\nexport default function VoiceChatRoom({ roomId, onLeave }: VoiceChatRoomProps) {\r\n  const { user } = useAuthContext();\r\n  const [isJoining, setIsJoining] = useState(false);\r\n  \r\n  const {\r\n    isConnected,\r\n    isConnecting,\r\n    currentRoom,\r\n    users,\r\n    localStream,\r\n    isMicOn,\r\n    error,\r\n    connectionStatus,\r\n    connect,\r\n    disconnect,\r\n    joinRoom,\r\n    leaveRoom,\r\n    toggleMic,\r\n    requestMicrophone,\r\n    clearError\r\n  } = useVoiceChat();\r\n\r\n  // Connect to server when component mounts\r\n  useEffect(() => {\r\n    const connectToServer = async () => {\r\n      const token = tokenStorage.getToken();\r\n      if (token && user && !isConnected && !isConnecting) {\r\n        try {\r\n          await connect(token);\r\n        } catch (error) {\r\n          console.error('❌ Failed to connect to server:', error);\r\n        }\r\n      }\r\n    };\r\n\r\n    connectToServer();\r\n  }, [user, isConnected, isConnecting, connect]);\r\n\r\n  // Join room when connected\r\n  useEffect(() => {\r\n    const joinRoomWhenReady = async () => {\r\n      if (isConnected && !currentRoom && !isJoining) {\r\n        setIsJoining(true);\r\n        try {\r\n          await joinRoom(roomId);\r\n        } catch (error) {\r\n          console.error('❌ Failed to join room:', error);\r\n        } finally {\r\n          setIsJoining(false);\r\n        }\r\n      }\r\n    };\r\n\r\n    joinRoomWhenReady();\r\n  }, [isConnected, currentRoom, roomId, isJoining, joinRoom]);\r\n\r\n  const handleLeaveRoom = () => {\r\n    leaveRoom();\r\n    disconnect();\r\n    onLeave?.();\r\n  };\r\n\r\n  const handleRequestMicrophone = async () => {\r\n    const granted = await requestMicrophone();\r\n    if (granted && isConnected) {\r\n      await joinRoom(roomId);\r\n    }\r\n  };\r\n\r\n  const getConnectionStatusColor = () => {\r\n    switch (connectionStatus) {\r\n      case 'connected': return 'text-green-600';\r\n      case 'connecting': return 'text-yellow-600';\r\n      case 'error': return 'text-red-600';\r\n      default: return 'text-gray-600';\r\n    }\r\n  };\r\n\r\n  const getConnectionStatusIcon = () => {\r\n    switch (connectionStatus) {\r\n      case 'connected': return '🟢';\r\n      case 'connecting': return '🟡';\r\n      case 'error': return '🔴';\r\n      default: return '⚪';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-4xl mx-auto p-6\">\r\n      {/* Header */}\r\n      <div className=\"bg-white rounded-lg shadow-sm border p-6 mb-6\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div>\r\n            <h1 className=\"text-2xl font-bold text-gray-900 flex items-center gap-3\">\r\n              🎤 Voice Chat Room\r\n            </h1>\r\n            <p className=\"text-gray-600 mt-1\">Room ID: {roomId}</p>\r\n            <p className=\"text-sm text-gray-500 mt-2\">\r\n              Maximum 5 participants • Audio only • P2P connection\r\n            </p>\r\n          </div>\r\n          \r\n          <div className=\"flex items-center gap-3\">\r\n            <button\r\n              onClick={handleLeaveRoom}\r\n              className=\"bg-red-600 hover:bg-red-700 text-white px-6 py-3 rounded-lg font-medium transition-colors\"\r\n            >\r\n              Leave Room\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Error Display */}\r\n      {error && (\r\n        <div className=\"bg-red-50 border border-red-200 rounded-lg p-4 mb-6\">\r\n          <div className=\"flex items-center gap-2\">\r\n            <span className=\"text-red-600\">❌</span>\r\n            <p className=\"text-red-800\">{error}</p>\r\n          </div>\r\n          <button\r\n            onClick={clearError}\r\n            className=\"mt-2 text-sm text-red-600 hover:text-red-800 underline\"\r\n          >\r\n            Dismiss\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Connection Status */}\r\n      <div className=\"bg-white rounded-lg shadow-sm border p-6 mb-6\">\r\n        <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">Connection Status</h2>\r\n        <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n          <div className=\"flex items-center gap-3\">\r\n            <span className=\"text-lg\">{getConnectionStatusIcon()}</span>\r\n            <span className={`text-sm font-medium ${getConnectionStatusColor()}`}>\r\n              Server: {connectionStatus.charAt(0).toUpperCase() + connectionStatus.slice(1)}\r\n            </span>\r\n          </div>\r\n          <div className=\"flex items-center gap-3\">\r\n            <div className={`w-3 h-3 rounded-full ${localStream ? 'bg-green-500' : 'bg-gray-400'}`}></div>\r\n            <span className=\"text-sm text-gray-700\">\r\n              Microphone: {localStream ? 'Active' : 'Inactive'}\r\n            </span>\r\n          </div>\r\n          <div className=\"flex items-center gap-3\">\r\n            <div className={`w-3 h-3 rounded-full ${currentRoom ? 'bg-green-500' : 'bg-gray-400'}`}></div>\r\n            <span className=\"text-sm text-gray-700\">\r\n              Room: {currentRoom ? 'Joined' : 'Not Joined'}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main Content */}\r\n      <div className=\"flex-1 flex flex-col items-center justify-center p-8\">\r\n        {/* Loading State */}\r\n        {(isConnecting || isJoining) && (\r\n          <div className=\"text-center mb-8\">\r\n            <div className=\"bg-white rounded-lg shadow-md p-8 max-w-md mx-auto\">\r\n              <div className=\"w-20 h-20 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n                <div className=\"animate-spin rounded-full h-10 w-10 border-b-2 border-blue-600\"></div>\r\n              </div>\r\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-4\">\r\n                {isConnecting ? 'Connecting to Server...' : 'Joining Room...'}\r\n              </h3>\r\n              <p className=\"text-gray-600\">\r\n                {isConnecting ? 'Establishing connection...' : 'Requesting microphone access...'}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Microphone Permission Required */}\r\n        {isConnected && !localStream && !isJoining && (\r\n          <div className=\"text-center mb-8\">\r\n            <div className=\"bg-white rounded-lg shadow-md p-8 max-w-md mx-auto\">\r\n              <div className=\"w-20 h-20 bg-yellow-100 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n                <span className=\"text-3xl\">🎤</span>\r\n              </div>\r\n              <h3 className=\"text-xl font-semibold text-gray-900 mb-4\">\r\n                Microphone Access Required\r\n              </h3>\r\n              <p className=\"text-gray-600 mb-6\">\r\n                To join the voice chat, you need to allow microphone access. Click the button below to request permission.\r\n              </p>\r\n              <button\r\n                onClick={handleRequestMicrophone}\r\n                className=\"bg-blue-600 hover:bg-blue-700 text-white px-8 py-3 rounded-lg font-medium transition-colors\"\r\n              >\r\n                🎧 Allow Microphone\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Participants Grid */}\r\n        {localStream && currentRoom && (\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 max-w-4xl w-full\">\r\n            {/* Local User */}\r\n            <div className=\"bg-white rounded-lg shadow-md p-6 text-center\">\r\n              <div className=\"w-20 h-20 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n                <svg className=\"w-10 h-10 text-blue-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\r\n                </svg>\r\n              </div>\r\n              <h3 className=\"font-semibold text-gray-900 mb-2\">\r\n                {user?.name || 'You'} {isMicOn ? '🎤' : '🔇'}\r\n              </h3>\r\n              <p className=\"text-sm text-gray-600\">Local</p>\r\n              {!isMicOn && (\r\n                <div className=\"mt-2 text-xs text-red-500 bg-red-50 px-2 py-1 rounded\">\r\n                  Microphone Off\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Remote Users */}\r\n            {users.map((user) => (\r\n              <div key={user.socketId} className=\"bg-white rounded-lg shadow-md p-6 text-center\">\r\n                <div className=\"w-20 h-20 bg-green-100 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n                  <svg className=\"w-10 h-10 text-green-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\" />\r\n                  </svg>\r\n                </div>\r\n                <h3 className=\"font-semibold text-gray-900 mb-2\">\r\n                  {user.name} 🎤\r\n                </h3>\r\n                <p className=\"text-sm text-gray-600\">Remote</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        {/* Room Info */}\r\n        <div className=\"mt-8 text-center\">\r\n          <div className=\"bg-white rounded-lg shadow-sm border p-6 max-w-2xl mx-auto\">\r\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Room Information</h3>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 text-sm text-gray-600\">\r\n              <div>\r\n                <span className=\"font-medium\">Room ID:</span> {roomId}\r\n              </div>\r\n              <div>\r\n                <span className=\"font-medium\">Participants:</span> {users.length + (localStream ? 1 : 0)}/5\r\n              </div>\r\n              <div>\r\n                <span className=\"font-medium\">Connection:</span> P2P WebRTC\r\n              </div>\r\n              <div>\r\n                <span className=\"font-medium\">Audio Quality:</span> High\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Audio Controls */}\r\n      {localStream && currentRoom && (\r\n        <div className=\"bg-white rounded-lg shadow-sm border p-6 mt-6\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Audio Controls</h3>\r\n          <div className=\"flex items-center justify-center gap-4\">\r\n            <button\r\n              onClick={toggleMic}\r\n              className={`flex items-center gap-2 px-6 py-3 rounded-lg font-medium transition-colors ${\r\n                isMicOn \r\n                  ? 'bg-green-100 text-green-700 hover:bg-green-200' \r\n                  : 'bg-red-100 text-red-700 hover:bg-red-200'\r\n              }`}\r\n            >\r\n              {isMicOn ? '🎤 Mute' : '🔇 Unmute'}\r\n            </button>\r\n            \r\n            <button\r\n              onClick={handleLeaveRoom}\r\n              className=\"flex items-center gap-2 px-6 py-3 rounded-lg font-medium transition-colors bg-red-100 text-red-700 hover:bg-red-200\"\r\n            >\r\n              🚪 Leave Room\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport Head from 'next/head';\r\nimport DashboardLayout from '@/components/layout/DashboardLayout';\r\nimport VoiceChatRoom from '@/components/voiceChat/VoiceChatRoom';\r\n\r\nexport default function VerbfyTalkRoom() {\r\n  const router = useRouter();\r\n  const { roomId } = router.query as { roomId?: string };\r\n\r\n  const handleLeaveRoom = () => {\r\n    router.push('/verbfy-talk');\r\n  };\r\n\r\n  if (!roomId) {\r\n    return (\r\n      <DashboardLayout title=\"VerbfyTalk\">\r\n        <div className=\"flex items-center justify-center min-h-screen\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-2xl font-bold text-gray-900 mb-4\">Room Not Found</h1>\r\n            <p className=\"text-gray-600 mb-6\">The room you're looking for doesn't exist.</p>\r\n            <button\r\n              onClick={() => router.push('/verbfy-talk')}\r\n              className=\"bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-lg font-medium transition-colors\"\r\n            >\r\n              Back to Rooms\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </DashboardLayout>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>VerbfyTalk Room - {roomId}</title>\r\n        <meta name=\"description\" content=\"Join the conversation in VerbfyTalk\" />\r\n      </Head>\r\n      \r\n      <DashboardLayout title={`VerbfyTalk Room: ${roomId}`}>\r\n        <VoiceChatRoom roomId={roomId} onLeave={handleLeaveRoom} />\r\n      </DashboardLayout>\r\n    </>\r\n  );\r\n}"],"names":["window","__NEXT_P","push","__webpack_require__","VoiceChatRoom","param","roomId","onLeave","user","useAuthContext","isJoining","setIsJoining","useState","isConnected","isConnecting","currentRoom","users","localStream","isMicOn","error","connectionStatus","connect","disconnect","joinRoom","leaveRoom","toggleMic","requestMicrophone","clearError","useVoiceChat","state","setState","socketRef","useRef","peerConnectionsRef","Map","audioRefsRef","localStreamRef","reconnectAttemptsRef","webrtcConfig","iceServers","urls","initAudioContext","useCallback","AudioContext","audioContext","webkitAudioContext","resumeAudio","resume","document","addEventListener","once","console","log","isSecureContext","navigator","permissions","permission","query","name","permError","stream","mediaDevices","getUserMedia","audio","echoCancellation","noiseSuppression","autoGainControl","sampleRate","channelCount","current","prev","err","errorMessage","message","includes","createPeerConnection","socketId","isInitiator","peer","RTCPeerConnection","getTracks","forEach","track","addTrack","ontrack","concat","remoteStream","event","streams","createElement","srcObject","autoplay","volume","muted","setAttribute","set","body","appendChild","onicecandidate","candidate","emit","to","data","type","onconnectionstatechange","connectionState","handleSignal","from","signalData","get","setRemoteDescription","RTCSessionDescription","answer","createAnswer","setLocalDescription","addIceCandidate","RTCIceCandidate","token","connected","socket","io","process","env","NEXT_PUBLIC_BACKEND_URL","path","transports","timeout","forceNew","auth","on","reason","maxReconnectAttempts","setTimeout","id","userId","userName","createOffer","then","offer","catch","filter","close","delete","parentNode","removeChild","clear","stop","audioTrack","getAudioTracks","enabled","useEffect","connectToServer","tokenStorage","getToken","joinRoomWhenReady","handleLeaveRoom","handleRequestMicrophone","jsx_runtime","jsxs","div","className","jsx","h1","p","button","onClick","span","h2","getConnectionStatusIcon","getConnectionStatusColor","charAt","toUpperCase","slice","h3","svg","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","map","length","VerbfyTalkRoom","router","useRouter","Fragment","Head","title","meta","content","DashboardLayout"],"sourceRoot":""}