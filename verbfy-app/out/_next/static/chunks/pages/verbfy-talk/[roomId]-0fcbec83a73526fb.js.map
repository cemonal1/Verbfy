{"version":3,"file":"static/chunks/pages/verbfy-talk/[roomId]-0fcbec83a73526fb.js","mappings":"qFACA,CAAAA,OAAAC,QAAA,CAAAD,OAAAC,QAAA,MAAAC,IAAA,EACA,wBACA,WACA,OAAeC,EAAQ,MACvB,EACA,iPCYe,SAASC,QA4OCC,EA4CEA,EAvRzB,IAAMC,EAASC,CAAAA,EAAAA,EAAAA,SAAAA,IACT,CAAEC,OAAAA,CAAM,CAAE,CAAGF,EAAOG,KAAK,CACzB,CAAEC,EAAAA,CAAC,CAAE,CAAGC,CAAAA,EAAAA,EAAAA,CAAAA,IACR,CAACN,EAAMO,EAAQ,CAAGC,CAAAA,EAAAA,EAAAA,QAAAA,EAAqB,MACvC,CAACC,EAASC,EAAW,CAAGF,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IACjC,CAACG,EAASC,EAAW,CAAGJ,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IACjC,CAACK,EAAQC,EAAU,CAAGN,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IAC/B,CAACO,EAAcC,EAAgB,CAAGR,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IAC3C,CAACS,EAAmBC,EAAqB,CAAGV,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IAGrD,CAACW,EAASC,EAAW,CAAGZ,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IACjC,CAACa,EAAYC,EAAc,CAAGd,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IACvC,CAACe,EAAYC,EAAc,CAAGhB,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,GACvC,CAACiB,EAAcC,EAAgB,CAAGlB,CAAAA,EAAAA,EAAAA,QAAAA,EAAgB,EAAE,EAGpDmB,EAAiBC,CAAAA,EAAAA,EAAAA,MAAAA,EAA2B,MAC5CC,EAAqBD,CAAAA,EAAAA,EAAAA,MAAAA,EAAuC,IAAIE,KAChEC,EAAkBH,CAAAA,EAAAA,EAAAA,MAAAA,EAA4B,MAC9CI,EAAcJ,CAAAA,EAAAA,EAAAA,MAAAA,EAA4B,MAEhDK,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,KACH9B,GAeL+B,CAda,UACX,GAAI,KAIEC,EACmBA,EAJvB,IAAMA,EAAW,MAAMC,EAAAA,EAAaA,CAACC,cAAc,CAAClC,GAGpD,GAFAI,EAAQ4B,EAAIG,IAAI,EAAIH,GAEhBA,CAAAA,OAAAA,CAAAA,EAAAA,EAAIG,IAAI,GAARH,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAUV,YAAY,GAAIU,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAKV,YAAY,EAAE,CAE/C,IAAMc,EAAWd,CADIU,CAAAA,OAAAA,CAAAA,EAAAA,EAAIG,IAAI,GAARH,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAUV,YAAY,GAAIU,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAKV,YAAY,GAClCe,IAAI,CAAC,GAAYC,EAAEC,QAAQ,EACzD5B,EAAUyB,EACZ,CACF,QAAU,CACR7B,EAAW,GACb,CACF,IAEF,EAAG,CAACP,EAAO,EAGX,IAAMwC,EAAkB,UACtB,GAAI,CAIF,GAHAC,QAAQC,GAAG,CAAC,oDAGR,CAACC,UAAUC,YAAY,EAAI,CAACD,UAAUC,YAAY,CAACC,YAAY,CACjE,MAAM,MAAU,mDAGlB,IAAMC,EAAS,MAAMH,UAAUC,YAAY,CAACC,YAAY,CAAC,CACvDE,MAAO,CACLC,iBAAkB,GAClBC,iBAAkB,GAClBC,gBAAiB,EACnB,CACF,GAEAT,QAAQC,GAAG,CAAC,mCACZlB,EAAe2B,OAAO,CAAGL,EAGzBlB,EAAgBuB,OAAO,CAAG,IAAIC,aAC9B,IAAMC,EAASzB,EAAgBuB,OAAO,CAACG,uBAAuB,CAACR,EAC/DjB,CAAAA,EAAYsB,OAAO,CAAGvB,EAAgBuB,OAAO,CAACI,cAAc,GAC5DF,EAAOG,OAAO,CAAC3B,EAAYsB,OAAO,EAGlC,IAAMM,EAAY,IAAIC,WAAW7B,EAAYsB,OAAO,CAACQ,iBAAiB,EAChEC,EAAmB,KACvB,GAAI/B,EAAYsB,OAAO,CAAE,CACvBtB,EAAYsB,OAAO,CAACU,oBAAoB,CAACJ,GACzC,IAAMK,EAAUL,EAAUM,MAAM,CAAC,CAACC,EAAGC,IAAMD,EAAIC,GAAKR,EAAUS,MAAM,CACpE7C,EAAcyC,GACd3C,EAAc2C,EAAU,GAC1B,CACAK,sBAAsBP,EACxB,EACAA,IAEAnB,QAAQC,GAAG,CAAC,8CACd,CAAE,MAAO0B,EAAY,CACnB3B,QAAQ2B,KAAK,CAAC,gCAAiCA,GAG/C,IAAIC,EAAe,6BAanB,MAZID,oBAAAA,EAAME,IAAI,CACZD,EAAe,8EACND,kBAAAA,EAAME,IAAI,CACnBD,EAAe,kEACND,sBAAAA,EAAME,IAAI,CACnBD,EAAe,mDACS,qBAAfD,EAAME,IAAI,EACnBD,CAAAA,EAAe,wDAIjBE,MAAMF,GACAD,CACR,CACF,EAYMI,EAAa,UACjB,GAAKxE,GAEL,GAAIH,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAM4E,SAAS,GAAI,CAAC7D,EAAc,CACpCG,EAAqB,IACrB,MACF,CAEA,GAAI,CAGF,GAFAN,EAAW,IAEPuB,CADa,MAAMC,EAAAA,EAAaA,CAACyC,QAAQ,CAAC1E,EAAQ,CAAE2E,SAAU/D,CAAa,IACvEgE,OAAO,CAAE,CACfjE,EAAU,IACVE,EAAgB,IAChBE,EAAqB,IAGrB,MAAMyB,IAGN,IAAMqC,EAAa,MAAM5C,EAAAA,EAAaA,CAACC,cAAc,CAAClC,GACtDI,EAAQyE,EAAW1C,IAAI,EAAI0C,EAC7B,CACF,CAAE,MAAOT,EAAY,KAEbA,EAAAA,EADN3B,QAAQ2B,KAAK,CAAC,uBAAwBA,GACtCG,MAAMH,CAAAA,OAAAA,CAAAA,EAAAA,EAAMU,QAAQ,GAAdV,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAgBjC,IAAI,GAApBiC,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAsBW,OAAO,GAAI,sBACzC,QAAU,CACRtE,EAAW,GACb,EACF,EAEMuE,EAAc,UAClB,GAAKhF,EACL,GAAI,CAEEwB,EAAe2B,OAAO,EACxB3B,EAAe2B,OAAO,CAAC8B,SAAS,GAAGC,OAAO,CAACC,GAASA,EAAMC,IAAI,IAIhE1D,EAAmByB,OAAO,CAAC+B,OAAO,CAACG,GAAcA,EAAWC,KAAK,IACjE5D,EAAmByB,OAAO,CAACoC,KAAK,GAEhC,MAAMtD,EAAAA,EAAaA,CAACuD,SAAS,CAACxF,GAC9BW,EAAU,IAGVb,EAAOJ,IAAI,CAAC,eACd,CAAE,MAAO0E,EAAY,CACnB3B,QAAQ2B,KAAK,CAAC,wBAAyBA,EACzC,CACF,EAEMqB,EAAa,GACV,IAAIC,KAAKC,GAAYC,kBAAkB,CAAC,QAAS,CACtDC,KAAM,UACNC,MAAO,QACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,SACV,UAgBF,EAEI,GAAAC,EAAAC,GAAA,EAACC,EAAAA,CAAeA,CAAAA,CAACC,MAAM,2BACrB,GAAAH,EAAAC,GAAA,EAACG,MAAAA,CAAIC,UAAU,yCAAgC,8BAKhD1G,EASH,GAAAqG,EAAAC,GAAA,EAACC,EAAAA,CAAeA,CAAAA,CAACC,MAAOxG,EAAKyE,IAAI,EAAI,2BACnC,GAAA4B,EAAAM,IAAA,EAACF,MAAAA,CAAIC,UAAU,kCAEb,GAAAL,EAAAM,IAAA,EAACF,MAAAA,CAAIC,UAAU,0DACb,GAAAL,EAAAM,IAAA,EAACF,MAAAA,CAAIC,UAAU,kDACb,GAAAL,EAAAM,IAAA,EAACF,MAAAA,CAAIC,UAAU,mBACb,GAAAL,EAAAM,IAAA,EAACC,KAAAA,CAAGF,UAAU,qEACZ,GAAAL,EAAAC,GAAA,EAACO,EAAAA,CAAuBA,CAAAA,CAACH,UAAU,0BAClC1G,EAAKyE,IAAI,IAEZ,GAAA4B,EAAAC,GAAA,EAAC7D,IAAAA,CAAEiE,UAAU,8BAAsB1G,EAAK8G,WAAW,GAEnD,GAAAT,EAAAM,IAAA,EAACF,MAAAA,CAAIC,UAAU,+DACb,GAAAL,EAAAM,IAAA,EAACF,MAAAA,CAAIC,UAAU,oCACZ1G,EAAK4E,SAAS,CACb,GAAAyB,EAAAC,GAAA,EAACS,EAAAA,CAAcA,CAAAA,CAACL,UAAU,YAE1B,GAAAL,EAAAC,GAAA,EAACU,EAAAA,CAAYA,CAAAA,CAACN,UAAU,YAE1B,GAAAL,EAAAC,GAAA,EAACW,OAAAA,UAAMjH,EAAK4E,SAAS,CAAG,UAAY,cAGtC,GAAAyB,EAAAM,IAAA,EAACF,MAAAA,CAAIC,UAAU,oCACZQ,CArDI,IACnB,OAAQC,GACN,IAAK,WACH,MAAO,GAAAd,EAAAC,GAAA,EAACc,EAAAA,CAAeA,CAAAA,CAACV,UAAU,0BACpC,KAAK,eACH,MAAO,GAAAL,EAAAC,GAAA,EAACc,EAAAA,CAAeA,CAAAA,CAACV,UAAU,2BACpC,KAAK,WACH,MAAO,GAAAL,EAAAC,GAAA,EAACc,EAAAA,CAAeA,CAAAA,CAACV,UAAU,wBACpC,SACE,MAAO,GAAAL,EAAAC,GAAA,EAACc,EAAAA,CAAeA,CAAAA,CAACV,UAAU,yBACtC,CACF,GA0C8B1G,EAAKmH,KAAK,EACxB,GAAAd,EAAAC,GAAA,EAACW,OAAAA,UAAMjH,EAAKmH,KAAK,MAGnB,GAAAd,EAAAM,IAAA,EAACF,MAAAA,CAAIC,UAAU,oCACb,GAAAL,EAAAC,GAAA,EAACe,EAAAA,CAASA,CAAAA,CAACX,UAAU,YACrB,GAAAL,EAAAM,IAAA,EAACM,OAAAA,WAAMjH,CAAAA,OAAAA,CAAAA,EAAAA,EAAKyB,YAAY,GAAjBzB,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAmBsH,MAAM,CAAC,GAAY7E,EAAEC,QAAQ,EAAE2B,MAAM,GAAI,EAAE,IAAErE,EAAKuH,eAAe,OAG5FvH,EAAKwH,SAAS,EACb,GAAAnB,EAAAM,IAAA,EAACF,MAAAA,CAAIC,UAAU,oCACb,GAAAL,EAAAC,GAAA,EAACmB,EAAAA,CAAYA,CAAAA,CAACf,UAAU,YACxB,GAAAL,EAAAM,IAAA,EAACM,OAAAA,WAAK,WAASrB,EAAW5F,EAAKwH,SAAS,cAMhD,GAAAnB,EAAAC,GAAA,EAACG,MAAAA,CAAIC,UAAU,+BACZ,EASC,GAAAL,EAAAC,GAAA,EAACoB,SAAAA,CACCC,QAASxC,EACTuB,UAAU,qGACX,eAXD,GAAAL,EAAAC,GAAA,EAACoB,SAAAA,CACCC,QAAShD,EACTiD,SAAUjH,EACV+F,UAAU,2HAET/F,EAAU,aAAe,mBAajCX,EAAK6H,KAAK,EACT,GAAAxB,EAAAM,IAAA,EAACF,MAAAA,CAAIC,UAAU,6DACb,GAAAL,EAAAC,GAAA,EAACwB,KAAAA,CAAGpB,UAAU,0CAAiC,qBAC/C,GAAAL,EAAAC,GAAA,EAAC7D,IAAAA,CAAEiE,UAAU,yBAAiB1G,EAAK6H,KAAK,SAM9C,GAAAxB,EAAAM,IAAA,EAACF,MAAAA,CAAIC,UAAU,qDACb,GAAAL,EAAAM,IAAA,EAACoB,KAAAA,CAAGrB,UAAU,6EACZ,GAAAL,EAAAC,GAAA,EAACe,EAAAA,CAASA,CAAAA,CAACX,UAAU,YAAY,iBAClB1G,CAAAA,OAAAA,CAAAA,EAAAA,EAAKyB,YAAY,GAAjBzB,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAmBsH,MAAM,CAAC,GAAY7E,EAAEC,QAAQ,EAAE2B,MAAM,GAAI,EAAE,OAI9ExD,GACC,GAAAwF,EAAAM,IAAA,EAACF,MAAAA,CAAIC,UAAU,kEACb,GAAAL,EAAAM,IAAA,EAACmB,KAAAA,CAAGpB,UAAU,mEACZ,GAAAL,EAAAC,GAAA,EAAC0B,EAAAA,CAAeA,CAAAA,CAACtB,UAAU,YAAY,yBAKxC,EAAgBpD,OAAO,CAatB,GAAA+C,EAAAM,IAAA,EAACF,MAAAA,CAAIC,UAAU,oCACb,GAAAL,EAAAM,IAAA,EAACe,SAAAA,CACCC,QA3MC,KACjB,GAAIhG,EAAe2B,OAAO,CAAE,CAC1B,IAAM2E,EAAatG,EAAe2B,OAAO,CAAC4E,cAAc,EAAE,CAAC,EAAE,CACzDD,IACFA,EAAWE,OAAO,CAAG,CAACF,EAAWE,OAAO,CACxC/G,EAAW,CAAC6G,EAAWE,OAAO,EAElC,CACF,EAoMkBzB,UAAW,8EAIV0B,MAAA,CAHCjH,EACI,2CACA,4DAGN,GAAAkF,EAAAC,GAAA,EAAC+B,EAAAA,CAAcA,CAAAA,CAAC3B,UAAW,WAAuD0B,MAAA,CAA5CjH,EAAU,eAAiB,oBAChEA,EAAU,SAAW,UAIxB,GAAAkF,EAAAM,IAAA,EAACF,MAAAA,CAAIC,UAAU,oCACb,GAAAL,EAAAC,GAAA,EAACG,MAAAA,CAAIC,UAAU,6DACb,GAAAL,EAAAC,GAAA,EAACG,MAAAA,CACCC,UAAW,sCAEV0B,MAAA,CADC/G,EAAa,eAAiB,eAEhCiH,MAAO,CAAEC,MAAO,GAAiCH,MAAA,CAA9BI,KAAKC,GAAG,CAAClH,EAAAA,EAAgB,KAAK,IAAG,MAGxD,GAAA8E,EAAAC,GAAA,EAACW,OAAAA,CAAKP,UAAU,iCACbrF,EAAa,WAAa,iBApCjC,GAAAgF,EAAAM,IAAA,EAACF,MAAAA,CAAIC,UAAU,sEACb,GAAAL,EAAAC,GAAA,EAAC7D,IAAAA,CAAEiE,UAAU,wCAA+B,2DAG5C,GAAAL,EAAAC,GAAA,EAACoB,SAAAA,CACCC,QAAShF,EACT+D,UAAU,mHACX,sCAoCL,GAAAL,EAAAM,IAAA,EAACF,MAAAA,CAAIC,UAAU,uCACb,GAAAL,EAAAM,IAAA,EAAClE,IAAAA,WAAE,gBAAG,GAAA4D,EAAAC,GAAA,EAACoC,SAAAA,UAAO,wBACd,GAAArC,EAAAM,IAAA,EAACgC,KAAAA,CAAGjC,UAAU,iDACZ,GAAAL,EAAAC,GAAA,EAACsC,KAAAA,UAAG,kDACJ,GAAAvC,EAAAC,GAAA,EAACsC,KAAAA,UAAG,0CACJ,GAAAvC,EAAAC,GAAA,EAACsC,KAAAA,UAAG,+CACJ,GAAAvC,EAAAC,GAAA,EAACsC,KAAAA,UAAG,6EAMX5I,EAAKyB,YAAY,EAAIzB,EAAKyB,YAAY,CAAC4C,MAAM,CAAG,EAC/C,GAAAgC,EAAAC,GAAA,EAACG,MAAAA,CAAIC,UAAU,gEACZ1G,EAAKyB,YAAY,CACf6F,MAAM,CAAC,GAAY7E,EAAEC,QAAQ,EAC7B4E,MAAM,CAAC,CAAC7E,EAAQoG,EAAeC,IAE9BA,EAAIC,SAAS,CAACC,GAAeA,EAAYC,MAAM,CAACC,GAAG,GAAKzG,EAAEwG,MAAM,CAACC,GAAG,IAAML,GAE3EM,GAAG,CAAC,CAACH,EAAkBH,SAIfG,EAAAA,EAQuCA,QAX9C,GAAA3C,EAAAM,IAAA,EAACF,MAAAA,CAA+CC,UAAU,8DACxD,GAAAL,EAAAM,IAAA,EAACF,MAAAA,CAAIC,UAAU,qBACb,GAAAL,EAAAC,GAAA,EAACG,MAAAA,CAAIC,UAAU,sGACZsC,CAAAA,OAAAA,CAAAA,EAAAA,EAAYC,MAAM,GAAlBD,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,OAAAA,CAAAA,EAAAA,EAAoBvE,IAAI,GAAxBuE,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAA0BI,MAAM,CAAC,KAAM,MAGzCJ,EAAY3H,UAAU,EACrB,GAAAgF,EAAAC,GAAA,EAACG,MAAAA,CAAIC,UAAU,sGAGnB,GAAAL,EAAAM,IAAA,EAACF,MAAAA,CAAIC,UAAU,mBACb,GAAAL,EAAAC,GAAA,EAAC7D,IAAAA,CAAEiE,UAAU,qCAA6BsC,CAAAA,OAAAA,CAAAA,EAAAA,EAAYC,MAAM,GAAlBD,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAoBvE,IAAI,GAAI,iBACtE,GAAA4B,EAAAM,IAAA,EAAClE,IAAAA,CAAEiE,UAAU,kCAAwB,UAC3Bd,EAAWoD,EAAYK,QAAQ,KAGzC,GAAAhD,EAAAM,IAAA,EAACF,MAAAA,CAAIC,UAAU,yCACb,GAAAL,EAAAC,GAAA,EAAC+B,EAAAA,CAAcA,CAAAA,CAAC3B,UAAW,WAE1B0B,MAAA,CADCY,EAAY7H,OAAO,CAAG,eAAiB,oBAEzC,GAAAkF,EAAAC,GAAA,EAACW,OAAAA,CAAKP,UAAU,iCACbsC,EAAY7H,OAAO,CAAG,QAAU,mBArB/B,GAA6B0H,MAAAA,CAA1BG,EAAYC,MAAM,CAACC,GAAG,CAAC,KAASd,MAAA,CAANS,QA6B7C,GAAAxC,EAAAC,GAAA,EAAC7D,IAAAA,CAAEiE,UAAU,0CAAiC,2BAKjDzF,GACC,GAAAoF,EAAAC,GAAA,EAACG,MAAAA,CAAIC,UAAU,sFACb,GAAAL,EAAAM,IAAA,EAACF,MAAAA,CAAIC,UAAU,yDACb,GAAAL,EAAAC,GAAA,EAACwB,KAAAA,CAAGpB,UAAU,oDAA2C,wBACzD,GAAAL,EAAAC,GAAA,EAACgD,QAAAA,CACCC,KAAK,WACLC,MAAOzI,EACP0I,SAAU,GAAOzI,EAAgB0I,EAAEC,MAAM,CAACH,KAAK,EAC/CI,YAAY,iBACZlD,UAAU,gHAEZ,GAAAL,EAAAM,IAAA,EAACF,MAAAA,CAAIC,UAAU,uBACb,GAAAL,EAAAC,GAAA,EAACoB,SAAAA,CACCC,QAAS,KACPzG,EAAqB,IACrBF,EAAgB,GAClB,EACA0F,UAAU,6FACX,WAGD,GAAAL,EAAAC,GAAA,EAACoB,SAAAA,CACCC,QAAShD,EACTiD,SAAUjH,EACV+F,UAAU,oGAET/F,EAAU,aAAe,sBAzNtC,GAAA0F,EAAAC,GAAA,EAACC,EAAAA,CAAeA,CAAAA,CAACC,MAAM,0BACrB,GAAAH,EAAAC,GAAA,EAACG,MAAAA,CAAIC,UAAU,yCAAgC,oBAiOvD","sources":["webpack://_N_E/?9c3e","webpack://_N_E/./pages/verbfy-talk/[roomId].tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/verbfy-talk/[roomId]\",\n      function () {\n        return require(\"private-next-pages/verbfy-talk/[roomId].tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/verbfy-talk/[roomId]\"])\n      });\n    }\n  ","import React, { useEffect, useState, useRef } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport DashboardLayout from '@/components/layout/DashboardLayout';\r\nimport { useI18n } from '@/lib/i18n';\r\nimport { verbfyTalkAPI } from '@/lib/api';\r\nimport { \r\n  UsersIcon, \r\n  LockClosedIcon, \r\n  GlobeAltIcon,\r\n  AcademicCapIcon,\r\n  ChatBubbleLeftRightIcon,\r\n  CalendarIcon,\r\n  ClockIcon,\r\n  MicrophoneIcon,\r\n  SpeakerWaveIcon,\r\n  VideoCameraIcon\r\n} from '@heroicons/react/24/outline';\r\n\r\nexport default function VerbfyTalkRoomPage() {\r\n  const router = useRouter();\r\n  const { roomId } = router.query as { roomId?: string };\r\n  const { t } = useI18n();\r\n  const [room, setRoom] = useState<any | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [joining, setJoining] = useState(false);\r\n  const [joined, setJoined] = useState(false);\r\n  const [joinPassword, setJoinPassword] = useState('');\r\n  const [showPasswordModal, setShowPasswordModal] = useState(false);\r\n  \r\n  // WebRTC states\r\n  const [isMuted, setIsMuted] = useState(false);\r\n  const [isSpeaking, setIsSpeaking] = useState(false);\r\n  const [audioLevel, setAudioLevel] = useState(0);\r\n  const [participants, setParticipants] = useState<any[]>([]);\r\n  \r\n  // WebRTC refs\r\n  const localStreamRef = useRef<MediaStream | null>(null);\r\n  const peerConnectionsRef = useRef<Map<string, RTCPeerConnection>>(new Map());\r\n  const audioContextRef = useRef<AudioContext | null>(null);\r\n  const analyserRef = useRef<AnalyserNode | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (!roomId) return;\r\n    const load = async () => {\r\n      try {\r\n        const res: any = await verbfyTalkAPI.getRoomDetails(roomId);\r\n        setRoom(res.data || res);\r\n        // Check if user is already in the room\r\n        if (res.data?.participants || res?.participants) {\r\n          const participants = res.data?.participants || res?.participants;\r\n          const isInRoom = participants.some((p: any) => p.isActive);\r\n          setJoined(isInRoom);\r\n        }\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    load();\r\n  }, [roomId]);\r\n\r\n  // WebRTC Audio Functions\r\n  const initializeAudio = async () => {\r\n    try {\r\n      console.log('🎤 Requesting microphone permission...');\r\n      \r\n      // Check if getUserMedia is supported\r\n      if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\r\n        throw new Error('Microphone access not supported in this browser');\r\n      }\r\n\r\n      const stream = await navigator.mediaDevices.getUserMedia({ \r\n        audio: {\r\n          echoCancellation: true,\r\n          noiseSuppression: true,\r\n          autoGainControl: true\r\n        }\r\n      });\r\n      \r\n      console.log('✅ Microphone permission granted');\r\n      localStreamRef.current = stream;\r\n      \r\n      // Create audio context for level monitoring\r\n      audioContextRef.current = new AudioContext();\r\n      const source = audioContextRef.current.createMediaStreamSource(stream);\r\n      analyserRef.current = audioContextRef.current.createAnalyser();\r\n      source.connect(analyserRef.current);\r\n      \r\n      // Monitor audio levels\r\n      const dataArray = new Uint8Array(analyserRef.current.frequencyBinCount);\r\n      const updateAudioLevel = () => {\r\n        if (analyserRef.current) {\r\n          analyserRef.current.getByteFrequencyData(dataArray);\r\n          const average = dataArray.reduce((a, b) => a + b) / dataArray.length;\r\n          setAudioLevel(average);\r\n          setIsSpeaking(average > 30);\r\n        }\r\n        requestAnimationFrame(updateAudioLevel);\r\n      };\r\n      updateAudioLevel();\r\n      \r\n      console.log('🎤 Audio initialized successfully');\r\n    } catch (error: any) {\r\n      console.error('❌ Failed to initialize audio:', error);\r\n      \r\n      // Provide user-friendly error messages\r\n      let errorMessage = 'Failed to access microphone';\r\n      if (error.name === 'NotAllowedError') {\r\n        errorMessage = 'Microphone permission denied. Please allow microphone access and try again.';\r\n      } else if (error.name === 'NotFoundError') {\r\n        errorMessage = 'No microphone found. Please connect a microphone and try again.';\r\n      } else if (error.name === 'NotSupportedError') {\r\n        errorMessage = 'Microphone access not supported in this browser.';\r\n      } else if (error.name === 'NotReadableError') {\r\n        errorMessage = 'Microphone is already in use by another application.';\r\n      }\r\n      \r\n      // Show error to user\r\n      alert(errorMessage);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const toggleMute = () => {\r\n    if (localStreamRef.current) {\r\n      const audioTrack = localStreamRef.current.getAudioTracks()[0];\r\n      if (audioTrack) {\r\n        audioTrack.enabled = !audioTrack.enabled;\r\n        setIsMuted(!audioTrack.enabled);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleJoin = async () => {\r\n    if (!roomId) return;\r\n    \r\n    if (room?.isPrivate && !joinPassword) {\r\n      setShowPasswordModal(true);\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setJoining(true);\r\n      const res: any = await verbfyTalkAPI.joinRoom(roomId, { password: joinPassword });\r\n      if (res.success) {\r\n        setJoined(true);\r\n        setJoinPassword('');\r\n        setShowPasswordModal(false);\r\n        \r\n        // Initialize WebRTC audio after joining\r\n        await initializeAudio();\r\n        \r\n        // Reload room data to show updated participants\r\n        const updatedRes = await verbfyTalkAPI.getRoomDetails(roomId);\r\n        setRoom(updatedRes.data || updatedRes);\r\n      }\r\n    } catch (error: any) {\r\n      console.error('Failed to join room:', error);\r\n      alert(error.response?.data?.message || 'Failed to join room');\r\n    } finally {\r\n      setJoining(false);\r\n    }\r\n  };\r\n\r\n  const handleLeave = async () => {\r\n    if (!roomId) return;\r\n    try {\r\n      // Stop all audio streams\r\n      if (localStreamRef.current) {\r\n        localStreamRef.current.getTracks().forEach(track => track.stop());\r\n      }\r\n      \r\n      // Close peer connections\r\n      peerConnectionsRef.current.forEach(connection => connection.close());\r\n      peerConnectionsRef.current.clear();\r\n      \r\n      await verbfyTalkAPI.leaveRoom(roomId);\r\n      setJoined(false);\r\n      \r\n      // Navigate back to rooms list\r\n      router.push('/verbfy-talk');\r\n    } catch (error: any) {\r\n      console.error('Failed to leave room:', error);\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString: string) => {\r\n    return new Date(dateString).toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  const getLevelIcon = (level: string) => {\r\n    switch (level) {\r\n      case 'Beginner':\r\n        return <AcademicCapIcon className=\"w-4 h-4 text-green-500\" />;\r\n      case 'Intermediate':\r\n        return <AcademicCapIcon className=\"w-4 h-4 text-yellow-500\" />;\r\n      case 'Advanced':\r\n        return <AcademicCapIcon className=\"w-4 h-4 text-red-500\" />;\r\n      default:\r\n        return <AcademicCapIcon className=\"w-4 h-4 text-blue-500\" />;\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <DashboardLayout title=\"Loading Room...\">\r\n        <div className=\"p-8 text-center text-gray-500\">Loading room details...</div>\r\n      </DashboardLayout>\r\n    );\r\n  }\r\n\r\n  if (!room) {\r\n    return (\r\n      <DashboardLayout title=\"Room Not Found\">\r\n        <div className=\"p-8 text-center text-gray-500\">Room not found</div>\r\n      </DashboardLayout>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <DashboardLayout title={room.name || 'VerbfyTalk Room'}>\r\n      <div className=\"max-w-4xl mx-auto p-6\">\r\n        {/* Room Header */}\r\n        <div className=\"bg-white rounded-lg shadow-sm border p-6 mb-6\">\r\n          <div className=\"flex items-start justify-between mb-4\">\r\n            <div className=\"flex-1\">\r\n              <h1 className=\"text-3xl font-bold text-gray-900 flex items-center gap-3\">\r\n                <ChatBubbleLeftRightIcon className=\"w-8 h-8 text-blue-600\" />\r\n                {room.name}\r\n              </h1>\r\n              <p className=\"text-gray-600 mt-2\">{room.description}</p>\r\n              \r\n              <div className=\"flex items-center gap-4 mt-4 text-sm text-gray-500\">\r\n                <div className=\"flex items-center gap-2\">\r\n                  {room.isPrivate ? (\r\n                    <LockClosedIcon className=\"w-4 h-4\" />\r\n                  ) : (\r\n                    <GlobeAltIcon className=\"w-4 h-4\" />\r\n                  )}\r\n                  <span>{room.isPrivate ? 'Private' : 'Public'}</span>\r\n                </div>\r\n                \r\n                <div className=\"flex items-center gap-2\">\r\n                  {getLevelIcon(room.level)}\r\n                  <span>{room.level}</span>\r\n                </div>\r\n                \r\n                <div className=\"flex items-center gap-2\">\r\n                  <UsersIcon className=\"w-4 h-4\" />\r\n                  <span>{room.participants?.filter((p: any) => p.isActive).length || 0}/{room.maxParticipants}</span>\r\n                </div>\r\n                \r\n                {room.startedAt && (\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <CalendarIcon className=\"w-4 h-4\" />\r\n                    <span>Started {formatDate(room.startedAt)}</span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"flex flex-col gap-2\">\r\n              {!joined ? (\r\n                <button\r\n                  onClick={handleJoin}\r\n                  disabled={joining}\r\n                  className=\"bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-lg font-medium transition-colors disabled:opacity-50\"\r\n                >\r\n                  {joining ? 'Joining...' : 'Join Room'}\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  onClick={handleLeave}\r\n                  className=\"bg-red-600 hover:bg-red-700 text-white px-6 py-3 rounded-lg font-medium transition-colors\"\r\n                >\r\n                  Leave Room\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          {room.topic && (\r\n            <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\r\n              <h3 className=\"font-medium text-blue-900 mb-2\">Discussion Topic</h3>\r\n              <p className=\"text-blue-800\">{room.topic}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Participants */}\r\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\r\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-4 flex items-center gap-2\">\r\n            <UsersIcon className=\"w-5 h-5\" />\r\n            Participants ({room.participants?.filter((p: any) => p.isActive).length || 0})\r\n          </h2>\r\n          \r\n          {/* Audio Controls for joined users */}\r\n          {joined && (\r\n            <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4 mb-4\">\r\n              <h3 className=\"font-medium text-blue-900 mb-3 flex items-center gap-2\">\r\n                <SpeakerWaveIcon className=\"w-5 h-5\" />\r\n                Voice Chat Controls\r\n              </h3>\r\n              \r\n              {/* Microphone Permission Status */}\r\n              {!localStreamRef.current ? (\r\n                <div className=\"mb-3 p-3 bg-yellow-50 border border-yellow-200 rounded-lg\">\r\n                  <p className=\"text-yellow-800 text-sm mb-2\">\r\n                    🔒 Microphone access required for voice chat\r\n                  </p>\r\n                  <button\r\n                    onClick={initializeAudio}\r\n                    className=\"bg-yellow-600 hover:bg-yellow-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors\"\r\n                  >\r\n                    🎤 Enable Microphone\r\n                  </button>\r\n                </div>\r\n              ) : (\r\n                <div className=\"flex items-center gap-4\">\r\n                  <button\r\n                    onClick={toggleMute}\r\n                    className={`flex items-center gap-2 px-4 py-2 rounded-lg font-medium transition-colors ${\r\n                      isMuted \r\n                        ? 'bg-red-100 text-red-700 hover:bg-red-200' \r\n                        : 'bg-green-100 text-green-700 hover:bg-green-200'\r\n                    }`}\r\n                  >\r\n                    <MicrophoneIcon className={`w-5 h-5 ${isMuted ? 'text-red-600' : 'text-green-600'}`} />\r\n                    {isMuted ? 'Unmute' : 'Mute'}\r\n                  </button>\r\n                  \r\n                  {/* Audio Level Indicator */}\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <div className=\"w-20 h-2 bg-gray-200 rounded-full overflow-hidden\">\r\n                      <div \r\n                        className={`h-full transition-all duration-100 ${\r\n                          isSpeaking ? 'bg-green-500' : 'bg-blue-500'\r\n                        }`}\r\n                        style={{ width: `${Math.min(audioLevel * 2, 100)}%` }}\r\n                      />\r\n                    </div>\r\n                    <span className=\"text-sm text-gray-600\">\r\n                      {isSpeaking ? 'Speaking' : 'Silent'}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              \r\n              {/* Voice Chat Instructions */}\r\n              <div className=\"mt-3 text-xs text-blue-700\">\r\n                <p>💡 <strong>Voice Chat Tips:</strong></p>\r\n                <ul className=\"list-disc list-inside mt-1 space-y-1\">\r\n                  <li>Click \"Enable Microphone\" to start voice chat</li>\r\n                  <li>Use Mute/Unmute to control your audio</li>\r\n                  <li>Green indicator shows when you're speaking</li>\r\n                  <li>Ensure your microphone is working and not blocked by other apps</li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          {room.participants && room.participants.length > 0 ? (\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n              {room.participants\r\n                .filter((p: any) => p.isActive) // Only show active participants\r\n                .filter((p: any, index: number, arr: any[]) => \r\n                  // Remove duplicates by userId\r\n                  arr.findIndex(participant => participant.userId._id === p.userId._id) === index\r\n                )\r\n                .map((participant: any, index: number) => (\r\n                  <div key={`${participant.userId._id}-${index}`} className=\"flex items-center gap-3 p-3 bg-gray-50 rounded-lg\">\r\n                    <div className=\"relative\">\r\n                      <div className=\"w-10 h-10 bg-blue-600 rounded-full flex items-center justify-center text-white font-medium\">\r\n                        {participant.userId?.name?.charAt(0) || 'U'}\r\n                      </div>\r\n                      {/* Speaking indicator */}\r\n                      {participant.isSpeaking && (\r\n                        <div className=\"absolute -top-1 -right-1 w-4 h-4 bg-green-500 rounded-full border-2 border-white animate-pulse\" />\r\n                      )}\r\n                    </div>\r\n                    <div className=\"flex-1\">\r\n                      <p className=\"font-medium text-gray-900\">{participant.userId?.name || 'Unknown User'}</p>\r\n                      <p className=\"text-sm text-gray-500\">\r\n                        Joined {formatDate(participant.joinedAt)}\r\n                      </p>\r\n                      {/* Audio status */}\r\n                      <div className=\"flex items-center gap-2 mt-1\">\r\n                        <MicrophoneIcon className={`w-4 h-4 ${\r\n                          participant.isMuted ? 'text-red-500' : 'text-green-500'\r\n                        }`} />\r\n                        <span className=\"text-xs text-gray-500\">\r\n                          {participant.isMuted ? 'Muted' : 'Active'}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          ) : (\r\n            <p className=\"text-gray-500 text-center py-8\">No participants yet</p>\r\n          )}\r\n        </div>\r\n\r\n        {/* Password Modal */}\r\n        {showPasswordModal && (\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n            <div className=\"bg-white rounded-lg p-6 max-w-md w-full mx-4\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Enter Room Password</h3>\r\n              <input\r\n                type=\"password\"\r\n                value={joinPassword}\r\n                onChange={(e) => setJoinPassword(e.target.value)}\r\n                placeholder=\"Enter password\"\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 mb-4\"\r\n              />\r\n              <div className=\"flex gap-3\">\r\n                <button\r\n                  onClick={() => {\r\n                    setShowPasswordModal(false);\r\n                    setJoinPassword('');\r\n                  }}\r\n                  className=\"flex-1 px-4 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  onClick={handleJoin}\r\n                  disabled={joining}\r\n                  className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50\"\r\n                >\r\n                  {joining ? 'Joining...' : 'Join'}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </DashboardLayout>\r\n  );\r\n}"],"names":["window","__NEXT_P","push","__webpack_require__","VerbfyTalkRoomPage","room","router","useRouter","roomId","query","t","useI18n","setRoom","useState","loading","setLoading","joining","setJoining","joined","setJoined","joinPassword","setJoinPassword","showPasswordModal","setShowPasswordModal","isMuted","setIsMuted","isSpeaking","setIsSpeaking","audioLevel","setAudioLevel","participants","setParticipants","localStreamRef","useRef","peerConnectionsRef","Map","audioContextRef","analyserRef","useEffect","load","res","verbfyTalkAPI","getRoomDetails","data","isInRoom","some","p","isActive","initializeAudio","console","log","navigator","mediaDevices","getUserMedia","stream","audio","echoCancellation","noiseSuppression","autoGainControl","current","AudioContext","source","createMediaStreamSource","createAnalyser","connect","dataArray","Uint8Array","frequencyBinCount","updateAudioLevel","getByteFrequencyData","average","reduce","a","b","length","requestAnimationFrame","error","errorMessage","name","alert","handleJoin","isPrivate","joinRoom","password","success","updatedRes","response","message","handleLeave","getTracks","forEach","track","stop","connection","close","clear","leaveRoom","formatDate","Date","dateString","toLocaleDateString","year","month","day","hour","minute","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","DashboardLayout","title","div","className","jsxs","h1","ChatBubbleLeftRightIcon","description","LockClosedIcon","GlobeAltIcon","span","getLevelIcon","level","AcademicCapIcon","UsersIcon","filter","maxParticipants","startedAt","CalendarIcon","button","onClick","disabled","topic","h3","h2","SpeakerWaveIcon","audioTrack","getAudioTracks","enabled","concat","MicrophoneIcon","style","width","Math","min","strong","ul","li","index","arr","findIndex","participant","userId","_id","map","charAt","joinedAt","input","type","value","onChange","e","target","placeholder"],"sourceRoot":""}