{"version":3,"file":"static/chunks/pages/verbfy-talk/[roomId]-ba526a3a72331fe2.js","mappings":"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","sources":["webpack://_N_E/?9c3e","webpack://_N_E/./pages/verbfy-talk/[roomId].tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/verbfy-talk/[roomId]\",\n      function () {\n        return require(\"private-next-pages/verbfy-talk/[roomId].tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/verbfy-talk/[roomId]\"])\n      });\n    }\n  ","import React, { useEffect, useState, useRef } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport DashboardLayout from '@/components/layout/DashboardLayout';\r\nimport { useI18n } from '@/lib/i18n';\r\nimport { verbfyTalkAPI } from '@/lib/api';\r\nimport { \r\n  UsersIcon, \r\n  LockClosedIcon, \r\n  GlobeAltIcon,\r\n  AcademicCapIcon,\r\n  ChatBubbleLeftRightIcon,\r\n  CalendarIcon,\r\n  ClockIcon,\r\n  MicrophoneIcon,\r\n  SpeakerWaveIcon,\r\n  VideoCameraIcon\r\n} from '@heroicons/react/24/outline';\r\n\r\nexport default function VerbfyTalkRoomPage() {\r\n  const router = useRouter();\r\n  const { roomId } = router.query as { roomId?: string };\r\n  const { t } = useI18n();\r\n  const [room, setRoom] = useState<any | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [joining, setJoining] = useState(false);\r\n  const [joined, setJoined] = useState(false);\r\n  const [joinPassword, setJoinPassword] = useState('');\r\n  const [showPasswordModal, setShowPasswordModal] = useState(false);\r\n  \r\n  // WebRTC states\r\n  const [isMuted, setIsMuted] = useState(false);\r\n  const [isSpeaking, setIsSpeaking] = useState(false);\r\n  const [audioLevel, setAudioLevel] = useState(0);\r\n  const [participants, setParticipants] = useState<any[]>([]);\r\n  \r\n  // WebRTC refs\r\n  const localStreamRef = useRef<MediaStream | null>(null);\r\n  const peerConnectionsRef = useRef<Map<string, RTCPeerConnection>>(new Map());\r\n  const audioContextRef = useRef<AudioContext | null>(null);\r\n  const analyserRef = useRef<AnalyserNode | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (!roomId) return;\r\n    const load = async () => {\r\n      try {\r\n        const res: any = await verbfyTalkAPI.getRoomDetails(roomId);\r\n        setRoom(res.data || res);\r\n        // Check if user is already in the room\r\n        if (res.data?.participants || res?.participants) {\r\n          const participants = res.data?.participants || res?.participants;\r\n          const isInRoom = participants.some((p: any) => p.isActive);\r\n          setJoined(isInRoom);\r\n        }\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    load();\r\n  }, [roomId]);\r\n\r\n  // WebRTC Audio Functions\r\n  const initializeAudio = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ \r\n        audio: {\r\n          echoCancellation: true,\r\n          noiseSuppression: true,\r\n          autoGainControl: true\r\n        }\r\n      });\r\n      \r\n      localStreamRef.current = stream;\r\n      \r\n      // Create audio context for level monitoring\r\n      audioContextRef.current = new AudioContext();\r\n      const source = audioContextRef.current.createMediaStreamSource(stream);\r\n      analyserRef.current = audioContextRef.current.createAnalyser();\r\n      source.connect(analyserRef.current);\r\n      \r\n      // Monitor audio levels\r\n      const dataArray = new Uint8Array(analyserRef.current.frequencyBinCount);\r\n      const updateAudioLevel = () => {\r\n        if (analyserRef.current) {\r\n          analyserRef.current.getByteFrequencyData(dataArray);\r\n          const average = dataArray.reduce((a, b) => a + b) / dataArray.length;\r\n          setAudioLevel(average);\r\n          setIsSpeaking(average > 30);\r\n        }\r\n        requestAnimationFrame(updateAudioLevel);\r\n      };\r\n      updateAudioLevel();\r\n      \r\n      console.log('🎤 Audio initialized successfully');\r\n    } catch (error) {\r\n      console.error('❌ Failed to initialize audio:', error);\r\n    }\r\n  };\r\n\r\n  const toggleMute = () => {\r\n    if (localStreamRef.current) {\r\n      const audioTrack = localStreamRef.current.getAudioTracks()[0];\r\n      if (audioTrack) {\r\n        audioTrack.enabled = !audioTrack.enabled;\r\n        setIsMuted(!audioTrack.enabled);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleJoin = async () => {\r\n    if (!roomId) return;\r\n    \r\n    if (room?.isPrivate && !joinPassword) {\r\n      setShowPasswordModal(true);\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setJoining(true);\r\n      const res: any = await verbfyTalkAPI.joinRoom(roomId, { password: joinPassword });\r\n      if (res.success) {\r\n        setJoined(true);\r\n        setJoinPassword('');\r\n        setShowPasswordModal(false);\r\n        \r\n        // Initialize WebRTC audio after joining\r\n        await initializeAudio();\r\n        \r\n        // Reload room data to show updated participants\r\n        const updatedRes = await verbfyTalkAPI.getRoomDetails(roomId);\r\n        setRoom(updatedRes.data || updatedRes);\r\n      }\r\n    } catch (error: any) {\r\n      console.error('Failed to join room:', error);\r\n      alert(error.response?.data?.message || 'Failed to join room');\r\n    } finally {\r\n      setJoining(false);\r\n    }\r\n  };\r\n\r\n  const handleLeave = async () => {\r\n    if (!roomId) return;\r\n    try {\r\n      // Stop all audio streams\r\n      if (localStreamRef.current) {\r\n        localStreamRef.current.getTracks().forEach(track => track.stop());\r\n      }\r\n      \r\n      // Close peer connections\r\n      peerConnectionsRef.current.forEach(connection => connection.close());\r\n      peerConnectionsRef.current.clear();\r\n      \r\n      await verbfyTalkAPI.leaveRoom(roomId);\r\n      setJoined(false);\r\n      \r\n      // Navigate back to rooms list\r\n      router.push('/verbfy-talk');\r\n    } catch (error: any) {\r\n      console.error('Failed to leave room:', error);\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString: string) => {\r\n    return new Date(dateString).toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  const getLevelIcon = (level: string) => {\r\n    switch (level) {\r\n      case 'Beginner':\r\n        return <AcademicCapIcon className=\"w-4 h-4 text-green-500\" />;\r\n      case 'Intermediate':\r\n        return <AcademicCapIcon className=\"w-4 h-4 text-yellow-500\" />;\r\n      case 'Advanced':\r\n        return <AcademicCapIcon className=\"w-4 h-4 text-red-500\" />;\r\n      default:\r\n        return <AcademicCapIcon className=\"w-4 h-4 text-blue-500\" />;\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <DashboardLayout title=\"Loading Room...\">\r\n        <div className=\"p-8 text-center text-gray-500\">Loading room details...</div>\r\n      </DashboardLayout>\r\n    );\r\n  }\r\n\r\n  if (!room) {\r\n    return (\r\n      <DashboardLayout title=\"Room Not Found\">\r\n        <div className=\"p-8 text-center text-gray-500\">Room not found</div>\r\n      </DashboardLayout>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <DashboardLayout title={room.name || 'VerbfyTalk Room'}>\r\n      <div className=\"max-w-4xl mx-auto p-6\">\r\n        {/* Room Header */}\r\n        <div className=\"bg-white rounded-lg shadow-sm border p-6 mb-6\">\r\n          <div className=\"flex items-start justify-between mb-4\">\r\n            <div className=\"flex-1\">\r\n              <h1 className=\"text-3xl font-bold text-gray-900 flex items-center gap-3\">\r\n                <ChatBubbleLeftRightIcon className=\"w-8 h-8 text-blue-600\" />\r\n                {room.name}\r\n              </h1>\r\n              <p className=\"text-gray-600 mt-2\">{room.description}</p>\r\n              \r\n              <div className=\"flex items-center gap-4 mt-4 text-sm text-gray-500\">\r\n                <div className=\"flex items-center gap-2\">\r\n                  {room.isPrivate ? (\r\n                    <LockClosedIcon className=\"w-4 h-4\" />\r\n                  ) : (\r\n                    <GlobeAltIcon className=\"w-4 h-4\" />\r\n                  )}\r\n                  <span>{room.isPrivate ? 'Private' : 'Public'}</span>\r\n                </div>\r\n                \r\n                <div className=\"flex items-center gap-2\">\r\n                  {getLevelIcon(room.level)}\r\n                  <span>{room.level}</span>\r\n                </div>\r\n                \r\n                <div className=\"flex items-center gap-2\">\r\n                  <UsersIcon className=\"w-4 h-4\" />\r\n                  <span>{room.participants?.filter((p: any) => p.isActive).length || 0}/{room.maxParticipants}</span>\r\n                </div>\r\n                \r\n                {room.startedAt && (\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <CalendarIcon className=\"w-4 h-4\" />\r\n                    <span>Started {formatDate(room.startedAt)}</span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"flex flex-col gap-2\">\r\n              {!joined ? (\r\n                <button\r\n                  onClick={handleJoin}\r\n                  disabled={joining}\r\n                  className=\"bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-lg font-medium transition-colors disabled:opacity-50\"\r\n                >\r\n                  {joining ? 'Joining...' : 'Join Room'}\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  onClick={handleLeave}\r\n                  className=\"bg-red-600 hover:bg-red-700 text-white px-6 py-3 rounded-lg font-medium transition-colors\"\r\n                >\r\n                  Leave Room\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          {room.topic && (\r\n            <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\r\n              <h3 className=\"font-medium text-blue-900 mb-2\">Discussion Topic</h3>\r\n              <p className=\"text-blue-800\">{room.topic}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Participants */}\r\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\r\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-4 flex items-center gap-2\">\r\n            <UsersIcon className=\"w-5 h-5\" />\r\n            Participants ({room.participants?.filter((p: any) => p.isActive).length || 0})\r\n          </h2>\r\n          \r\n          {/* Audio Controls for joined users */}\r\n          {joined && (\r\n            <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4 mb-4\">\r\n              <h3 className=\"font-medium text-blue-900 mb-3 flex items-center gap-2\">\r\n                <SpeakerWaveIcon className=\"w-5 h-5\" />\r\n                Voice Chat Controls\r\n              </h3>\r\n              <div className=\"flex items-center gap-4\">\r\n                <button\r\n                  onClick={toggleMute}\r\n                  className={`flex items-center gap-2 px-4 py-2 rounded-lg font-medium transition-colors ${\r\n                    isMuted \r\n                      ? 'bg-red-100 text-red-700 hover:bg-red-200' \r\n                      : 'bg-green-100 text-green-700 hover:bg-green-200'\r\n                  }`}\r\n                >\r\n                  <MicrophoneIcon className={`w-5 h-5 ${isMuted ? 'text-red-600' : 'text-green-600'}`} />\r\n                  {isMuted ? 'Unmute' : 'Mute'}\r\n                </button>\r\n                \r\n                {/* Audio Level Indicator */}\r\n                <div className=\"flex items-center gap-2\">\r\n                  <div className=\"w-20 h-2 bg-gray-200 rounded-full overflow-hidden\">\r\n                    <div \r\n                      className={`h-full transition-all duration-100 ${\r\n                        isSpeaking ? 'bg-green-500' : 'bg-blue-500'\r\n                      }`}\r\n                      style={{ width: `${Math.min(audioLevel * 2, 100)}%` }}\r\n                    />\r\n                  </div>\r\n                  <span className=\"text-sm text-gray-600\">\r\n                    {isSpeaking ? 'Speaking' : 'Silent'}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          {room.participants && room.participants.length > 0 ? (\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n              {room.participants\r\n                .filter((p: any) => p.isActive)\r\n                .map((participant: any, index: number) => (\r\n                  <div key={index} className=\"flex items-center gap-3 p-3 bg-gray-50 rounded-lg\">\r\n                    <div className=\"relative\">\r\n                      <div className=\"w-10 h-10 bg-blue-600 rounded-full flex items-center justify-center text-white font-medium\">\r\n                        {participant.userId?.name?.charAt(0) || 'U'}\r\n                      </div>\r\n                      {/* Speaking indicator */}\r\n                      {participant.isSpeaking && (\r\n                        <div className=\"absolute -top-1 -right-1 w-4 h-4 bg-green-500 rounded-full border-2 border-white animate-pulse\" />\r\n                      )}\r\n                    </div>\r\n                    <div className=\"flex-1\">\r\n                      <p className=\"font-medium text-gray-900\">{participant.userId?.name || 'Unknown User'}</p>\r\n                      <p className=\"text-sm text-gray-500\">\r\n                        Joined {formatDate(participant.joinedAt)}\r\n                      </p>\r\n                      {/* Audio status */}\r\n                      <div className=\"flex items-center gap-2 mt-1\">\r\n                        <MicrophoneIcon className={`w-4 h-4 ${\r\n                          participant.isMuted ? 'text-red-500' : 'text-green-500'\r\n                        }`} />\r\n                        <span className=\"text-xs text-gray-500\">\r\n                          {participant.isMuted ? 'Muted' : 'Active'}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          ) : (\r\n            <p className=\"text-gray-500 text-center py-8\">No participants yet</p>\r\n          )}\r\n        </div>\r\n\r\n        {/* Password Modal */}\r\n        {showPasswordModal && (\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n            <div className=\"bg-white rounded-lg p-6 max-w-md w-full mx-4\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Enter Room Password</h3>\r\n              <input\r\n                type=\"password\"\r\n                value={joinPassword}\r\n                onChange={(e) => setJoinPassword(e.target.value)}\r\n                placeholder=\"Enter password\"\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 mb-4\"\r\n              />\r\n              <div className=\"flex gap-3\">\r\n                <button\r\n                  onClick={() => {\r\n                    setShowPasswordModal(false);\r\n                    setJoinPassword('');\r\n                  }}\r\n                  className=\"flex-1 px-4 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  onClick={handleJoin}\r\n                  disabled={joining}\r\n                  className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50\"\r\n                >\r\n                  {joining ? 'Joining...' : 'Join'}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </DashboardLayout>\r\n  );\r\n}"],"names":["window","__NEXT_P","push","__webpack_require__","VerbfyTalkRoomPage","room","router","useRouter","roomId","query","t","useI18n","setRoom","useState","loading","setLoading","joining","setJoining","joined","setJoined","joinPassword","setJoinPassword","showPasswordModal","setShowPasswordModal","isMuted","setIsMuted","isSpeaking","setIsSpeaking","audioLevel","setAudioLevel","participants","setParticipants","localStreamRef","useRef","peerConnectionsRef","Map","audioContextRef","analyserRef","useEffect","load","res","verbfyTalkAPI","getRoomDetails","data","isInRoom","some","p","isActive","initializeAudio","stream","navigator","mediaDevices","getUserMedia","audio","echoCancellation","noiseSuppression","autoGainControl","current","AudioContext","source","createMediaStreamSource","createAnalyser","connect","dataArray","Uint8Array","frequencyBinCount","updateAudioLevel","getByteFrequencyData","average","reduce","a","b","length","requestAnimationFrame","console","log","error","handleJoin","isPrivate","joinRoom","password","success","updatedRes","alert","response","message","handleLeave","getTracks","forEach","track","stop","connection","close","clear","leaveRoom","formatDate","Date","dateString","toLocaleDateString","year","month","day","hour","minute","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","DashboardLayout","title","div","className","name","jsxs","h1","ChatBubbleLeftRightIcon","description","LockClosedIcon","GlobeAltIcon","span","getLevelIcon","level","AcademicCapIcon","UsersIcon","filter","maxParticipants","startedAt","CalendarIcon","button","onClick","disabled","topic","h3","h2","SpeakerWaveIcon","audioTrack","getAudioTracks","enabled","concat","MicrophoneIcon","style","width","Math","min","map","participant","index","userId","charAt","joinedAt","input","type","value","onChange","e","target","placeholder"],"sourceRoot":""}