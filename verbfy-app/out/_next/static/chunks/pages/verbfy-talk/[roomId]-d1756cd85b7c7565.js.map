{"version":3,"file":"static/chunks/pages/verbfy-talk/[roomId]-d1756cd85b7c7565.js","mappings":"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","sources":["webpack://_N_E/?9c3e","webpack://_N_E/./pages/verbfy-talk/[roomId].tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/verbfy-talk/[roomId]\",\n      function () {\n        return require(\"private-next-pages/verbfy-talk/[roomId].tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/verbfy-talk/[roomId]\"])\n      });\n    }\n  ","import React, { useEffect, useState, useRef } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport DashboardLayout from '@/components/layout/DashboardLayout';\r\nimport { useI18n } from '@/lib/i18n';\r\nimport { verbfyTalkAPI } from '@/lib/api';\r\nimport { \r\n  UsersIcon, \r\n  LockClosedIcon, \r\n  GlobeAltIcon,\r\n  AcademicCapIcon,\r\n  ChatBubbleLeftRightIcon,\r\n  CalendarIcon,\r\n  ClockIcon,\r\n  MicrophoneIcon,\r\n  SpeakerWaveIcon,\r\n  VideoCameraIcon\r\n} from '@heroicons/react/24/outline';\r\n\r\nexport default function VerbfyTalkRoomPage() {\r\n  const router = useRouter();\r\n  const { roomId } = router.query as { roomId?: string };\r\n  const { t } = useI18n();\r\n  const [room, setRoom] = useState<any | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [joining, setJoining] = useState(false);\r\n  const [joined, setJoined] = useState(false);\r\n  const [joinPassword, setJoinPassword] = useState('');\r\n  const [showPasswordModal, setShowPasswordModal] = useState(false);\r\n  \r\n  // WebRTC states\r\n  const [isMuted, setIsMuted] = useState(false);\r\n  const [isSpeaking, setIsSpeaking] = useState(false);\r\n  const [audioLevel, setAudioLevel] = useState(0);\r\n  const [participants, setParticipants] = useState<any[]>([]);\r\n  const [microphoneError, setMicrophoneError] = useState<{ message: string; showRetry: boolean } | null>(null);\r\n  \r\n  // Chat states\r\n  const [chatMessages, setChatMessages] = useState<any[]>([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [isPushToTalk, setIsPushToTalk] = useState(false);\r\n  const [microphoneVolume, setMicrophoneVolume] = useState(100);\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  \r\n  // WebRTC refs\r\n  const localStreamRef = useRef<MediaStream | null>(null);\r\n  const peerConnectionsRef = useRef<Map<string, RTCPeerConnection>>(new Map());\r\n  const audioContextRef = useRef<AudioContext | null>(null);\r\n  const analyserRef = useRef<AnalyserNode | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (!roomId) return;\r\n    const load = async () => {\r\n      try {\r\n        const res: any = await verbfyTalkAPI.getRoomDetails(roomId);\r\n        setRoom(res.data || res);\r\n        // Check if user is already in the room\r\n        if (res.data?.participants || res?.participants) {\r\n          const participants = res.data?.participants || res?.participants;\r\n          const isInRoom = participants.some((p: any) => p.isActive);\r\n          setJoined(isInRoom);\r\n        }\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    load();\r\n  }, [roomId]);\r\n\r\n  // Additional microphone permission handling\r\n  useEffect(() => {\r\n    // Listen for permission changes\r\n    const handlePermissionChange = (event: any) => {\r\n      if (event.target.state === 'granted') {\r\n        console.log('🎤 Permission granted via change event');\r\n        setMicrophoneError(null);\r\n        // Try to initialize audio again\r\n        initializeAudio();\r\n      }\r\n    };\r\n\r\n    // Try to get permission status and listen for changes\r\n    if (navigator.permissions) {\r\n      navigator.permissions.query({ name: 'microphone' as PermissionName })\r\n        .then(permission => {\r\n          permission.addEventListener('change', handlePermissionChange);\r\n          \r\n          // If already granted, try to initialize\r\n          if (permission.state === 'granted') {\r\n            console.log('🎤 Permission already granted, initializing audio...');\r\n            initializeAudio();\r\n          }\r\n        })\r\n        .catch(err => {\r\n          console.log('⚠️ Could not query microphone permission:', err);\r\n        });\r\n    }\r\n\r\n    // WebSocket connection monitoring\r\n    const checkWebSocketConnection = () => {\r\n      // Check if WebSocket is available and working\r\n      if ('WebSocket' in window) {\r\n        console.log('🔌 WebSocket support detected');\r\n        \r\n        // Try to establish a test connection\r\n        try {\r\n          const testSocket = new WebSocket('wss://api.verbfy.com/socket.io/');\r\n          \r\n          testSocket.onopen = () => {\r\n            console.log('✅ WebSocket connection test successful');\r\n            testSocket.close();\r\n          };\r\n          \r\n          testSocket.onerror = (error) => {\r\n            console.warn('⚠️ WebSocket connection test failed:', error);\r\n            console.log('🔄 Falling back to polling transport');\r\n          };\r\n          \r\n          // Close test socket after 5 seconds\r\n          setTimeout(() => {\r\n            if (testSocket.readyState === WebSocket.OPEN) {\r\n              testSocket.close();\r\n            }\r\n          }, 5000);\r\n        } catch (error) {\r\n          console.warn('⚠️ WebSocket test failed:', error);\r\n        }\r\n      } else {\r\n        console.warn('⚠️ WebSocket not supported, using polling fallback');\r\n      }\r\n    };\r\n\r\n    // Check WebSocket connection after a delay\r\n    const wsCheckTimer = setTimeout(checkWebSocketConnection, 2000);\r\n\r\n    // Enhanced WebSocket connection handling\r\n    const establishWebSocketConnection = () => {\r\n      console.log('🔌 Attempting to establish WebSocket connection...');\r\n      \r\n      // Method 1: Direct WebSocket connection\r\n      try {\r\n        const ws = new WebSocket('wss://api.verbfy.com/socket.io/');\r\n        \r\n        ws.onopen = () => {\r\n          console.log('✅ WebSocket connection established successfully');\r\n          // Send a test message\r\n          ws.send(JSON.stringify({ type: 'test', data: 'connection_test' }));\r\n        };\r\n        \r\n        ws.onmessage = (event) => {\r\n          console.log('📨 WebSocket message received:', event.data);\r\n        };\r\n        \r\n        ws.onerror = (error) => {\r\n          console.warn('⚠️ WebSocket connection error:', error);\r\n          console.log('🔄 Falling back to polling transport');\r\n        };\r\n        \r\n        ws.onclose = (event) => {\r\n          console.log('🔌 WebSocket connection closed:', event.code, event.reason);\r\n          if (event.code !== 1000) {\r\n            console.log('🔄 Attempting to reconnect...');\r\n            setTimeout(establishWebSocketConnection, 3000);\r\n          }\r\n        };\r\n        \r\n        // Store WebSocket reference for cleanup\r\n        const wsRef = { current: ws };\r\n        \r\n        // Cleanup function\r\n        return () => {\r\n          if (wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {\r\n            wsRef.current.close();\r\n          }\r\n        };\r\n      } catch (error) {\r\n        console.warn('⚠️ WebSocket connection failed:', error);\r\n        console.log('🔄 Using polling fallback');\r\n        return () => {};\r\n      }\r\n    };\r\n    \r\n    // Establish WebSocket connection\r\n    const cleanupWs = establishWebSocketConnection();\r\n\r\n    // Cleanup\r\n    return () => {\r\n      if (navigator.permissions) {\r\n        navigator.permissions.query({ name: 'microphone' as PermissionName })\r\n          .then(permission => {\r\n            permission.removeEventListener('change', handlePermissionChange);\r\n          })\r\n          .catch(() => {});\r\n      }\r\n      clearTimeout(wsCheckTimer);\r\n      cleanupWs(); // Clean up WebSocket connection\r\n    };\r\n  }, []);\r\n\r\n  // WebRTC Audio Functions\r\n  const initializeAudio = async () => {\r\n    try {\r\n      console.log('🎤 Requesting microphone permission...');\r\n      \r\n      // Check if getUserMedia is supported\r\n      if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\r\n        throw new Error('Microphone access not supported in this browser');\r\n      }\r\n\r\n      // Check if we're in a secure context (HTTPS or localhost)\r\n      if (!window.isSecureContext) {\r\n        throw new Error('Microphone access requires a secure context (HTTPS or localhost)');\r\n      }\r\n\r\n      // Method 1: Try permissions API first\r\n      let permissionState = 'prompt';\r\n      try {\r\n        const permission = await navigator.permissions.query({ name: 'microphone' as PermissionName });\r\n        permissionState = permission.state;\r\n        console.log('🔍 Microphone permission status:', permission.state);\r\n        \r\n        if (permission.state === 'denied') {\r\n          throw new Error('Microphone permission permanently denied. Please enable it in browser settings.');\r\n        }\r\n      } catch (permError) {\r\n        console.log('⚠️ Could not check permission status, proceeding with getUserMedia');\r\n      }\r\n\r\n      // Method 2: Try getUserMedia with different constraints\r\n      let stream: MediaStream;\r\n      try {\r\n        // First try with basic audio\r\n        stream = await navigator.mediaDevices.getUserMedia({ \r\n          audio: true\r\n        });\r\n      } catch (basicError) {\r\n        console.log('⚠️ Basic audio failed, trying with specific constraints...');\r\n        \r\n        // Try with specific audio constraints\r\n        stream = await navigator.mediaDevices.getUserMedia({ \r\n          audio: {\r\n            echoCancellation: true,\r\n            noiseSuppression: true,\r\n            autoGainControl: true,\r\n            sampleRate: 44100,\r\n            channelCount: 1\r\n          }\r\n        });\r\n      }\r\n      \r\n      console.log('✅ Microphone permission granted');\r\n      localStreamRef.current = stream;\r\n      \r\n      // Create audio context for level monitoring\r\n      audioContextRef.current = new AudioContext();\r\n      const source = audioContextRef.current.createMediaStreamSource(stream);\r\n      analyserRef.current = audioContextRef.current.createAnalyser();\r\n      source.connect(analyserRef.current);\r\n      \r\n      // Monitor audio levels\r\n      const dataArray = new Uint8Array(analyserRef.current.frequencyBinCount);\r\n      const updateAudioLevel = () => {\r\n        if (analyserRef.current) {\r\n          analyserRef.current.getByteFrequencyData(dataArray);\r\n          const average = dataArray.reduce((a, b) => a + b) / dataArray.length;\r\n          setAudioLevel(average);\r\n          setIsSpeaking(average > 30);\r\n        }\r\n        requestAnimationFrame(updateAudioLevel);\r\n      };\r\n      updateAudioLevel();\r\n      \r\n      // Clear any previous errors\r\n      setMicrophoneError(null);\r\n      \r\n      console.log('🎤 Audio initialized successfully');\r\n    } catch (error: any) {\r\n      console.error('❌ Failed to initialize audio:', error);\r\n      \r\n      // Provide user-friendly error messages\r\n      let errorMessage = 'Failed to access microphone';\r\n      let showRetryButton = true;\r\n      \r\n      if (error.name === 'NotAllowedError') {\r\n        errorMessage = 'Microphone permission denied. Please allow microphone access and try again.';\r\n      } else if (error.name === 'NotFoundError') {\r\n        errorMessage = 'No microphone found. Please connect a microphone and try again.';\r\n      } else if (error.name === 'NotSupportedError') {\r\n        errorMessage = 'Microphone access not supported in this browser.';\r\n        showRetryButton = false;\r\n      } else if (error.name === 'NotReadableError') {\r\n        errorMessage = 'Microphone is already in use by another application.';\r\n      } else if (error.message.includes('secure context')) {\r\n        errorMessage = 'Microphone access requires HTTPS. Please use https://verbfy.com instead of http.';\r\n        showRetryButton = false;\r\n      } else if (error.message.includes('permanently denied')) {\r\n        errorMessage = 'Microphone access permanently blocked. Please enable it in browser settings: Chrome Settings > Privacy > Site Settings > Microphone > Allow.';\r\n        showRetryButton = false;\r\n      }\r\n      \r\n      // Show error to user with better UI\r\n      setMicrophoneError({ message: errorMessage, showRetry: showRetryButton });\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const toggleMute = () => {\r\n    if (localStreamRef.current) {\r\n      const audioTrack = localStreamRef.current.getAudioTracks()[0];\r\n      if (audioTrack) {\r\n        audioTrack.enabled = !audioTrack.enabled;\r\n        setIsMuted(!audioTrack.enabled);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Alternative method to bypass permissions policy\r\n  const bypassPermissionsPolicy = async () => {\r\n    try {\r\n      console.log('🚀 Attempting to bypass permissions policy...');\r\n      \r\n      // Create a hidden audio element to trigger user interaction\r\n      const audioElement = document.createElement('audio');\r\n      audioElement.style.display = 'none';\r\n      document.body.appendChild(audioElement);\r\n      \r\n      // Try to play a silent audio file to trigger user interaction\r\n      try {\r\n        await audioElement.play();\r\n        console.log('✅ User interaction triggered via audio play');\r\n      } catch (playError) {\r\n        console.log('⚠️ Audio play failed, trying alternative method');\r\n      }\r\n      \r\n      // Remove the audio element\r\n      document.body.removeChild(audioElement);\r\n      \r\n      // Now try to get microphone access\r\n      const stream = await navigator.mediaDevices.getUserMedia({ \r\n        audio: {\r\n          echoCancellation: true,\r\n          noiseSuppression: true,\r\n          autoGainControl: true\r\n        }\r\n      });\r\n      \r\n      // If successful, set the stream\r\n      localStreamRef.current = stream;\r\n      setMicrophoneError(null);\r\n      \r\n      // Initialize audio context\r\n      audioContextRef.current = new AudioContext();\r\n      const source = audioContextRef.current.createMediaStreamSource(stream);\r\n      analyserRef.current = audioContextRef.current.createAnalyser();\r\n      source.connect(analyserRef.current);\r\n      \r\n      console.log('✅ Microphone access granted via policy bypass!');\r\n    } catch (error) {\r\n      console.error('❌ Policy bypass failed:', error);\r\n      setMicrophoneError({ \r\n        message: 'Policy bypass failed. Please try browser settings or contact support.', \r\n        showRetry: true \r\n      });\r\n    }\r\n  };\r\n\r\n  // Chat Functions\r\n  const sendMessage = () => {\r\n    if (!newMessage.trim() || !joined) return;\r\n    \r\n    const message = {\r\n      id: Date.now(),\r\n      text: newMessage.trim(),\r\n      sender: {\r\n        id: room?.participants?.find((p: any) => p.isActive)?.userId?._id || 'unknown',\r\n        name: room?.participants?.find((p: any) => p.isActive)?.userId?.name || 'Unknown'\r\n      },\r\n      timestamp: new Date().toISOString()\r\n    };\r\n    \r\n    setChatMessages(prev => [...prev, message]);\r\n    setNewMessage('');\r\n  };\r\n\r\n  const handleKeyPress = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  // Push-to-Talk Functions\r\n  const startPushToTalk = () => {\r\n    if (localStreamRef.current && !isMuted) {\r\n      setIsRecording(true);\r\n      // Enable microphone temporarily\r\n      const audioTrack = localStreamRef.current.getAudioTracks()[0];\r\n      if (audioTrack) {\r\n        audioTrack.enabled = true;\r\n      }\r\n    }\r\n  };\r\n\r\n  const stopPushToTalk = () => {\r\n    if (localStreamRef.current && isPushToTalk) {\r\n      setIsRecording(false);\r\n      // Disable microphone if push-to-talk mode\r\n      const audioTrack = localStreamRef.current.getAudioTracks()[0];\r\n      if (audioTrack) {\r\n        audioTrack.enabled = false;\r\n      }\r\n    }\r\n  };\r\n\r\n  // Microphone Volume Control\r\n  const handleVolumeChange = (volume: number) => {\r\n    setMicrophoneVolume(volume);\r\n    if (localStreamRef.current) {\r\n      const audioTrack = localStreamRef.current.getAudioTracks()[0];\r\n      if (audioTrack) {\r\n        // Apply volume gain to audio track\r\n        const gainNode = audioContextRef.current?.createGain();\r\n        if (gainNode) {\r\n          gainNode.gain.value = volume / 100;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleJoin = async () => {\r\n    if (!roomId) return;\r\n    \r\n    if (room?.isPrivate && !joinPassword) {\r\n      setShowPasswordModal(true);\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setJoining(true);\r\n      const res: any = await verbfyTalkAPI.joinRoom(roomId, { password: joinPassword });\r\n      if (res.success) {\r\n        setJoined(true);\r\n        setJoinPassword('');\r\n        setShowPasswordModal(false);\r\n        \r\n        // Initialize WebRTC audio after joining\r\n        await initializeAudio();\r\n        \r\n        // Reload room data to show updated participants\r\n        const updatedRes = await verbfyTalkAPI.getRoomDetails(roomId);\r\n        setRoom(updatedRes.data || updatedRes);\r\n      }\r\n    } catch (error: any) {\r\n      console.error('Failed to join room:', error);\r\n      alert(error.response?.data?.message || 'Failed to join room');\r\n    } finally {\r\n      setJoining(false);\r\n    }\r\n  };\r\n\r\n  const handleLeave = async () => {\r\n    if (!roomId) return;\r\n    try {\r\n      // Stop all audio streams\r\n      if (localStreamRef.current) {\r\n        localStreamRef.current.getTracks().forEach(track => track.stop());\r\n      }\r\n      \r\n      // Close peer connections\r\n      peerConnectionsRef.current.forEach(connection => connection.close());\r\n      peerConnectionsRef.current.clear();\r\n      \r\n      await verbfyTalkAPI.leaveRoom(roomId);\r\n      setJoined(false);\r\n      \r\n      // Navigate back to rooms list\r\n      router.push('/verbfy-talk');\r\n    } catch (error: any) {\r\n      console.error('Failed to leave room:', error);\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString: string) => {\r\n    return new Date(dateString).toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  const getLevelIcon = (level: string) => {\r\n    switch (level) {\r\n      case 'Beginner':\r\n        return <AcademicCapIcon className=\"w-4 h-4 text-green-500\" />;\r\n      case 'Intermediate':\r\n        return <AcademicCapIcon className=\"w-4 h-4 text-yellow-500\" />;\r\n      case 'Advanced':\r\n        return <AcademicCapIcon className=\"w-4 h-4 text-red-500\" />;\r\n      default:\r\n        return <AcademicCapIcon className=\"w-4 h-4 text-blue-500\" />;\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <DashboardLayout title=\"Loading Room...\">\r\n        <div className=\"p-8 text-center text-gray-500\">Loading room details...</div>\r\n      </DashboardLayout>\r\n    );\r\n  }\r\n\r\n  if (!room) {\r\n    return (\r\n      <DashboardLayout title=\"Room Not Found\">\r\n        <div className=\"p-8 text-center text-gray-500\">Room not found</div>\r\n      </DashboardLayout>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <DashboardLayout title={room.name || 'VerbfyTalk Room'}>\r\n      <div className=\"max-w-4xl mx-auto p-6\">\r\n        {/* Room Header */}\r\n        <div className=\"bg-white rounded-lg shadow-sm border p-6 mb-6\">\r\n          <div className=\"flex items-start justify-between mb-4\">\r\n            <div className=\"flex-1\">\r\n              <h1 className=\"text-3xl font-bold text-gray-900 flex items-center gap-3\">\r\n                <ChatBubbleLeftRightIcon className=\"w-8 h-8 text-blue-600\" />\r\n                {room.name}\r\n              </h1>\r\n              <p className=\"text-gray-600 mt-2\">{room.description}</p>\r\n              \r\n              <div className=\"flex items-center gap-4 mt-4 text-sm text-gray-500\">\r\n                <div className=\"flex items-center gap-2\">\r\n                  {room.isPrivate ? (\r\n                    <LockClosedIcon className=\"w-4 h-4\" />\r\n                  ) : (\r\n                    <GlobeAltIcon className=\"w-4 h-4\" />\r\n                  )}\r\n                  <span>{room.isPrivate ? 'Private' : 'Public'}</span>\r\n                </div>\r\n                \r\n                <div className=\"flex items-center gap-2\">\r\n                  {getLevelIcon(room.level)}\r\n                  <span>{room.level}</span>\r\n                </div>\r\n                \r\n                <div className=\"flex items-center gap-2\">\r\n                  <UsersIcon className=\"w-4 h-4\" />\r\n                  <span>{room.participants?.filter((p: any) => p.isActive).length || 0}/{room.maxParticipants}</span>\r\n                </div>\r\n                \r\n                {room.startedAt && (\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <CalendarIcon className=\"w-4 h-4\" />\r\n                    <span>Started {formatDate(room.startedAt)}</span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"flex flex-col gap-2\">\r\n              {!joined ? (\r\n                <button\r\n                  onClick={handleJoin}\r\n                  disabled={joining}\r\n                  className=\"bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-lg font-medium transition-colors disabled:opacity-50\"\r\n                >\r\n                  {joining ? 'Joining...' : 'Join Room'}\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  onClick={handleLeave}\r\n                  className=\"bg-red-600 hover:bg-red-700 text-white px-6 py-3 rounded-lg font-medium transition-colors\"\r\n                >\r\n                  Leave Room\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          {room.topic && (\r\n            <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\r\n              <h3 className=\"font-medium text-blue-900 mb-2\">Discussion Topic</h3>\r\n              <p className=\"text-blue-800\">{room.topic}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Participants */}\r\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\r\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-4 flex items-center gap-2\">\r\n            <UsersIcon className=\"w-5 h-5\" />\r\n            Participants ({room.participants?.filter((p: any) => p.isActive).length || 0})\r\n          </h2>\r\n          \r\n          {/* Audio Controls for joined users */}\r\n          {joined && (\r\n            <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4 mb-4\">\r\n              <h3 className=\"font-medium text-blue-900 mb-3 flex items-center gap-2\">\r\n                <SpeakerWaveIcon className=\"w-5 h-5\" />\r\n                Voice Chat Controls\r\n              </h3>\r\n              \r\n              {/* Microphone Permission Status */}\r\n              {!localStreamRef.current ? (\r\n                <div className=\"mb-3 p-3 bg-yellow-50 border border-yellow-200 rounded-lg\">\r\n                  <p className=\"text-yellow-800 text-sm mb-2\">\r\n                    🔒 Microphone access required for voice chat\r\n                  </p>\r\n                  \r\n                  {/* Show error if microphone failed */}\r\n                  {microphoneError && (\r\n                    <div className=\"mb-3 p-3 bg-red-50 border border-red-200 rounded-lg\">\r\n                      <p className=\"text-red-800 text-sm mb-2\">\r\n                        ❌ {microphoneError.message}\r\n                      </p>\r\n                      {microphoneError.showRetry && (\r\n                        <button\r\n                          onClick={() => {\r\n                            setMicrophoneError(null);\r\n                            initializeAudio();\r\n                          }}\r\n                          className=\"bg-red-600 hover:bg-red-700 text-white px-3 py-1 rounded text-xs font-medium transition-colors\"\r\n                        >\r\n                          🔄 Try Again\r\n                        </button>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                  \r\n                  <button\r\n                    onClick={() => {\r\n                      setMicrophoneError(null);\r\n                      initializeAudio();\r\n                    }}\r\n                    className=\"bg-yellow-600 hover:bg-yellow-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors\"\r\n                  >\r\n                    🎤 Enable Microphone\r\n                  </button>\r\n                  \r\n                  {/* Manual Permission Request */}\r\n                  <button\r\n                    onClick={async () => {\r\n                      try {\r\n                        // Try to request permission manually\r\n                        if (navigator.permissions) {\r\n                          const permission = await navigator.permissions.query({ name: 'microphone' as PermissionName });\r\n                          if (permission.state === 'prompt') {\r\n                            // Force a permission prompt\r\n                            await navigator.mediaDevices.getUserMedia({ audio: true });\r\n                          }\r\n                        }\r\n                      } catch (error) {\r\n                        console.log('Manual permission request failed:', error);\r\n                      }\r\n                    }}\r\n                    className=\"ml-2 bg-blue-600 hover:bg-blue-700 text-white px-3 py-2 rounded-lg text-xs font-medium transition-colors\"\r\n                  >\r\n                    🔧 Force Permission\r\n                  </button>\r\n                  \r\n                  {/* User Interaction Trigger - Bypass Policy */}\r\n                  <button\r\n                    onClick={async () => {\r\n                      try {\r\n                        // This button requires explicit user interaction\r\n                        // which can help bypass permissions policy restrictions\r\n                        console.log('🎯 User interaction detected, attempting microphone access...');\r\n                        \r\n                        // Try to access microphone immediately after user interaction\r\n                        const stream = await navigator.mediaDevices.getUserMedia({ \r\n                          audio: {\r\n                            echoCancellation: true,\r\n                            noiseSuppression: true,\r\n                            autoGainControl: true\r\n                          }\r\n                        });\r\n                        \r\n                        // If successful, set the stream\r\n                        localStreamRef.current = stream;\r\n                        setMicrophoneError(null);\r\n                        \r\n                        // Initialize audio context\r\n                        audioContextRef.current = new AudioContext();\r\n                        const source = audioContextRef.current.createMediaStreamSource(stream);\r\n                        analyserRef.current = audioContextRef.current.createAnalyser();\r\n                        source.connect(analyserRef.current);\r\n                        \r\n                        console.log('✅ Microphone access granted via user interaction!');\r\n                      } catch (error) {\r\n                        console.error('❌ User interaction method failed:', error);\r\n                        setMicrophoneError({ \r\n                          message: 'User interaction method failed. Please try the main Enable Microphone button.', \r\n                          showRetry: true \r\n                        });\r\n                      }\r\n                    }}\r\n                    className=\"ml-2 bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors\"\r\n                  >\r\n                    🎯 User Interaction\r\n                  </button>\r\n                  \r\n                  {/* Policy Bypass Button */}\r\n                  <button\r\n                    onClick={bypassPermissionsPolicy}\r\n                    className=\"ml-2 bg-purple-600 hover:bg-purple-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors\"\r\n                  >\r\n                    🚀 Policy Bypass\r\n                  </button>\r\n                  \r\n                  {/* Additional help text */}\r\n                  <div className=\"mt-2 text-xs text-yellow-700\">\r\n                    <p><strong>💡 Troubleshooting:</strong></p>\r\n                    <ul className=\"list-disc list-inside mt-1 space-y-1\">\r\n                      <li>Make sure you're using HTTPS (https://verbfy.com)</li>\r\n                      <li>Check browser microphone permissions in settings</li>\r\n                      <li>Ensure no other apps are using the microphone</li>\r\n                      <li>Try refreshing the page if permission was denied</li>\r\n                      <li><strong>If \"Permissions policy violation\" error:</strong></li>\r\n                      <li>• Click \"User Interaction\" button first</li>\r\n                      <li>• Try \"Policy Bypass\" button</li>\r\n                      <li>• Use \"Force Permission\" button</li>\r\n                      <li>• Check browser security settings</li>\r\n                      <li>• Disable any browser extensions blocking permissions</li>\r\n                      <li>• Try incognito/private browsing mode</li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div className=\"space-y-3\">\r\n                  {/* Basic Controls */}\r\n                  <div className=\"flex items-center gap-4\">\r\n                    <button\r\n                      onClick={toggleMute}\r\n                      className={`flex items-center gap-2 px-4 py-2 rounded-lg font-medium transition-colors ${\r\n                        isMuted \r\n                          ? 'bg-red-100 text-red-700 hover:bg-red-200' \r\n                          : 'bg-green-100 text-green-700 hover:bg-green-200'\r\n                      }`}\r\n                    >\r\n                      <MicrophoneIcon className={`w-5 h-5 ${isMuted ? 'text-red-600' : 'text-green-600'}`} />\r\n                      {isMuted ? 'Unmute' : 'Mute'}\r\n                    </button>\r\n                    \r\n                    {/* Push-to-Talk Toggle */}\r\n                    <button\r\n                      onClick={() => setIsPushToTalk(!isPushToTalk)}\r\n                      className={`flex items-center gap-2 px-4 py-2 rounded-lg font-medium transition-colors ${\r\n                        isPushToTalk \r\n                          ? 'bg-purple-100 text-purple-700 hover:bg-purple-200' \r\n                          : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\r\n                      }`}\r\n                    >\r\n                      <VideoCameraIcon className=\"w-5 h-5\" />\r\n                      {isPushToTalk ? 'Push-to-Talk ON' : 'Push-to-Talk OFF'}\r\n                    </button>\r\n                  </div>\r\n                  \r\n                  {/* Push-to-Talk Button */}\r\n                  {isPushToTalk && (\r\n                    <div className=\"flex items-center gap-3\">\r\n                      <button\r\n                        onMouseDown={startPushToTalk}\r\n                        onMouseUp={stopPushToTalk}\r\n                        onTouchStart={startPushToTalk}\r\n                        onTouchEnd={stopPushToTalk}\r\n                        className={`flex items-center gap-2 px-6 py-3 rounded-lg font-medium transition-all ${\r\n                          isRecording \r\n                            ? 'bg-red-500 text-white scale-105' \r\n                            : 'bg-blue-500 text-white hover:bg-blue-600'\r\n                        }`}\r\n                      >\r\n                        <MicrophoneIcon className=\"w-5 h-5\" />\r\n                        {isRecording ? 'Recording...' : 'Hold to Talk'}\r\n                      </button>\r\n                      <span className=\"text-sm text-gray-600\">\r\n                        Hold the button while speaking\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n                  \r\n                  {/* Volume Control */}\r\n                  <div className=\"flex items-center gap-3\">\r\n                    <span className=\"text-sm text-gray-700 min-w-[80px]\">Volume:</span>\r\n                    <input\r\n                      type=\"range\"\r\n                      min=\"0\"\r\n                      max=\"100\"\r\n                      value={microphoneVolume}\r\n                      onChange={(e) => handleVolumeChange(Number(e.target.value))}\r\n                      className=\"flex-1 h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer\"\r\n                    />\r\n                    <span className=\"text-sm text-gray-600 min-w-[40px]\">{microphoneVolume}%</span>\r\n                  </div>\r\n                  \r\n                  {/* Audio Level Indicator */}\r\n                  <div className=\"flex items-center gap-3\">\r\n                    <span className=\"text-sm text-gray-700 min-w-[80px]\">Audio Level:</span>\r\n                    <div className=\"flex-1 w-full h-3 bg-gray-200 rounded-lg overflow-hidden\">\r\n                      <div \r\n                        className={`h-full transition-all duration-100 ${\r\n                          isSpeaking ? 'bg-green-500' : 'bg-blue-500'\r\n                        }`}\r\n                        style={{ width: `${Math.min(audioLevel * 2, 100)}%` }}\r\n                      />\r\n                    </div>\r\n                    <span className=\"text-sm text-gray-600 min-w-[60px]\">\r\n                      {isSpeaking ? 'Speaking' : 'Silent'}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              \r\n              {/* Voice Chat Instructions */}\r\n              <div className=\"mt-3 text-xs text-blue-700\">\r\n                <p>💡 <strong>Voice Chat Tips:</strong></p>\r\n                <ul className=\"list-disc list-inside mt-1 space-y-1\">\r\n                  <li>Click \"Enable Microphone\" to start voice chat</li>\r\n                  <li>Use Mute/Unmute to control your audio</li>\r\n                  <li>Enable Push-to-Talk for hands-free operation</li>\r\n                  <li>Adjust volume slider to control microphone sensitivity</li>\r\n                  <li>Green indicator shows when you're speaking</li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          {room.participants && room.participants.length > 0 ? (\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n              {room.participants\r\n                .filter((p: any) => p.isActive) // Only show active participants\r\n                .filter((p: any, index: number, arr: any[]) => \r\n                  // Remove duplicates by userId\r\n                  arr.findIndex(participant => participant.userId._id === p.userId._id) === index\r\n                )\r\n                .map((participant: any, index: number) => (\r\n                  <div key={`${participant.userId._id}-${index}`} className=\"flex items-center gap-3 p-3 bg-gray-50 rounded-lg\">\r\n                    <div className=\"relative\">\r\n                      <div className=\"w-10 h-10 bg-blue-600 rounded-full flex items-center justify-center text-white font-medium\">\r\n                        {participant.userId?.name?.charAt(0) || 'U'}\r\n                      </div>\r\n                      {/* Speaking indicator */}\r\n                      {participant.isSpeaking && (\r\n                        <div className=\"absolute -top-1 -right-1 w-4 h-4 bg-green-500 rounded-full border-2 border-white animate-pulse\" />\r\n                      )}\r\n                    </div>\r\n                    <div className=\"flex-1\">\r\n                      <p className=\"font-medium text-gray-900\">{participant.userId?.name || 'Unknown User'}</p>\r\n                      <p className=\"text-sm text-gray-500\">\r\n                        Joined {formatDate(participant.joinedAt)}\r\n                      </p>\r\n                      {/* Audio status */}\r\n                      <div className=\"flex items-center gap-2 mt-1\">\r\n                        <MicrophoneIcon className={`w-4 h-4 ${\r\n                          participant.isMuted ? 'text-red-500' : 'text-green-500'\r\n                        }`} />\r\n                        <span className=\"text-xs text-gray-500\">\r\n                          {participant.isMuted ? 'Muted' : 'Active'}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          ) : (\r\n            <p className=\"text-gray-500 text-center py-8\">No participants yet</p>\r\n          )}\r\n        </div>\r\n\r\n        {/* Chat Section */}\r\n        {joined && (\r\n          <div className=\"bg-white rounded-lg shadow-sm border p-6 mb-6\">\r\n            <h2 className=\"text-xl font-semibold text-gray-900 mb-4 flex items-center gap-2\">\r\n              <ChatBubbleLeftRightIcon className=\"w-5 h-5\" />\r\n              Room Chat\r\n            </h2>\r\n            \r\n            {/* Chat Messages */}\r\n            <div className=\"h-64 overflow-y-auto border border-gray-200 rounded-lg p-3 mb-3 bg-gray-50\">\r\n              {chatMessages.length === 0 ? (\r\n                <p className=\"text-gray-500 text-center py-8\">No messages yet. Start the conversation!</p>\r\n              ) : (\r\n                <div className=\"space-y-2\">\r\n                  {chatMessages.map((message) => (\r\n                    <div key={message.id} className=\"flex items-start gap-2\">\r\n                      <div className=\"w-6 h-6 bg-blue-600 rounded-full flex items-center justify-center text-white text-xs font-medium\">\r\n                        {message.sender.name.charAt(0)}\r\n                      </div>\r\n                      <div className=\"flex-1\">\r\n                        <div className=\"flex items-center gap-2\">\r\n                          <span className=\"font-medium text-gray-900\">{message.sender.name}</span>\r\n                          <span className=\"text-xs text-gray-500\">\r\n                            {new Date(message.timestamp).toLocaleTimeString()}\r\n                          </span>\r\n                        </div>\r\n                        <p className=\"text-gray-700\">{message.text}</p>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n            \r\n            {/* Chat Input */}\r\n            <div className=\"flex gap-2\">\r\n              <input\r\n                type=\"text\"\r\n                value={newMessage}\r\n                onChange={(e) => setNewMessage(e.target.value)}\r\n                onKeyPress={handleKeyPress}\r\n                placeholder=\"Type your message...\"\r\n                className=\"flex-1 px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                disabled={!joined}\r\n              />\r\n              <button\r\n                onClick={sendMessage}\r\n                disabled={!newMessage.trim() || !joined}\r\n                className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\r\n              >\r\n                Send\r\n              </button>\r\n            </div>\r\n            \r\n            <div className=\"mt-2 text-xs text-gray-500\">\r\n              💡 Press Enter to send, Shift+Enter for new line\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Password Modal */}\r\n        {showPasswordModal && (\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n            <div className=\"bg-white rounded-lg p-6 max-w-md w-full mx-4\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Enter Room Password</h3>\r\n              <input\r\n                type=\"password\"\r\n                value={joinPassword}\r\n                onChange={(e) => setJoinPassword(e.target.value)}\r\n                placeholder=\"Enter password\"\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 mb-4\"\r\n              />\r\n              <div className=\"flex gap-3\">\r\n                <button\r\n                  onClick={() => {\r\n                    setShowPasswordModal(false);\r\n                    setJoinPassword('');\r\n                  }}\r\n                  className=\"flex-1 px-4 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  onClick={handleJoin}\r\n                  disabled={joining}\r\n                  className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50\"\r\n                >\r\n                  {joining ? 'Joining...' : 'Join'}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </DashboardLayout>\r\n  );\r\n}"],"names":["window","__NEXT_P","push","__webpack_require__","VerbfyTalkRoomPage","room","router","useRouter","roomId","query","t","useI18n","setRoom","useState","loading","setLoading","joining","setJoining","joined","setJoined","joinPassword","setJoinPassword","showPasswordModal","setShowPasswordModal","isMuted","setIsMuted","isSpeaking","setIsSpeaking","audioLevel","setAudioLevel","participants","setParticipants","microphoneError","setMicrophoneError","chatMessages","setChatMessages","newMessage","setNewMessage","isPushToTalk","setIsPushToTalk","microphoneVolume","setMicrophoneVolume","isRecording","setIsRecording","localStreamRef","useRef","peerConnectionsRef","Map","audioContextRef","analyserRef","useEffect","load","res","verbfyTalkAPI","getRoomDetails","data","isInRoom","some","p","isActive","handlePermissionChange","event","target","state","console","log","initializeAudio","navigator","permissions","name","then","permission","addEventListener","catch","err","wsCheckTimer","setTimeout","testSocket","WebSocket","onopen","close","onerror","warn","error","readyState","OPEN","establishWebSocketConnection","ws","send","JSON","stringify","type","onmessage","onclose","code","reason","wsRef","current","cleanupWs","removeEventListener","clearTimeout","stream","mediaDevices","getUserMedia","isSecureContext","permError","audio","basicError","echoCancellation","noiseSuppression","autoGainControl","sampleRate","channelCount","AudioContext","source","createMediaStreamSource","createAnalyser","connect","dataArray","Uint8Array","frequencyBinCount","updateAudioLevel","getByteFrequencyData","average","reduce","a","b","length","requestAnimationFrame","errorMessage","showRetryButton","message","includes","showRetry","bypassPermissionsPolicy","audioElement","document","createElement","style","display","body","appendChild","play","playError","removeChild","sendMessage","trim","id","Date","now","text","sender","find","userId","_id","timestamp","toISOString","prev","startPushToTalk","audioTrack","getAudioTracks","enabled","stopPushToTalk","handleVolumeChange","volume","gainNode","createGain","gain","value","handleJoin","isPrivate","joinRoom","password","success","updatedRes","alert","response","handleLeave","getTracks","forEach","track","stop","connection","clear","leaveRoom","formatDate","dateString","toLocaleDateString","year","month","day","hour","minute","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","DashboardLayout","title","div","className","jsxs","h1","ChatBubbleLeftRightIcon","description","LockClosedIcon","GlobeAltIcon","span","getLevelIcon","level","AcademicCapIcon","UsersIcon","filter","maxParticipants","startedAt","CalendarIcon","button","onClick","disabled","topic","h3","h2","SpeakerWaveIcon","concat","MicrophoneIcon","VideoCameraIcon","onMouseDown","onMouseUp","onTouchStart","onTouchEnd","input","min","max","onChange","Number","e","width","Math","strong","ul","li","index","arr","findIndex","participant","map","charAt","joinedAt","toLocaleTimeString","onKeyPress","key","shiftKey","preventDefault","placeholder"],"sourceRoot":""}