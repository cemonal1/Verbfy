{"version":3,"file":"static/chunks/pages/verbfy-talk/[roomId]-04b7a7c64041d7ad.js","mappings":"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","sources":["webpack://_N_E/?9c3e","webpack://_N_E/./pages/verbfy-talk/[roomId].tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/verbfy-talk/[roomId]\",\n      function () {\n        return require(\"private-next-pages/verbfy-talk/[roomId].tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/verbfy-talk/[roomId]\"])\n      });\n    }\n  ","import React, { useEffect, useState, useRef } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport DashboardLayout from '@/components/layout/DashboardLayout';\r\nimport { useI18n } from '@/lib/i18n';\r\nimport { verbfyTalkAPI } from '@/lib/api';\r\nimport { \r\n  UsersIcon, \r\n  LockClosedIcon, \r\n  GlobeAltIcon,\r\n  AcademicCapIcon,\r\n  ChatBubbleLeftRightIcon,\r\n  CalendarIcon,\r\n  ClockIcon,\r\n  MicrophoneIcon,\r\n  SpeakerWaveIcon,\r\n  VideoCameraIcon\r\n} from '@heroicons/react/24/outline';\r\n\r\nexport default function VerbfyTalkRoomPage() {\r\n  const router = useRouter();\r\n  const { roomId } = router.query as { roomId?: string };\r\n  const { t } = useI18n();\r\n  const [room, setRoom] = useState<any | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [joining, setJoining] = useState(false);\r\n  const [joined, setJoined] = useState(false);\r\n  const [joinPassword, setJoinPassword] = useState('');\r\n  const [showPasswordModal, setShowPasswordModal] = useState(false);\r\n  \r\n  // WebRTC states\r\n  const [isMuted, setIsMuted] = useState(false);\r\n  const [isSpeaking, setIsSpeaking] = useState(false);\r\n  const [audioLevel, setAudioLevel] = useState(0);\r\n  const [participants, setParticipants] = useState<any[]>([]);\r\n  const [microphoneError, setMicrophoneError] = useState<{ message: string; showRetry: boolean } | null>(null);\r\n  \r\n  // Chat states\r\n  const [chatMessages, setChatMessages] = useState<any[]>([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [isPushToTalk, setIsPushToTalk] = useState(false);\r\n  const [microphoneVolume, setMicrophoneVolume] = useState(100);\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  \r\n  // WebRTC refs\r\n  const localStreamRef = useRef<MediaStream | null>(null);\r\n  const peerConnectionsRef = useRef<Map<string, RTCPeerConnection>>(new Map());\r\n  const audioContextRef = useRef<AudioContext | null>(null);\r\n  const analyserRef = useRef<AnalyserNode | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (!roomId) return;\r\n    const load = async () => {\r\n      try {\r\n        const res: any = await verbfyTalkAPI.getRoomDetails(roomId);\r\n        setRoom(res.data || res);\r\n        // Check if user is already in the room\r\n        if (res.data?.participants || res?.participants) {\r\n          const participants = res.data?.participants || res?.participants;\r\n          const isInRoom = participants.some((p: any) => p.isActive);\r\n          setJoined(isInRoom);\r\n        }\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    load();\r\n  }, [roomId]);\r\n\r\n  // WebRTC Audio Functions\r\n  const initializeAudio = async () => {\r\n    try {\r\n      console.log('🎤 Requesting microphone permission...');\r\n      \r\n      // Check if getUserMedia is supported\r\n      if (!navigator.mediaDevices || !navigator.mediaDevices.getUserMedia) {\r\n        throw new Error('Microphone access not supported in this browser');\r\n      }\r\n\r\n      // Check if we're in a secure context (HTTPS or localhost)\r\n      if (!window.isSecureContext) {\r\n        throw new Error('Microphone access requires a secure context (HTTPS or localhost)');\r\n      }\r\n\r\n      // Method 1: Try permissions API first\r\n      let permissionState = 'prompt';\r\n      try {\r\n        const permission = await navigator.permissions.query({ name: 'microphone' as PermissionName });\r\n        permissionState = permission.state;\r\n        console.log('🔍 Microphone permission status:', permission.state);\r\n        \r\n        if (permission.state === 'denied') {\r\n          throw new Error('Microphone permission permanently denied. Please enable it in browser settings.');\r\n        }\r\n      } catch (permError) {\r\n        console.log('⚠️ Could not check permission status, proceeding with getUserMedia');\r\n      }\r\n\r\n      // Method 2: Try getUserMedia with different constraints\r\n      let stream: MediaStream;\r\n      try {\r\n        // First try with basic audio\r\n        stream = await navigator.mediaDevices.getUserMedia({ \r\n          audio: true\r\n        });\r\n      } catch (basicError) {\r\n        console.log('⚠️ Basic audio failed, trying with specific constraints...');\r\n        \r\n        // Try with specific audio constraints\r\n        stream = await navigator.mediaDevices.getUserMedia({ \r\n          audio: {\r\n            echoCancellation: true,\r\n            noiseSuppression: true,\r\n            autoGainControl: true,\r\n            sampleRate: 44100,\r\n            channelCount: 1\r\n          }\r\n        });\r\n      }\r\n      \r\n      console.log('✅ Microphone permission granted');\r\n      localStreamRef.current = stream;\r\n      \r\n      // Create audio context for level monitoring\r\n      audioContextRef.current = new AudioContext();\r\n      const source = audioContextRef.current.createMediaStreamSource(stream);\r\n      analyserRef.current = audioContextRef.current.createAnalyser();\r\n      source.connect(analyserRef.current);\r\n      \r\n      // Monitor audio levels\r\n      const dataArray = new Uint8Array(analyserRef.current.frequencyBinCount);\r\n      const updateAudioLevel = () => {\r\n        if (analyserRef.current) {\r\n          analyserRef.current.getByteFrequencyData(dataArray);\r\n          const average = dataArray.reduce((a, b) => a + b) / dataArray.length;\r\n          setAudioLevel(average);\r\n          setIsSpeaking(average > 30);\r\n        }\r\n        requestAnimationFrame(updateAudioLevel);\r\n      };\r\n      updateAudioLevel();\r\n      \r\n      // Clear any previous errors\r\n      setMicrophoneError(null);\r\n      \r\n      console.log('🎤 Audio initialized successfully');\r\n    } catch (error: any) {\r\n      console.error('❌ Failed to initialize audio:', error);\r\n      \r\n      // Provide user-friendly error messages\r\n      let errorMessage = 'Failed to access microphone';\r\n      let showRetryButton = true;\r\n      \r\n      if (error.name === 'NotAllowedError') {\r\n        errorMessage = 'Microphone permission denied. Please allow microphone access and try again.';\r\n      } else if (error.name === 'NotFoundError') {\r\n        errorMessage = 'No microphone found. Please connect a microphone and try again.';\r\n      } else if (error.name === 'NotSupportedError') {\r\n        errorMessage = 'Microphone access not supported in this browser.';\r\n        showRetryButton = false;\r\n      } else if (error.name === 'NotReadableError') {\r\n        errorMessage = 'Microphone is already in use by another application.';\r\n      } else if (error.message.includes('secure context')) {\r\n        errorMessage = 'Microphone access requires HTTPS. Please use https://verbfy.com instead of http.';\r\n        showRetryButton = false;\r\n      } else if (error.message.includes('permanently denied')) {\r\n        errorMessage = 'Microphone access permanently blocked. Please enable it in browser settings: Chrome Settings > Privacy > Site Settings > Microphone > Allow.';\r\n        showRetryButton = false;\r\n      }\r\n      \r\n      // Show error to user with better UI\r\n      setMicrophoneError({ message: errorMessage, showRetry: showRetryButton });\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const toggleMute = () => {\r\n    if (localStreamRef.current) {\r\n      const audioTrack = localStreamRef.current.getAudioTracks()[0];\r\n      if (audioTrack) {\r\n        audioTrack.enabled = !audioTrack.enabled;\r\n        setIsMuted(!audioTrack.enabled);\r\n      }\r\n    }\r\n  };\r\n\r\n  // Chat Functions\r\n  const sendMessage = () => {\r\n    if (!newMessage.trim() || !joined) return;\r\n    \r\n    const message = {\r\n      id: Date.now(),\r\n      text: newMessage.trim(),\r\n      sender: {\r\n        id: room?.participants?.find((p: any) => p.isActive)?.userId?._id || 'unknown',\r\n        name: room?.participants?.find((p: any) => p.isActive)?.userId?.name || 'Unknown'\r\n      },\r\n      timestamp: new Date().toISOString()\r\n    };\r\n    \r\n    setChatMessages(prev => [...prev, message]);\r\n    setNewMessage('');\r\n  };\r\n\r\n  const handleKeyPress = (e: React.KeyboardEvent) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      sendMessage();\r\n    }\r\n  };\r\n\r\n  // Push-to-Talk Functions\r\n  const startPushToTalk = () => {\r\n    if (localStreamRef.current && !isMuted) {\r\n      setIsRecording(true);\r\n      // Enable microphone temporarily\r\n      const audioTrack = localStreamRef.current.getAudioTracks()[0];\r\n      if (audioTrack) {\r\n        audioTrack.enabled = true;\r\n      }\r\n    }\r\n  };\r\n\r\n  const stopPushToTalk = () => {\r\n    if (localStreamRef.current && isPushToTalk) {\r\n      setIsRecording(false);\r\n      // Disable microphone if push-to-talk mode\r\n      const audioTrack = localStreamRef.current.getAudioTracks()[0];\r\n      if (audioTrack) {\r\n        audioTrack.enabled = false;\r\n      }\r\n    }\r\n  };\r\n\r\n  // Microphone Volume Control\r\n  const handleVolumeChange = (volume: number) => {\r\n    setMicrophoneVolume(volume);\r\n    if (localStreamRef.current) {\r\n      const audioTrack = localStreamRef.current.getAudioTracks()[0];\r\n      if (audioTrack) {\r\n        // Apply volume gain to audio track\r\n        const gainNode = audioContextRef.current?.createGain();\r\n        if (gainNode) {\r\n          gainNode.gain.value = volume / 100;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleJoin = async () => {\r\n    if (!roomId) return;\r\n    \r\n    if (room?.isPrivate && !joinPassword) {\r\n      setShowPasswordModal(true);\r\n      return;\r\n    }\r\n    \r\n    try {\r\n      setJoining(true);\r\n      const res: any = await verbfyTalkAPI.joinRoom(roomId, { password: joinPassword });\r\n      if (res.success) {\r\n        setJoined(true);\r\n        setJoinPassword('');\r\n        setShowPasswordModal(false);\r\n        \r\n        // Initialize WebRTC audio after joining\r\n        await initializeAudio();\r\n        \r\n        // Reload room data to show updated participants\r\n        const updatedRes = await verbfyTalkAPI.getRoomDetails(roomId);\r\n        setRoom(updatedRes.data || updatedRes);\r\n      }\r\n    } catch (error: any) {\r\n      console.error('Failed to join room:', error);\r\n      alert(error.response?.data?.message || 'Failed to join room');\r\n    } finally {\r\n      setJoining(false);\r\n    }\r\n  };\r\n\r\n  const handleLeave = async () => {\r\n    if (!roomId) return;\r\n    try {\r\n      // Stop all audio streams\r\n      if (localStreamRef.current) {\r\n        localStreamRef.current.getTracks().forEach(track => track.stop());\r\n      }\r\n      \r\n      // Close peer connections\r\n      peerConnectionsRef.current.forEach(connection => connection.close());\r\n      peerConnectionsRef.current.clear();\r\n      \r\n      await verbfyTalkAPI.leaveRoom(roomId);\r\n      setJoined(false);\r\n      \r\n      // Navigate back to rooms list\r\n      router.push('/verbfy-talk');\r\n    } catch (error: any) {\r\n      console.error('Failed to leave room:', error);\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString: string) => {\r\n    return new Date(dateString).toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  const getLevelIcon = (level: string) => {\r\n    switch (level) {\r\n      case 'Beginner':\r\n        return <AcademicCapIcon className=\"w-4 h-4 text-green-500\" />;\r\n      case 'Intermediate':\r\n        return <AcademicCapIcon className=\"w-4 h-4 text-yellow-500\" />;\r\n      case 'Advanced':\r\n        return <AcademicCapIcon className=\"w-4 h-4 text-red-500\" />;\r\n      default:\r\n        return <AcademicCapIcon className=\"w-4 h-4 text-blue-500\" />;\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <DashboardLayout title=\"Loading Room...\">\r\n        <div className=\"p-8 text-center text-gray-500\">Loading room details...</div>\r\n      </DashboardLayout>\r\n    );\r\n  }\r\n\r\n  if (!room) {\r\n    return (\r\n      <DashboardLayout title=\"Room Not Found\">\r\n        <div className=\"p-8 text-center text-gray-500\">Room not found</div>\r\n      </DashboardLayout>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <DashboardLayout title={room.name || 'VerbfyTalk Room'}>\r\n      <div className=\"max-w-4xl mx-auto p-6\">\r\n        {/* Room Header */}\r\n        <div className=\"bg-white rounded-lg shadow-sm border p-6 mb-6\">\r\n          <div className=\"flex items-start justify-between mb-4\">\r\n            <div className=\"flex-1\">\r\n              <h1 className=\"text-3xl font-bold text-gray-900 flex items-center gap-3\">\r\n                <ChatBubbleLeftRightIcon className=\"w-8 h-8 text-blue-600\" />\r\n                {room.name}\r\n              </h1>\r\n              <p className=\"text-gray-600 mt-2\">{room.description}</p>\r\n              \r\n              <div className=\"flex items-center gap-4 mt-4 text-sm text-gray-500\">\r\n                <div className=\"flex items-center gap-2\">\r\n                  {room.isPrivate ? (\r\n                    <LockClosedIcon className=\"w-4 h-4\" />\r\n                  ) : (\r\n                    <GlobeAltIcon className=\"w-4 h-4\" />\r\n                  )}\r\n                  <span>{room.isPrivate ? 'Private' : 'Public'}</span>\r\n                </div>\r\n                \r\n                <div className=\"flex items-center gap-2\">\r\n                  {getLevelIcon(room.level)}\r\n                  <span>{room.level}</span>\r\n                </div>\r\n                \r\n                <div className=\"flex items-center gap-2\">\r\n                  <UsersIcon className=\"w-4 h-4\" />\r\n                  <span>{room.participants?.filter((p: any) => p.isActive).length || 0}/{room.maxParticipants}</span>\r\n                </div>\r\n                \r\n                {room.startedAt && (\r\n                  <div className=\"flex items-center gap-2\">\r\n                    <CalendarIcon className=\"w-4 h-4\" />\r\n                    <span>Started {formatDate(room.startedAt)}</span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"flex flex-col gap-2\">\r\n              {!joined ? (\r\n                <button\r\n                  onClick={handleJoin}\r\n                  disabled={joining}\r\n                  className=\"bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-lg font-medium transition-colors disabled:opacity-50\"\r\n                >\r\n                  {joining ? 'Joining...' : 'Join Room'}\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  onClick={handleLeave}\r\n                  className=\"bg-red-600 hover:bg-red-700 text-white px-6 py-3 rounded-lg font-medium transition-colors\"\r\n                >\r\n                  Leave Room\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n          \r\n          {room.topic && (\r\n            <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4\">\r\n              <h3 className=\"font-medium text-blue-900 mb-2\">Discussion Topic</h3>\r\n              <p className=\"text-blue-800\">{room.topic}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Participants */}\r\n        <div className=\"bg-white rounded-lg shadow-sm border p-6\">\r\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-4 flex items-center gap-2\">\r\n            <UsersIcon className=\"w-5 h-5\" />\r\n            Participants ({room.participants?.filter((p: any) => p.isActive).length || 0})\r\n          </h2>\r\n          \r\n          {/* Audio Controls for joined users */}\r\n          {joined && (\r\n            <div className=\"bg-blue-50 border border-blue-200 rounded-lg p-4 mb-4\">\r\n              <h3 className=\"font-medium text-blue-900 mb-3 flex items-center gap-2\">\r\n                <SpeakerWaveIcon className=\"w-5 h-5\" />\r\n                Voice Chat Controls\r\n              </h3>\r\n              \r\n              {/* Microphone Permission Status */}\r\n              {!localStreamRef.current ? (\r\n                <div className=\"mb-3 p-3 bg-yellow-50 border border-yellow-200 rounded-lg\">\r\n                  <p className=\"text-yellow-800 text-sm mb-2\">\r\n                    🔒 Microphone access required for voice chat\r\n                  </p>\r\n                  \r\n                  {/* Show error if microphone failed */}\r\n                  {microphoneError && (\r\n                    <div className=\"mb-3 p-3 bg-red-50 border border-red-200 rounded-lg\">\r\n                      <p className=\"text-red-800 text-sm mb-2\">\r\n                        ❌ {microphoneError.message}\r\n                      </p>\r\n                      {microphoneError.showRetry && (\r\n                        <button\r\n                          onClick={() => {\r\n                            setMicrophoneError(null);\r\n                            initializeAudio();\r\n                          }}\r\n                          className=\"bg-red-600 hover:bg-red-700 text-white px-3 py-1 rounded text-xs font-medium transition-colors\"\r\n                        >\r\n                          🔄 Try Again\r\n                        </button>\r\n                      )}\r\n                    </div>\r\n                  )}\r\n                  \r\n                  <button\r\n                    onClick={() => {\r\n                      setMicrophoneError(null);\r\n                      initializeAudio();\r\n                    }}\r\n                    className=\"bg-yellow-600 hover:bg-yellow-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors\"\r\n                  >\r\n                    🎤 Enable Microphone\r\n                  </button>\r\n                  \r\n                  {/* Additional help text */}\r\n                  <div className=\"mt-2 text-xs text-yellow-700\">\r\n                    <p><strong>💡 Troubleshooting:</strong></p>\r\n                    <ul className=\"list-disc list-inside mt-1 space-y-1\">\r\n                      <li>Make sure you're using HTTPS (https://verbfy.com)</li>\r\n                      <li>Check browser microphone permissions in settings</li>\r\n                      <li>Ensure no other apps are using the microphone</li>\r\n                      <li>Try refreshing the page if permission was denied</li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div className=\"space-y-3\">\r\n                  {/* Basic Controls */}\r\n                  <div className=\"flex items-center gap-4\">\r\n                    <button\r\n                      onClick={toggleMute}\r\n                      className={`flex items-center gap-2 px-4 py-2 rounded-lg font-medium transition-colors ${\r\n                        isMuted \r\n                          ? 'bg-red-100 text-red-700 hover:bg-red-200' \r\n                          : 'bg-green-100 text-green-700 hover:bg-green-200'\r\n                      }`}\r\n                    >\r\n                      <MicrophoneIcon className={`w-5 h-5 ${isMuted ? 'text-red-600' : 'text-green-600'}`} />\r\n                      {isMuted ? 'Unmute' : 'Mute'}\r\n                    </button>\r\n                    \r\n                    {/* Push-to-Talk Toggle */}\r\n                    <button\r\n                      onClick={() => setIsPushToTalk(!isPushToTalk)}\r\n                      className={`flex items-center gap-2 px-4 py-2 rounded-lg font-medium transition-colors ${\r\n                        isPushToTalk \r\n                          ? 'bg-purple-100 text-purple-700 hover:bg-purple-200' \r\n                          : 'bg-gray-100 text-gray-700 hover:bg-gray-200'\r\n                      }`}\r\n                    >\r\n                      <VideoCameraIcon className=\"w-5 h-5\" />\r\n                      {isPushToTalk ? 'Push-to-Talk ON' : 'Push-to-Talk OFF'}\r\n                    </button>\r\n                  </div>\r\n                  \r\n                  {/* Push-to-Talk Button */}\r\n                  {isPushToTalk && (\r\n                    <div className=\"flex items-center gap-3\">\r\n                      <button\r\n                        onMouseDown={startPushToTalk}\r\n                        onMouseUp={stopPushToTalk}\r\n                        onTouchStart={startPushToTalk}\r\n                        onTouchEnd={stopPushToTalk}\r\n                        className={`flex items-center gap-2 px-6 py-3 rounded-lg font-medium transition-all ${\r\n                          isRecording \r\n                            ? 'bg-red-500 text-white scale-105' \r\n                            : 'bg-blue-500 text-white hover:bg-blue-600'\r\n                        }`}\r\n                      >\r\n                        <MicrophoneIcon className=\"w-5 h-5\" />\r\n                        {isRecording ? 'Recording...' : 'Hold to Talk'}\r\n                      </button>\r\n                      <span className=\"text-sm text-gray-600\">\r\n                        Hold the button while speaking\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n                  \r\n                  {/* Volume Control */}\r\n                  <div className=\"flex items-center gap-3\">\r\n                    <span className=\"text-sm text-gray-700 min-w-[80px]\">Volume:</span>\r\n                    <input\r\n                      type=\"range\"\r\n                      min=\"0\"\r\n                      max=\"100\"\r\n                      value={microphoneVolume}\r\n                      onChange={(e) => handleVolumeChange(Number(e.target.value))}\r\n                      className=\"flex-1 h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer\"\r\n                    />\r\n                    <span className=\"text-sm text-gray-600 min-w-[40px]\">{microphoneVolume}%</span>\r\n                  </div>\r\n                  \r\n                  {/* Audio Level Indicator */}\r\n                  <div className=\"flex items-center gap-3\">\r\n                    <span className=\"text-sm text-gray-700 min-w-[80px]\">Audio Level:</span>\r\n                    <div className=\"flex-1 w-full h-3 bg-gray-200 rounded-lg overflow-hidden\">\r\n                      <div \r\n                        className={`h-full transition-all duration-100 ${\r\n                          isSpeaking ? 'bg-green-500' : 'bg-blue-500'\r\n                        }`}\r\n                        style={{ width: `${Math.min(audioLevel * 2, 100)}%` }}\r\n                      />\r\n                    </div>\r\n                    <span className=\"text-sm text-gray-600 min-w-[60px]\">\r\n                      {isSpeaking ? 'Speaking' : 'Silent'}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              \r\n              {/* Voice Chat Instructions */}\r\n              <div className=\"mt-3 text-xs text-blue-700\">\r\n                <p>💡 <strong>Voice Chat Tips:</strong></p>\r\n                <ul className=\"list-disc list-inside mt-1 space-y-1\">\r\n                  <li>Click \"Enable Microphone\" to start voice chat</li>\r\n                  <li>Use Mute/Unmute to control your audio</li>\r\n                  <li>Enable Push-to-Talk for hands-free operation</li>\r\n                  <li>Adjust volume slider to control microphone sensitivity</li>\r\n                  <li>Green indicator shows when you're speaking</li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          )}\r\n          \r\n          {room.participants && room.participants.length > 0 ? (\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n              {room.participants\r\n                .filter((p: any) => p.isActive) // Only show active participants\r\n                .filter((p: any, index: number, arr: any[]) => \r\n                  // Remove duplicates by userId\r\n                  arr.findIndex(participant => participant.userId._id === p.userId._id) === index\r\n                )\r\n                .map((participant: any, index: number) => (\r\n                  <div key={`${participant.userId._id}-${index}`} className=\"flex items-center gap-3 p-3 bg-gray-50 rounded-lg\">\r\n                    <div className=\"relative\">\r\n                      <div className=\"w-10 h-10 bg-blue-600 rounded-full flex items-center justify-center text-white font-medium\">\r\n                        {participant.userId?.name?.charAt(0) || 'U'}\r\n                      </div>\r\n                      {/* Speaking indicator */}\r\n                      {participant.isSpeaking && (\r\n                        <div className=\"absolute -top-1 -right-1 w-4 h-4 bg-green-500 rounded-full border-2 border-white animate-pulse\" />\r\n                      )}\r\n                    </div>\r\n                    <div className=\"flex-1\">\r\n                      <p className=\"font-medium text-gray-900\">{participant.userId?.name || 'Unknown User'}</p>\r\n                      <p className=\"text-sm text-gray-500\">\r\n                        Joined {formatDate(participant.joinedAt)}\r\n                      </p>\r\n                      {/* Audio status */}\r\n                      <div className=\"flex items-center gap-2 mt-1\">\r\n                        <MicrophoneIcon className={`w-4 h-4 ${\r\n                          participant.isMuted ? 'text-red-500' : 'text-green-500'\r\n                        }`} />\r\n                        <span className=\"text-xs text-gray-500\">\r\n                          {participant.isMuted ? 'Muted' : 'Active'}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          ) : (\r\n            <p className=\"text-gray-500 text-center py-8\">No participants yet</p>\r\n          )}\r\n        </div>\r\n\r\n        {/* Chat Section */}\r\n        {joined && (\r\n          <div className=\"bg-white rounded-lg shadow-sm border p-6 mb-6\">\r\n            <h2 className=\"text-xl font-semibold text-gray-900 mb-4 flex items-center gap-2\">\r\n              <ChatBubbleLeftRightIcon className=\"w-5 h-5\" />\r\n              Room Chat\r\n            </h2>\r\n            \r\n            {/* Chat Messages */}\r\n            <div className=\"h-64 overflow-y-auto border border-gray-200 rounded-lg p-3 mb-3 bg-gray-50\">\r\n              {chatMessages.length === 0 ? (\r\n                <p className=\"text-gray-500 text-center py-8\">No messages yet. Start the conversation!</p>\r\n              ) : (\r\n                <div className=\"space-y-2\">\r\n                  {chatMessages.map((message) => (\r\n                    <div key={message.id} className=\"flex items-start gap-2\">\r\n                      <div className=\"w-6 h-6 bg-blue-600 rounded-full flex items-center justify-center text-white text-xs font-medium\">\r\n                        {message.sender.name.charAt(0)}\r\n                      </div>\r\n                      <div className=\"flex-1\">\r\n                        <div className=\"flex items-center gap-2\">\r\n                          <span className=\"font-medium text-gray-900\">{message.sender.name}</span>\r\n                          <span className=\"text-xs text-gray-500\">\r\n                            {new Date(message.timestamp).toLocaleTimeString()}\r\n                          </span>\r\n                        </div>\r\n                        <p className=\"text-gray-700\">{message.text}</p>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </div>\r\n            \r\n            {/* Chat Input */}\r\n            <div className=\"flex gap-2\">\r\n              <input\r\n                type=\"text\"\r\n                value={newMessage}\r\n                onChange={(e) => setNewMessage(e.target.value)}\r\n                onKeyPress={handleKeyPress}\r\n                placeholder=\"Type your message...\"\r\n                className=\"flex-1 px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                disabled={!joined}\r\n              />\r\n              <button\r\n                onClick={sendMessage}\r\n                disabled={!newMessage.trim() || !joined}\r\n                className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed transition-colors\"\r\n              >\r\n                Send\r\n              </button>\r\n            </div>\r\n            \r\n            <div className=\"mt-2 text-xs text-gray-500\">\r\n              💡 Press Enter to send, Shift+Enter for new line\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Password Modal */}\r\n        {showPasswordModal && (\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n            <div className=\"bg-white rounded-lg p-6 max-w-md w-full mx-4\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Enter Room Password</h3>\r\n              <input\r\n                type=\"password\"\r\n                value={joinPassword}\r\n                onChange={(e) => setJoinPassword(e.target.value)}\r\n                placeholder=\"Enter password\"\r\n                className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 mb-4\"\r\n              />\r\n              <div className=\"flex gap-3\">\r\n                <button\r\n                  onClick={() => {\r\n                    setShowPasswordModal(false);\r\n                    setJoinPassword('');\r\n                  }}\r\n                  className=\"flex-1 px-4 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  onClick={handleJoin}\r\n                  disabled={joining}\r\n                  className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 disabled:opacity-50\"\r\n                >\r\n                  {joining ? 'Joining...' : 'Join'}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </DashboardLayout>\r\n  );\r\n}"],"names":["window","__NEXT_P","push","__webpack_require__","VerbfyTalkRoomPage","room","router","useRouter","roomId","query","t","useI18n","setRoom","useState","loading","setLoading","joining","setJoining","joined","setJoined","joinPassword","setJoinPassword","showPasswordModal","setShowPasswordModal","isMuted","setIsMuted","isSpeaking","setIsSpeaking","audioLevel","setAudioLevel","participants","setParticipants","microphoneError","setMicrophoneError","chatMessages","setChatMessages","newMessage","setNewMessage","isPushToTalk","setIsPushToTalk","microphoneVolume","setMicrophoneVolume","isRecording","setIsRecording","localStreamRef","useRef","peerConnectionsRef","Map","audioContextRef","analyserRef","useEffect","load","res","verbfyTalkAPI","getRoomDetails","data","isInRoom","some","p","isActive","initializeAudio","stream","console","log","navigator","mediaDevices","getUserMedia","isSecureContext","permission","permissions","name","state","permError","audio","basicError","echoCancellation","noiseSuppression","autoGainControl","sampleRate","channelCount","current","AudioContext","source","createMediaStreamSource","createAnalyser","connect","dataArray","Uint8Array","frequencyBinCount","updateAudioLevel","getByteFrequencyData","average","reduce","a","b","length","requestAnimationFrame","error","errorMessage","showRetryButton","message","includes","showRetry","sendMessage","trim","id","Date","now","text","sender","find","userId","_id","timestamp","toISOString","prev","startPushToTalk","audioTrack","getAudioTracks","enabled","stopPushToTalk","handleVolumeChange","volume","gainNode","createGain","gain","value","handleJoin","isPrivate","joinRoom","password","success","updatedRes","alert","response","handleLeave","getTracks","forEach","track","stop","connection","close","clear","leaveRoom","formatDate","dateString","toLocaleDateString","year","month","day","hour","minute","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","DashboardLayout","title","div","className","jsxs","h1","ChatBubbleLeftRightIcon","description","LockClosedIcon","GlobeAltIcon","span","getLevelIcon","level","AcademicCapIcon","UsersIcon","filter","maxParticipants","startedAt","CalendarIcon","button","onClick","disabled","topic","h3","h2","SpeakerWaveIcon","concat","MicrophoneIcon","VideoCameraIcon","onMouseDown","onMouseUp","onTouchStart","onTouchEnd","input","type","min","max","onChange","Number","e","target","style","width","Math","strong","ul","li","index","arr","findIndex","participant","map","charAt","joinedAt","toLocaleTimeString","onKeyPress","key","shiftKey","preventDefault","placeholder"],"sourceRoot":""}