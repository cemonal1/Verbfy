{"version":3,"file":"static/chunks/pages/verbfy-talk/[roomId]-d6d7d888bde050f2.js","mappings":"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","sources":["webpack://_N_E/?9c3e","webpack://_N_E/./src/hooks/useVerbfyTalk.ts","webpack://_N_E/./src/utils/microphonePermission.ts","webpack://_N_E/./src/hooks/useMicrophonePermission.ts","webpack://_N_E/./src/components/voiceChat/MicrophonePermissionScreen.tsx","webpack://_N_E/./src/components/voiceChat/VoiceChatRoom.tsx","webpack://_N_E/./pages/verbfy-talk/[roomId].tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/verbfy-talk/[roomId]\",\n      function () {\n        return require(\"private-next-pages/verbfy-talk/[roomId].tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/verbfy-talk/[roomId]\"])\n      });\n    }\n  ","import { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { io, Socket } from 'socket.io-client';\r\nimport { useAuth } from '@/context/AuthContext';\r\nimport { tokenStorage } from '@/utils/secureStorage';\r\nimport { microphonePermissionManager } from '@/utils/microphonePermission';\r\n\r\ninterface VerbfyTalkRoom {\r\n  _id: string;\r\n  name: string;\r\n  description: string;\r\n  createdBy: {\r\n    _id: string;\r\n    name: string;\r\n    email: string;\r\n  };\r\n  participants: Array<{\r\n    userId: {\r\n      _id: string;\r\n      name: string;\r\n      email: string;\r\n    };\r\n    joinedAt: string;\r\n    isActive: boolean;\r\n  }>;\r\n  isPrivate: boolean;\r\n  maxParticipants: number;\r\n  level: string;\r\n  topic: string;\r\n}\r\n\r\ninterface Participant {\r\n  id: string;\r\n  name: string;\r\n  isSpeaking: boolean;\r\n  isMuted: boolean;\r\n  isSpeaker: boolean;\r\n}\r\n\r\ninterface Message {\r\n  id: string;\r\n  userId: string;\r\n  userName: string;\r\n  message: string;\r\n  timestamp: string;\r\n}\r\n\r\nexport const useVerbfyTalk = () => {\r\n  const { user } = useAuth();\r\n  const token = tokenStorage.getToken();\r\n  const [isConnected, setIsConnected] = useState(false);\r\n  const [currentRoom, setCurrentRoom] = useState<VerbfyTalkRoom | null>(null);\r\n  const [participants, setParticipants] = useState<Participant[]>([]);\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [isMuted, setIsMuted] = useState(false);\r\n  const [isSpeaking] = useState(false); // Read-only, managed by VAD\r\n  \r\n  const socketRef = useRef<Socket | null>(null);\r\n  const localStreamRef = useRef<MediaStream | null>(null);\r\n  const peerConnectionsRef = useRef<Map<string, RTCPeerConnection>>(new Map());\r\n\r\n  // WebRTC Configuration\r\n  const WEBRTC_CONFIG = {\r\n    iceServers: [\r\n      { urls: 'stun:stun.l.google.com:19302' },\r\n      { urls: 'stun:stun1.l.google.com:19302' }\r\n    ]\r\n  };\r\n\r\n  // Initialize Socket Connection\r\n  useEffect(() => {\r\n    if (!user || !token) return;\r\n\r\n    const newSocket = io(`${process.env.NEXT_PUBLIC_BACKEND_URL || 'https://api.verbfy.com'}`, {\r\n      auth: {\r\n        token: token\r\n      },\r\n      transports: ['polling'], // Start with polling only for stability\r\n      upgrade: true, // Allow upgrade to websocket\r\n      rememberUpgrade: true, // Remember successful upgrades\r\n      timeout: 20000, // 20 second timeout\r\n      forceNew: true, // Force new connection\r\n      reconnection: true,\r\n      reconnectionAttempts: 5,\r\n      reconnectionDelay: 1000,\r\n      reconnectionDelayMax: 5000,\r\n      autoConnect: true,\r\n      withCredentials: true\r\n    });\r\n\r\n    socketRef.current = newSocket;\r\n\r\n    // Connection events\r\n    newSocket.on('connect', () => {\r\n      console.log('✅ Connected to VerbfyTalk server');\r\n      setIsConnected(true);\r\n      setError(null);\r\n    });\r\n\r\n    newSocket.on('disconnect', (reason) => {\r\n      console.log('❌ Disconnected from VerbfyTalk server:', reason);\r\n      setIsConnected(false);\r\n    });\r\n\r\n    newSocket.on('connect_error', (error) => {\r\n      console.error('❌ Connection error:', error);\r\n      setError('Failed to connect to server');\r\n    });\r\n\r\n    // Room events\r\n    newSocket.on('room:joined', (room: VerbfyTalkRoom) => {\r\n      console.log('✅ Joined room:', room.name);\r\n      setCurrentRoom(room);\r\n      setParticipants(room.participants.map(p => ({\r\n        id: p.userId._id,\r\n        name: p.userId.name,\r\n        isSpeaking: false,\r\n        isMuted: false,\r\n        isSpeaker: false\r\n      })));\r\n      setError(null);\r\n      setIsLoading(false);\r\n      \r\n      // Initialize WebRTC connections with existing participants\r\n      setTimeout(() => {\r\n        if (localStreamRef.current && room.participants.length > 0) {\r\n          console.log('🔗 Initializing WebRTC connections with', room.participants.length, 'participants');\r\n          room.participants.forEach(participant => {\r\n            if (participant.userId._id !== user?.id) {\r\n              createPeerConnection(participant.userId._id);\r\n            }\r\n          });\r\n        }\r\n      }, 1000);\r\n    });\r\n\r\n    newSocket.on('room:error', (data: { message: string }) => {\r\n      console.error('❌ Room error:', data.message);\r\n      setError(data.message);\r\n    });\r\n\r\n    newSocket.on('participant:joined', (participant: Participant) => {\r\n      console.log('👤 Participant joined:', participant.name);\r\n      setParticipants(prev => [...prev, participant]);\r\n      \r\n      // Create WebRTC connection with new participant\r\n      if (localStreamRef.current && participant.id !== user?.id) {\r\n        setTimeout(() => {\r\n          createPeerConnection(participant.id);\r\n        }, 500);\r\n      }\r\n    });\r\n\r\n    newSocket.on('participant:left', (participantId: string) => {\r\n      console.log('👋 Participant left:', participantId);\r\n      setParticipants(prev => prev.filter(p => p.id !== participantId));\r\n      \r\n      // Close peer connection\r\n      const peerConnection = peerConnectionsRef.current.get(participantId);\r\n      if (peerConnection) {\r\n        peerConnection.close();\r\n        peerConnectionsRef.current.delete(participantId);\r\n        console.log('🔌 Closed peer connection for:', participantId);\r\n      }\r\n    });\r\n\r\n    newSocket.on('message:received', (message: Message) => {\r\n      console.log('💬 Message received:', message.message);\r\n      setMessages(prev => [...prev, message]);\r\n    });\r\n\r\n    // WebRTC events\r\n    newSocket.on('webrtc:offer', async (data: { from: string; offer: RTCSessionDescriptionInit }) => {\r\n      await handleOffer(data.from, data.offer);\r\n    });\r\n\r\n    newSocket.on('webrtc:answer', async (data: { from: string; answer: RTCSessionDescriptionInit }) => {\r\n      await handleAnswer(data.from, data.answer);\r\n    });\r\n\r\n    newSocket.on('webrtc:ice-candidate', async (data: { from: string; candidate: RTCIceCandidateInit }) => {\r\n      await handleICECandidate(data.from, data.candidate);\r\n    });\r\n\r\n    return () => {\r\n      newSocket.disconnect();\r\n      socketRef.current = null;\r\n    };\r\n  }, [user, token]);\r\n\r\n  // Microphone access is now handled by MicrophonePermissionScreen component\r\n\r\n  // Join room\r\n  const joinRoom = useCallback(async (roomId: string, password?: string) => {\r\n    if (!socketRef.current?.connected) {\r\n      setError('Not connected to server');\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      setIsLoading(true);\r\n      setError(null);\r\n\r\n      // Microphone access is now handled by MicrophonePermissionScreen component\r\n      // The stream should already be available in localStreamRef.current\r\n\r\n      // First, join room via HTTP API\r\n      const response = await fetch(`/api/verbfy-talk/${roomId}/join`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${token}`,\r\n        },\r\n        credentials: 'include',\r\n        body: JSON.stringify({ password })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || 'Failed to join room');\r\n      }\r\n\r\n      const result = await response.json();\r\n      console.log('✅ HTTP API join successful:', result.data.name);\r\n\r\n      // Then, join room via Socket.IO\r\n      socketRef.current.emit('room:join', { roomId, password });\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      console.error('❌ Failed to join room:', error);\r\n      setError(error instanceof Error ? error.message : 'Failed to join room');\r\n      setIsLoading(false);\r\n      return false;\r\n    }\r\n  }, [token]);\r\n\r\n  // Set microphone stream (called from MicrophonePermissionScreen)\r\n  const setMicrophoneStream = useCallback((stream: MediaStream) => {\r\n    localStreamRef.current = stream;\r\n    console.log('✅ Microphone stream set in useVerbfyTalk');\r\n  }, []);\r\n\r\n  // Leave room\r\n  const leaveRoom = useCallback(() => {\r\n    if (socketRef.current?.connected && currentRoom) {\r\n      socketRef.current.emit('room:leave', { roomId: currentRoom._id });\r\n    }\r\n    \r\n    // Clean up\r\n    setCurrentRoom(null);\r\n    setParticipants([]);\r\n    setMessages([]);\r\n    \r\n    // Stop local stream\r\n    if (localStreamRef.current) {\r\n      localStreamRef.current.getTracks().forEach(track => track.stop());\r\n      localStreamRef.current = null;\r\n    }\r\n    \r\n    // Close peer connections\r\n    peerConnectionsRef.current.forEach(pc => pc.close());\r\n    peerConnectionsRef.current.clear();\r\n  }, [currentRoom]);\r\n\r\n  // Send message\r\n  const sendMessage = useCallback((message: string) => {\r\n    if (socketRef.current?.connected && currentRoom) {\r\n      socketRef.current.emit('message:send', {\r\n        roomId: currentRoom._id,\r\n        message: message.trim()\r\n      });\r\n    }\r\n  }, [currentRoom]);\r\n\r\n  // Toggle mute\r\n  const toggleMute = useCallback(() => {\r\n    if (localStreamRef.current) {\r\n      const audioTrack = localStreamRef.current.getAudioTracks()[0];\r\n      if (audioTrack) {\r\n        audioTrack.enabled = !audioTrack.enabled;\r\n        setIsMuted(!audioTrack.enabled);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // Create peer connection\r\n  const createPeerConnection = useCallback(async (participantId: string) => {\r\n    try {\r\n      const peerConnection = new RTCPeerConnection(WEBRTC_CONFIG);\r\n      peerConnectionsRef.current.set(participantId, peerConnection);\r\n\r\n      // Add local stream\r\n      if (localStreamRef.current) {\r\n        localStreamRef.current.getTracks().forEach(track => {\r\n          peerConnection.addTrack(track, localStreamRef.current!);\r\n        });\r\n      }\r\n\r\n                  // Handle ICE candidates\r\n            peerConnection.onicecandidate = (event) => {\r\n              if (event.candidate && socketRef.current?.connected) {\r\n                socketRef.current.emit('webrtc:ice-candidate', {\r\n                  to: participantId,\r\n                  candidate: event.candidate\r\n                });\r\n              }\r\n            };\r\n\r\n      // Handle remote stream\r\n      peerConnection.ontrack = () => {\r\n        console.log('🎵 Remote audio stream received from:', participantId);\r\n        // You can add audio element here to play remote audio\r\n      };\r\n\r\n      // Create and send offer\r\n      const offer = await peerConnection.createOffer();\r\n      await peerConnection.setLocalDescription(offer);\r\n\r\n      if (socketRef.current?.connected) {\r\n        socketRef.current.emit('webrtc:offer', {\r\n          to: participantId,\r\n          offer: offer\r\n        });\r\n      }\r\n\r\n      console.log('🔗 Peer connection created for:', participantId);\r\n    } catch (error) {\r\n      console.error('❌ Failed to create peer connection:', error);\r\n    }\r\n  }, []);\r\n\r\n  // WebRTC handlers\r\n  const handleOffer = async (from: string, offer: RTCSessionDescriptionInit) => {\r\n    try {\r\n      const peerConnection = new RTCPeerConnection(WEBRTC_CONFIG);\r\n      peerConnectionsRef.current.set(from, peerConnection);\r\n\r\n      // Add local stream\r\n      if (localStreamRef.current) {\r\n        localStreamRef.current.getTracks().forEach(track => {\r\n          peerConnection.addTrack(track, localStreamRef.current!);\r\n        });\r\n      }\r\n\r\n      // Handle ICE candidates\r\n      peerConnection.onicecandidate = (event) => {\r\n        if (event.candidate && socketRef.current?.connected) {\r\n          socketRef.current.emit('webrtc:ice-candidate', {\r\n            to: from,\r\n            candidate: event.candidate\r\n          });\r\n        }\r\n      };\r\n\r\n                  // Handle remote stream\r\n            peerConnection.ontrack = () => {\r\n              console.log('🎵 Remote audio stream received from:', from);\r\n            };\r\n\r\n      await peerConnection.setRemoteDescription(offer);\r\n      const answer = await peerConnection.createAnswer();\r\n      await peerConnection.setLocalDescription(answer);\r\n\r\n      if (socketRef.current?.connected) {\r\n        socketRef.current.emit('webrtc:answer', {\r\n          to: from,\r\n          answer: answer\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('❌ Failed to handle offer:', error);\r\n    }\r\n  };\r\n\r\n  const handleAnswer = async (from: string, answer: RTCSessionDescriptionInit) => {\r\n    try {\r\n      const peerConnection = peerConnectionsRef.current.get(from);\r\n      if (peerConnection) {\r\n        await peerConnection.setRemoteDescription(answer);\r\n      }\r\n    } catch (error) {\r\n      console.error('❌ Failed to handle answer:', error);\r\n    }\r\n  };\r\n\r\n  const handleICECandidate = async (from: string, candidate: RTCIceCandidateInit) => {\r\n    try {\r\n      const peerConnection = peerConnectionsRef.current.get(from);\r\n      if (peerConnection && peerConnection.remoteDescription) {\r\n        await peerConnection.addIceCandidate(candidate);\r\n      }\r\n    } catch (error) {\r\n      console.error('❌ Failed to handle ICE candidate:', error);\r\n    }\r\n  };\r\n\r\n  return {\r\n    // Connection state\r\n    isConnected,\r\n    isLoading,\r\n    error,\r\n    \r\n    // Room state\r\n    currentRoom,\r\n    participants,\r\n    messages,\r\n    \r\n    // Audio state\r\n    isMuted,\r\n    isSpeaking,\r\n    \r\n    // Actions\r\n    joinRoom,\r\n    leaveRoom,\r\n    sendMessage,\r\n    toggleMute,\r\n    createPeerConnection,\r\n    setMicrophoneStream,\r\n    \r\n    // Cleanup\r\n    setError\r\n  };\r\n};\r\n","/**\r\n * Comprehensive Microphone Permission Management\r\n * Handles all aspects of microphone access, validation, and fallback mechanisms\r\n */\r\n\r\nexport interface MicrophoneDevice {\r\n  deviceId: string;\r\n  label: string;\r\n  kind: string;\r\n  groupId: string;\r\n}\r\n\r\nexport interface MicrophonePermissionState {\r\n  isSupported: boolean;\r\n  isGranted: boolean;\r\n  isDenied: boolean;\r\n  isPrompted: boolean;\r\n  canRequest: boolean;\r\n  lastChecked: number;\r\n  error?: string;\r\n}\r\n\r\nexport interface MicrophoneConstraints {\r\n  audio: {\r\n    deviceId?: { exact: string } | string;\r\n    echoCancellation: boolean;\r\n    noiseSuppression: boolean;\r\n    autoGainControl: boolean;\r\n    sampleRate: number;\r\n    channelCount: number;\r\n    latency: number;\r\n  };\r\n  video: boolean;\r\n}\r\n\r\nexport class MicrophonePermissionManager {\r\n  private static instance: MicrophonePermissionManager;\r\n  private permissionState: MicrophonePermissionState;\r\n  private devices: MicrophoneDevice[] = [];\r\n  private currentStream: MediaStream | null = null;\r\n\r\n  private constructor() {\r\n    this.permissionState = {\r\n      isSupported: false,\r\n      isGranted: false,\r\n      isDenied: false,\r\n      isPrompted: false,\r\n      canRequest: false,\r\n      lastChecked: 0,\r\n    };\r\n    this.initializePermissionState();\r\n  }\r\n\r\n  public static getInstance(): MicrophonePermissionManager {\r\n    if (!MicrophonePermissionManager.instance) {\r\n      MicrophonePermissionManager.instance = new MicrophonePermissionManager();\r\n    }\r\n    return MicrophonePermissionManager.instance;\r\n  }\r\n\r\n  /**\r\n   * Initialize permission state and check browser support\r\n   */\r\n  private initializePermissionState(): void {\r\n    // Check if getUserMedia is supported\r\n    this.permissionState.isSupported = !!(\r\n      navigator.mediaDevices &&\r\n      navigator.mediaDevices.getUserMedia &&\r\n      typeof navigator.mediaDevices.getUserMedia === 'function'\r\n    );\r\n\r\n    if (!this.permissionState.isSupported) {\r\n      this.permissionState.error = 'getUserMedia is not supported in this browser';\r\n      return;\r\n    }\r\n\r\n    // Check if permissions API is supported\r\n    if ('permissions' in navigator) {\r\n      this.checkPermissionStatus();\r\n    } else {\r\n      // Fallback for browsers without Permissions API\r\n      this.permissionState.canRequest = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Check current permission status using Permissions API\r\n   */\r\n  private async checkPermissionStatus(): Promise<void> {\r\n    try {\r\n      const permission = await navigator.permissions.query({ name: 'microphone' as PermissionName });\r\n      \r\n      this.permissionState.isGranted = permission.state === 'granted';\r\n      this.permissionState.isDenied = permission.state === 'denied';\r\n      this.permissionState.canRequest = permission.state !== 'denied';\r\n      this.permissionState.lastChecked = Date.now();\r\n\r\n      // Listen for permission changes\r\n      permission.addEventListener('change', () => {\r\n        this.permissionState.isGranted = permission.state === 'granted';\r\n        this.permissionState.isDenied = permission.state === 'denied';\r\n        this.permissionState.canRequest = permission.state !== 'denied';\r\n        this.permissionState.lastChecked = Date.now();\r\n      });\r\n    } catch (error) {\r\n      console.warn('Permissions API not fully supported:', error);\r\n      this.permissionState.canRequest = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get available microphone devices\r\n   */\r\n  public async getMicrophoneDevices(): Promise<MicrophoneDevice[]> {\r\n    try {\r\n      const devices = await navigator.mediaDevices.enumerateDevices();\r\n      this.devices = devices\r\n        .filter(device => device.kind === 'audioinput')\r\n        .map(device => ({\r\n          deviceId: device.deviceId,\r\n          label: device.label || `Microphone ${device.deviceId.slice(0, 8)}`,\r\n          kind: device.kind,\r\n          groupId: device.groupId,\r\n        }));\r\n      return this.devices;\r\n    } catch (error) {\r\n      console.error('Failed to enumerate devices:', error);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Request microphone permission with comprehensive error handling\r\n   */\r\n  public async requestMicrophonePermission(\r\n    constraints?: Partial<MicrophoneConstraints>\r\n  ): Promise<{ success: boolean; stream?: MediaStream; error?: string }> {\r\n    if (!this.permissionState.isSupported) {\r\n      return {\r\n        success: false,\r\n        error: 'Microphone access is not supported in this browser. Please use a modern browser like Chrome, Firefox, Safari, or Edge.',\r\n      };\r\n    }\r\n\r\n    if (this.permissionState.isDenied) {\r\n      return {\r\n        success: false,\r\n        error: 'Microphone access has been permanently denied. Please enable microphone access in your browser settings and refresh the page.',\r\n      };\r\n    }\r\n\r\n    try {\r\n      // Default constraints with high quality settings\r\n      const defaultConstraints: MicrophoneConstraints = {\r\n        audio: {\r\n          echoCancellation: true,\r\n          noiseSuppression: true,\r\n          autoGainControl: true,\r\n          sampleRate: 44100,\r\n          channelCount: 1,\r\n          latency: 0.01,\r\n        },\r\n        video: false,\r\n      };\r\n\r\n      const finalConstraints: MediaStreamConstraints = { \r\n        audio: {\r\n          ...defaultConstraints.audio,\r\n          ...(constraints?.audio || {}),\r\n        },\r\n        video: constraints?.video ?? defaultConstraints.video,\r\n      };\r\n      this.permissionState.isPrompted = true;\r\n\r\n      console.log('🎤 Requesting microphone access with constraints:', finalConstraints);\r\n      \r\n      const stream = await navigator.mediaDevices.getUserMedia(finalConstraints);\r\n      \r\n      this.currentStream = stream;\r\n      this.permissionState.isGranted = true;\r\n      this.permissionState.isDenied = false;\r\n      this.permissionState.lastChecked = Date.now();\r\n      this.permissionState.error = undefined;\r\n\r\n      console.log('✅ Microphone access granted successfully');\r\n      \r\n      // Get device info\r\n      await this.getMicrophoneDevices();\r\n\r\n      return { success: true, stream };\r\n    } catch (error: unknown) {\r\n      this.permissionState.isGranted = false;\r\n      this.permissionState.lastChecked = Date.now();\r\n      \r\n      const errorMessage = this.getDetailedErrorMessage(error);\r\n      this.permissionState.error = errorMessage;\r\n\r\n      console.error('❌ Microphone access failed:', error);\r\n      \r\n      return { success: false, error: errorMessage };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get detailed error message based on error type\r\n   */\r\n  private getDetailedErrorMessage(error: unknown): string {\r\n    if (error instanceof Error) {\r\n      const errorMessages = {\r\n        NotAllowedError: 'Microphone access was denied. Please click \"Allow\" when prompted, or enable microphone access in your browser settings.',\r\n        NotFoundError: 'No microphone device found. Please connect a microphone and try again.',\r\n        NotSupportedError: 'Microphone access is not supported in this browser. Please use a modern browser.',\r\n        NotReadableError: 'Microphone is already in use by another application. Please close other applications using the microphone and try again.',\r\n        AbortError: 'Microphone access request was cancelled. Please try again.',\r\n        SecurityError: 'Microphone access is blocked due to security restrictions. Please ensure you are using HTTPS.',\r\n        InvalidStateError: 'Microphone is in an invalid state. Please refresh the page and try again.',\r\n        TypeError: 'Invalid microphone constraints. Please try again.',\r\n        UnknownError: 'An unknown error occurred while accessing the microphone. Please try again.',\r\n      };\r\n\r\n      return errorMessages[error.name as keyof typeof errorMessages] || \r\n             `Microphone access failed: ${error.message || 'Unknown error'}`;\r\n    }\r\n    \r\n    return 'Microphone access failed: Unknown error';\r\n  }\r\n\r\n  /**\r\n   * Test microphone quality and functionality\r\n   */\r\n  public async testMicrophoneQuality(stream: MediaStream): Promise<{\r\n    isWorking: boolean;\r\n    hasAudio: boolean;\r\n    volumeLevel: number;\r\n    quality: 'excellent' | 'good' | 'poor' | 'none';\r\n  }> {\r\n    try {\r\n      const audioContext = new (window.AudioContext || (window as { webkitAudioContext?: typeof AudioContext }).webkitAudioContext)();\r\n      const source = audioContext.createMediaStreamSource(stream);\r\n      const analyser = audioContext.createAnalyser();\r\n      const dataArray = new Uint8Array(analyser.frequencyBinCount);\r\n\r\n      source.connect(analyser);\r\n      analyser.fftSize = 256;\r\n\r\n      // Test for 1 second\r\n      return new Promise((resolve) => {\r\n        let samples = 0;\r\n        let totalVolume = 0;\r\n        let hasAudioSamples = 0;\r\n\r\n        const testInterval = setInterval(() => {\r\n          analyser.getByteFrequencyData(dataArray);\r\n          const average = dataArray.reduce((sum, value) => sum + value, 0) / dataArray.length;\r\n          \r\n          totalVolume += average;\r\n          samples++;\r\n          \r\n          if (average > 10) {\r\n            hasAudioSamples++;\r\n          }\r\n\r\n          if (samples >= 10) { // Test for 1 second (10 * 100ms)\r\n            clearInterval(testInterval);\r\n            \r\n            const avgVolume = totalVolume / samples;\r\n            const audioRatio = hasAudioSamples / samples;\r\n            \r\n            let quality: 'excellent' | 'good' | 'poor' | 'none';\r\n            if (audioRatio > 0.7 && avgVolume > 20) {\r\n              quality = 'excellent';\r\n            } else if (audioRatio > 0.4 && avgVolume > 10) {\r\n              quality = 'good';\r\n            } else if (audioRatio > 0.1 && avgVolume > 5) {\r\n              quality = 'poor';\r\n            } else {\r\n              quality = 'none';\r\n            }\r\n\r\n            resolve({\r\n              isWorking: quality !== 'none',\r\n              hasAudio: audioRatio > 0.1,\r\n              volumeLevel: avgVolume,\r\n              quality,\r\n            });\r\n\r\n            // Cleanup\r\n            source.disconnect();\r\n            analyser.disconnect();\r\n            audioContext.close();\r\n          }\r\n        }, 100);\r\n      });\r\n    } catch (error) {\r\n      console.error('Microphone quality test failed:', error);\r\n      return {\r\n        isWorking: false,\r\n        hasAudio: false,\r\n        volumeLevel: 0,\r\n        quality: 'none',\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Stop current microphone stream\r\n   */\r\n  public stopMicrophone(): void {\r\n    if (this.currentStream) {\r\n      this.currentStream.getTracks().forEach(track => {\r\n        track.stop();\r\n        console.log('🔇 Microphone track stopped');\r\n      });\r\n      this.currentStream = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get current permission state\r\n   */\r\n  public getPermissionState(): MicrophonePermissionState {\r\n    return { ...this.permissionState };\r\n  }\r\n\r\n  /**\r\n   * Check if microphone is currently active\r\n   */\r\n  public isMicrophoneActive(): boolean {\r\n    return this.currentStream !== null && \r\n           this.currentStream.getAudioTracks().some(track => track.readyState === 'live');\r\n  }\r\n\r\n  /**\r\n   * Get browser compatibility info\r\n   */\r\n  public getBrowserCompatibility(): {\r\n    getUserMedia: boolean;\r\n    permissionsAPI: boolean;\r\n    audioContext: boolean;\r\n    webRTC: boolean;\r\n    https: boolean;\r\n  } {\r\n    return {\r\n      getUserMedia: !!(navigator.mediaDevices && navigator.mediaDevices.getUserMedia),\r\n      permissionsAPI: 'permissions' in navigator,\r\n      audioContext: !!(window.AudioContext || (window as { webkitAudioContext?: typeof AudioContext }).webkitAudioContext),\r\n      webRTC: !!(window.RTCPeerConnection || (window as { webkitRTCPeerConnection?: typeof RTCPeerConnection }).webkitRTCPeerConnection),\r\n      https: location.protocol === 'https:' || location.hostname === 'localhost',\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Reset permission state (useful for testing)\r\n   */\r\n  public resetPermissionState(): void {\r\n    this.stopMicrophone();\r\n    this.permissionState = {\r\n      isSupported: false,\r\n      isGranted: false,\r\n      isDenied: false,\r\n      isPrompted: false,\r\n      canRequest: false,\r\n      lastChecked: 0,\r\n    };\r\n    this.initializePermissionState();\r\n  }\r\n}\r\n\r\n// Export singleton instance\r\nexport const microphonePermissionManager = MicrophonePermissionManager.getInstance();\r\n","import { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { microphonePermissionManager, MicrophoneDevice, MicrophonePermissionState, MicrophoneConstraints } from '@/utils/microphonePermission';\r\n\r\nexport interface UseMicrophonePermissionReturn {\r\n  // Permission state\r\n  permissionState: MicrophonePermissionState;\r\n  isSupported: boolean;\r\n  isGranted: boolean;\r\n  isDenied: boolean;\r\n  canRequest: boolean;\r\n  \r\n  // Device info\r\n  devices: MicrophoneDevice[];\r\n  currentDevice: MicrophoneDevice | null;\r\n  \r\n  // Stream info\r\n  currentStream: MediaStream | null;\r\n  isActive: boolean;\r\n  \r\n  // Quality info\r\n  quality: {\r\n    isWorking: boolean;\r\n    hasAudio: boolean;\r\n    volumeLevel: number;\r\n    quality: 'excellent' | 'good' | 'poor' | 'none';\r\n  };\r\n  \r\n  // Actions\r\n  requestPermission: (constraints?: Partial<MicrophoneConstraints>) => Promise<{ success: boolean; stream?: MediaStream; error?: string }>;\r\n  stopMicrophone: () => void;\r\n  testQuality: () => Promise<void>;\r\n  refreshDevices: () => Promise<void>;\r\n  \r\n  // Browser compatibility\r\n  browserCompatibility: {\r\n    getUserMedia: boolean;\r\n    permissionsAPI: boolean;\r\n    audioContext: boolean;\r\n    webRTC: boolean;\r\n    https: boolean;\r\n  };\r\n  \r\n  // Error handling\r\n  error: string | null;\r\n  clearError: () => void;\r\n}\r\n\r\nexport const useMicrophonePermission = (): UseMicrophonePermissionReturn => {\r\n  const [permissionState, setPermissionState] = useState<MicrophonePermissionState>(\r\n    microphonePermissionManager.getPermissionState()\r\n  );\r\n  const [devices, setDevices] = useState<MicrophoneDevice[]>([]);\r\n  const [currentDevice, setCurrentDevice] = useState<MicrophoneDevice | null>(null);\r\n  const [currentStream, setCurrentStream] = useState<MediaStream | null>(null);\r\n  const [isActive, setIsActive] = useState(false);\r\n  const [quality, setQuality] = useState({\r\n    isWorking: false,\r\n    hasAudio: false,\r\n    volumeLevel: 0,\r\n    quality: 'none' as 'excellent' | 'good' | 'poor' | 'none',\r\n  });\r\n  const [error, setError] = useState<string | null>(null);\r\n  \r\n  const qualityTestIntervalRef = useRef<NodeJS.Timeout | null>(null);\r\n\r\n  // Get browser compatibility info\r\n  const browserCompatibility = microphonePermissionManager.getBrowserCompatibility();\r\n\r\n  // Update permission state\r\n  const updatePermissionState = useCallback(() => {\r\n    const newState = microphonePermissionManager.getPermissionState();\r\n    setPermissionState(newState);\r\n    setError(newState.error || null);\r\n  }, []);\r\n\r\n  // Refresh devices list\r\n  const refreshDevices = useCallback(async () => {\r\n    try {\r\n      const deviceList = await microphonePermissionManager.getMicrophoneDevices();\r\n      setDevices(deviceList);\r\n      \r\n      // Set current device if we have a stream\r\n      if (currentStream && deviceList.length > 0) {\r\n        const audioTrack = currentStream.getAudioTracks()[0];\r\n        if (audioTrack) {\r\n          const device = deviceList.find(d => d.deviceId === audioTrack.getSettings().deviceId);\r\n          setCurrentDevice(device || deviceList[0]);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to refresh devices:', error);\r\n    }\r\n  }, [currentStream]);\r\n\r\n  // Request microphone permission\r\n  const requestPermission = useCallback(async (constraints?: Partial<MicrophoneConstraints>) => {\r\n    try {\r\n      setError(null);\r\n      const result = await microphonePermissionManager.requestMicrophonePermission(constraints);\r\n      \r\n      if (result.success && result.stream) {\r\n        setCurrentStream(result.stream);\r\n        setIsActive(true);\r\n        await refreshDevices();\r\n        \r\n        // Start quality monitoring\r\n        startQualityMonitoring(result.stream);\r\n      } else {\r\n        setError(result.error || 'Failed to access microphone');\r\n      }\r\n      \r\n      updatePermissionState();\r\n      return result;\r\n    } catch (error: unknown) {\r\n      const errorMessage = error instanceof Error ? error.message : 'Unknown error occurred';\r\n      setError(errorMessage);\r\n      updatePermissionState();\r\n      return { success: false, error: errorMessage };\r\n    }\r\n  }, [refreshDevices, updatePermissionState]);\r\n\r\n  // Stop microphone\r\n  const stopMicrophone = useCallback(() => {\r\n    microphonePermissionManager.stopMicrophone();\r\n    setCurrentStream(null);\r\n    setIsActive(false);\r\n    setQuality({\r\n      isWorking: false,\r\n      hasAudio: false,\r\n      volumeLevel: 0,\r\n      quality: 'none',\r\n    });\r\n    \r\n    if (qualityTestIntervalRef.current) {\r\n      clearInterval(qualityTestIntervalRef.current);\r\n      qualityTestIntervalRef.current = null;\r\n    }\r\n    \r\n    updatePermissionState();\r\n  }, [updatePermissionState]);\r\n\r\n  // Test microphone quality\r\n  const testQuality = useCallback(async () => {\r\n    if (currentStream) {\r\n      try {\r\n        const qualityResult = await microphonePermissionManager.testMicrophoneQuality(currentStream);\r\n        setQuality(qualityResult);\r\n      } catch (error) {\r\n        console.error('Quality test failed:', error);\r\n      }\r\n    }\r\n  }, [currentStream]);\r\n\r\n  // Start quality monitoring\r\n  const startQualityMonitoring = useCallback((stream: MediaStream) => {\r\n    if (qualityTestIntervalRef.current) {\r\n      clearInterval(qualityTestIntervalRef.current);\r\n    }\r\n\r\n    qualityTestIntervalRef.current = setInterval(async () => {\r\n      try {\r\n        const qualityResult = await microphonePermissionManager.testMicrophoneQuality(stream);\r\n        setQuality(qualityResult);\r\n        \r\n        // Update active state based on quality\r\n        setIsActive(qualityResult.isWorking);\r\n      } catch (error) {\r\n        console.error('Quality monitoring failed:', error);\r\n        setIsActive(false);\r\n      }\r\n    }, 2000); // Test every 2 seconds\r\n  }, []);\r\n\r\n  // Clear error\r\n  const clearError = useCallback(() => {\r\n    setError(null);\r\n  }, []);\r\n\r\n  // Initialize on mount\r\n  useEffect(() => {\r\n    updatePermissionState();\r\n    refreshDevices();\r\n    \r\n    // Set up periodic permission state updates\r\n    const interval = setInterval(updatePermissionState, 5000);\r\n    \r\n    return () => {\r\n      clearInterval(interval);\r\n      if (qualityTestIntervalRef.current) {\r\n        clearInterval(qualityTestIntervalRef.current);\r\n      }\r\n    };\r\n  }, [updatePermissionState, refreshDevices]);\r\n\r\n  // Monitor stream changes\r\n  useEffect(() => {\r\n    if (currentStream) {\r\n      const audioTrack = currentStream.getAudioTracks()[0];\r\n      if (audioTrack) {\r\n        const handleTrackEnd = () => {\r\n          console.log('🎤 Audio track ended');\r\n          setIsActive(false);\r\n          setQuality(prev => ({ ...prev, isWorking: false, quality: 'none' }));\r\n        };\r\n\r\n        const handleTrackMute = () => {\r\n          console.log('🔇 Audio track muted');\r\n          setIsActive(false);\r\n        };\r\n\r\n        const handleTrackUnmute = () => {\r\n          console.log('🔊 Audio track unmuted');\r\n          setIsActive(true);\r\n        };\r\n\r\n        audioTrack.addEventListener('ended', handleTrackEnd);\r\n        audioTrack.addEventListener('mute', handleTrackMute);\r\n        audioTrack.addEventListener('unmute', handleTrackUnmute);\r\n\r\n        return () => {\r\n          audioTrack.removeEventListener('ended', handleTrackEnd);\r\n          audioTrack.removeEventListener('mute', handleTrackMute);\r\n          audioTrack.removeEventListener('unmute', handleTrackUnmute);\r\n        };\r\n      }\r\n    }\r\n  }, [currentStream]);\r\n\r\n  return {\r\n    // Permission state\r\n    permissionState,\r\n    isSupported: permissionState.isSupported,\r\n    isGranted: permissionState.isGranted,\r\n    isDenied: permissionState.isDenied,\r\n    canRequest: permissionState.canRequest,\r\n    \r\n    // Device info\r\n    devices,\r\n    currentDevice,\r\n    \r\n    // Stream info\r\n    currentStream,\r\n    isActive,\r\n    \r\n    // Quality info\r\n    quality,\r\n    \r\n    // Actions\r\n    requestPermission,\r\n    stopMicrophone,\r\n    testQuality,\r\n    refreshDevices,\r\n    \r\n    // Browser compatibility\r\n    browserCompatibility,\r\n    \r\n    // Error handling\r\n    error,\r\n    clearError,\r\n  };\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useMicrophonePermission } from '@/hooks/useMicrophonePermission';\r\nimport {\r\n  MicrophoneIcon,\r\n  ExclamationTriangleIcon,\r\n  CheckCircleIcon,\r\n  XCircleIcon,\r\n  InformationCircleIcon,\r\n  ArrowPathIcon,\r\n} from '@heroicons/react/24/outline';\r\n\r\ninterface MicrophonePermissionScreenProps {\r\n  onPermissionGranted: (stream: MediaStream) => void;\r\n  onCancel: () => void;\r\n  roomName?: string;\r\n}\r\n\r\nexport default function MicrophonePermissionScreen({\r\n  onPermissionGranted,\r\n  onCancel,\r\n  roomName = 'VerbfyTalk Room',\r\n}: MicrophonePermissionScreenProps) {\r\n  const {\r\n    permissionState,\r\n    isSupported,\r\n    isGranted,\r\n    isDenied,\r\n    canRequest,\r\n    devices,\r\n    currentStream,\r\n    isActive,\r\n    quality,\r\n    requestPermission,\r\n    stopMicrophone,\r\n    testQuality,\r\n    refreshDevices,\r\n    browserCompatibility,\r\n    error,\r\n    clearError,\r\n  } = useMicrophonePermission();\r\n\r\n  const [isRequesting, setIsRequesting] = useState(false);\r\n  const [showAdvanced, setShowAdvanced] = useState(false);\r\n  const [selectedDevice, setSelectedDevice] = useState<string>('');\r\n\r\n  // Auto-request permission if supported and not denied\r\n  useEffect(() => {\r\n    if (isSupported && canRequest && !isGranted && !isDenied) {\r\n      handleRequestPermission();\r\n    }\r\n  }, [isSupported, canRequest, isGranted, isDenied]);\r\n\r\n  // Call onPermissionGranted when stream is available\r\n  useEffect(() => {\r\n    if (currentStream && isActive && quality.isWorking) {\r\n      onPermissionGranted(currentStream);\r\n    }\r\n  }, [currentStream, isActive, quality.isWorking, onPermissionGranted]);\r\n\r\n  const handleRequestPermission = async () => {\r\n    setIsRequesting(true);\r\n    clearError();\r\n    \r\n    const constraints = selectedDevice ? {\r\n      audio: {\r\n        deviceId: { exact: selectedDevice },\r\n        echoCancellation: true,\r\n        noiseSuppression: true,\r\n        autoGainControl: true,\r\n        sampleRate: 44100,\r\n        channelCount: 1,\r\n        latency: 0.01,\r\n      },\r\n      video: false,\r\n    } : undefined;\r\n\r\n    const result = await requestPermission(constraints);\r\n    \r\n    if (result.success) {\r\n      console.log('✅ Microphone permission granted');\r\n    } else {\r\n      console.error('❌ Microphone permission failed:', result.error);\r\n    }\r\n    \r\n    setIsRequesting(false);\r\n  };\r\n\r\n  const handleRetry = async () => {\r\n    stopMicrophone();\r\n    await refreshDevices();\r\n    await handleRequestPermission();\r\n  };\r\n\r\n  const handleTestQuality = async () => {\r\n    await testQuality();\r\n  };\r\n\r\n  const getStatusIcon = () => {\r\n    if (isRequesting) {\r\n      return <ArrowPathIcon className=\"w-16 h-16 text-blue-600 animate-spin\" />;\r\n    }\r\n    \r\n    if (isGranted && isActive && quality.isWorking) {\r\n      return <CheckCircleIcon className=\"w-16 h-16 text-green-600\" />;\r\n    }\r\n    \r\n    if (isDenied) {\r\n      return <XCircleIcon className=\"w-16 h-16 text-red-600\" />;\r\n    }\r\n    \r\n    if (!isSupported) {\r\n      return <ExclamationTriangleIcon className=\"w-16 h-16 text-yellow-600\" />;\r\n    }\r\n    \r\n    return <MicrophoneIcon className=\"w-16 h-16 text-blue-600\" />;\r\n  };\r\n\r\n  const getStatusMessage = () => {\r\n    if (isRequesting) {\r\n      return 'Requesting microphone access...';\r\n    }\r\n    \r\n    if (isGranted && isActive && quality.isWorking) {\r\n      return `Microphone access granted! Quality: ${quality.quality}`;\r\n    }\r\n    \r\n    if (isDenied) {\r\n      return 'Microphone access was denied. Please enable it in your browser settings.';\r\n    }\r\n    \r\n    if (!isSupported) {\r\n      return 'Microphone access is not supported in this browser.';\r\n    }\r\n    \r\n    if (error) {\r\n      return error;\r\n    }\r\n    \r\n    return 'Microphone access is required for voice chat.';\r\n  };\r\n\r\n  const getStatusColor = () => {\r\n    if (isGranted && isActive && quality.isWorking) {\r\n      return 'text-green-600';\r\n    }\r\n    \r\n    if (isDenied || error) {\r\n      return 'text-red-600';\r\n    }\r\n    \r\n    if (!isSupported) {\r\n      return 'text-yellow-600';\r\n    }\r\n    \r\n    return 'text-blue-600';\r\n  };\r\n\r\n  const getQualityIndicator = () => {\r\n    if (!isActive || !quality.isWorking) return null;\r\n    \r\n    const qualityColors = {\r\n      excellent: 'bg-green-500',\r\n      good: 'bg-blue-500',\r\n      poor: 'bg-yellow-500',\r\n      none: 'bg-red-500',\r\n    };\r\n    \r\n    return (\r\n      <div className=\"mt-4 flex items-center justify-center gap-2\">\r\n        <div className={`w-3 h-3 rounded-full ${qualityColors[quality.quality]} animate-pulse`}></div>\r\n        <span className=\"text-sm text-gray-400\">\r\n          Quality: {quality.quality} | Volume: {Math.round(quality.volumeLevel)}\r\n        </span>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderBrowserCompatibility = () => {\r\n    if (!showAdvanced) return null;\r\n    \r\n    return (\r\n      <div className=\"mt-6 p-4 bg-gray-800 rounded-lg\">\r\n        <h4 className=\"text-sm font-semibold text-white mb-3\">Browser Compatibility</h4>\r\n        <div className=\"grid grid-cols-2 gap-2 text-xs\">\r\n          <div className=\"flex items-center gap-2\">\r\n            <CheckCircleIcon className={`w-4 h-4 ${browserCompatibility.getUserMedia ? 'text-green-500' : 'text-red-500'}`} />\r\n            <span className=\"text-gray-300\">getUserMedia</span>\r\n          </div>\r\n          <div className=\"flex items-center gap-2\">\r\n            <CheckCircleIcon className={`w-4 h-4 ${browserCompatibility.permissionsAPI ? 'text-green-500' : 'text-red-500'}`} />\r\n            <span className=\"text-gray-300\">Permissions API</span>\r\n          </div>\r\n          <div className=\"flex items-center gap-2\">\r\n            <CheckCircleIcon className={`w-4 h-4 ${browserCompatibility.audioContext ? 'text-green-500' : 'text-red-500'}`} />\r\n            <span className=\"text-gray-300\">Audio Context</span>\r\n          </div>\r\n          <div className=\"flex items-center gap-2\">\r\n            <CheckCircleIcon className={`w-4 h-4 ${browserCompatibility.webRTC ? 'text-green-500' : 'text-red-500'}`} />\r\n            <span className=\"text-gray-300\">WebRTC</span>\r\n          </div>\r\n          <div className=\"flex items-center gap-2\">\r\n            <CheckCircleIcon className={`w-4 h-4 ${browserCompatibility.https ? 'text-green-500' : 'text-red-500'}`} />\r\n            <span className=\"text-gray-300\">HTTPS</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderDeviceSelection = () => {\r\n    if (!showAdvanced || devices.length === 0) return null;\r\n    \r\n    return (\r\n      <div className=\"mt-4\">\r\n        <label className=\"block text-sm font-medium text-white mb-2\">\r\n          Select Microphone Device\r\n        </label>\r\n        <select\r\n          value={selectedDevice}\r\n          onChange={(e) => setSelectedDevice(e.target.value)}\r\n          className=\"w-full bg-gray-700 text-white px-3 py-2 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n        >\r\n          <option value=\"\">Default Device</option>\r\n          {devices.map((device) => (\r\n            <option key={device.deviceId} value={device.deviceId}>\r\n              {device.label}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex items-center justify-center h-screen bg-gray-900\">\r\n      <div className=\"text-center max-w-md mx-auto p-6\">\r\n        {/* Header */}\r\n        <div className=\"mb-6\">\r\n          {getStatusIcon()}\r\n          <h2 className=\"text-2xl font-bold text-white mt-4 mb-2\">\r\n            Microphone Access Required\r\n          </h2>\r\n          <p className=\"text-gray-300 mb-4\">\r\n            {roomName} needs access to your microphone for voice chat.\r\n          </p>\r\n        </div>\r\n\r\n        {/* Status Message */}\r\n        <div className={`mb-6 p-4 rounded-lg bg-gray-800 ${getStatusColor()}`}>\r\n          <p className=\"text-sm font-medium\">{getStatusMessage()}</p>\r\n          {getQualityIndicator()}\r\n        </div>\r\n\r\n        {/* Error Display */}\r\n        {error && (\r\n          <div className=\"mb-6 p-4 bg-red-900 border border-red-700 rounded-lg\">\r\n            <div className=\"flex items-center gap-2 mb-2\">\r\n              <ExclamationTriangleIcon className=\"w-5 h-5 text-red-400\" />\r\n              <span className=\"text-red-400 font-medium\">Error</span>\r\n            </div>\r\n            <p className=\"text-red-300 text-sm\">{error}</p>\r\n          </div>\r\n        )}\r\n\r\n        {/* Action Buttons */}\r\n        <div className=\"space-y-3\">\r\n          {!isGranted && canRequest && !isRequesting && (\r\n            <button\r\n              onClick={handleRequestPermission}\r\n              className=\"w-full bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-lg font-medium transition-colors\"\r\n            >\r\n              Allow Microphone Access\r\n            </button>\r\n          )}\r\n\r\n          {isGranted && isActive && (\r\n            <button\r\n              onClick={handleTestQuality}\r\n              className=\"w-full bg-green-600 hover:bg-green-700 text-white px-6 py-3 rounded-lg font-medium transition-colors\"\r\n            >\r\n              Test Microphone Quality\r\n            </button>\r\n          )}\r\n\r\n          {(isDenied || error) && (\r\n            <button\r\n              onClick={handleRetry}\r\n              className=\"w-full bg-yellow-600 hover:bg-yellow-700 text-white px-6 py-3 rounded-lg font-medium transition-colors\"\r\n            >\r\n              Retry Microphone Access\r\n            </button>\r\n          )}\r\n\r\n          <button\r\n            onClick={() => setShowAdvanced(!showAdvanced)}\r\n            className=\"w-full bg-gray-600 hover:bg-gray-700 text-white px-6 py-3 rounded-lg font-medium transition-colors\"\r\n          >\r\n            {showAdvanced ? 'Hide' : 'Show'} Advanced Options\r\n          </button>\r\n        </div>\r\n\r\n        {/* Advanced Options */}\r\n        {showAdvanced && (\r\n          <div className=\"mt-6\">\r\n            {renderDeviceSelection()}\r\n            {renderBrowserCompatibility()}\r\n          </div>\r\n        )}\r\n\r\n        {/* Information */}\r\n        <div className=\"mt-6 text-sm text-gray-400 space-y-1\">\r\n          <p>• Your microphone will only be used for voice chat</p>\r\n          <p>• You can mute/unmute anytime during the conversation</p>\r\n          <p>• No audio is recorded or stored</p>\r\n          <p>• Microphone access can be revoked in browser settings</p>\r\n        </div>\r\n\r\n        {/* Cancel Button */}\r\n        <button\r\n          onClick={onCancel}\r\n          className=\"mt-6 text-gray-400 hover:text-white transition-colors\"\r\n        >\r\n          ← Back to Rooms\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useVerbfyTalk } from '@/hooks/useVerbfyTalk';\r\nimport MicrophonePermissionScreen from './MicrophonePermissionScreen';\r\nimport { ArrowLeftIcon, MicrophoneIcon } from '@heroicons/react/24/outline';\r\n\r\ninterface VoiceChatRoomProps {\r\n  roomId: string;\r\n  onLeave: () => void;\r\n}\r\n\r\nexport default function VoiceChatRoom({ roomId, onLeave }: VoiceChatRoomProps) {\r\n  const {\r\n    isConnected,\r\n    isLoading,\r\n    error,\r\n    currentRoom,\r\n    participants,\r\n    messages,\r\n    isMuted,\r\n    isSpeaking,\r\n    joinRoom,\r\n    leaveRoom,\r\n    sendMessage,\r\n    toggleMute,\r\n    setMicrophoneStream,\r\n    setError\r\n  } = useVerbfyTalk();\r\n\r\n  const [microphoneGranted, setMicrophoneGranted] = useState(false);\r\n  const [chatMessage, setChatMessage] = useState('');\r\n\r\n  // Handle microphone permission granted\r\n  const handleMicrophonePermissionGranted = (stream: MediaStream) => {\r\n    try {\r\n      console.log('✅ Microphone permission granted, setting stream...');\r\n      setMicrophoneStream(stream);\r\n      setMicrophoneGranted(true);\r\n      \r\n      // Join room after microphone permission is granted\r\n      if (roomId && isConnected) {\r\n        joinRoom(roomId).catch((error) => {\r\n          console.error('❌ Failed to join room:', error);\r\n          setError('Failed to join room. Please try again.');\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('❌ Error handling microphone permission:', error);\r\n      setError('Failed to initialize microphone. Please try again.');\r\n    }\r\n  };\r\n\r\n  // Handle microphone permission cancelled\r\n  const handleMicrophonePermissionCancelled = () => {\r\n    try {\r\n      console.log('❌ Microphone permission cancelled');\r\n      onLeave();\r\n    } catch (error) {\r\n      console.error('❌ Error handling microphone cancellation:', error);\r\n      onLeave(); // Still try to leave even if there's an error\r\n    }\r\n  };\r\n\r\n  // Join room when component mounts and microphone is granted\r\n  useEffect(() => {\r\n    if (roomId && isConnected && microphoneGranted) {\r\n      joinRoom(roomId).catch((error) => {\r\n        console.error('❌ Failed to join room in useEffect:', error);\r\n        setError('Failed to join room. Please try again.');\r\n      });\r\n    }\r\n  }, [roomId, isConnected, microphoneGranted, joinRoom]);\r\n\r\n  const handleLeave = () => {\r\n    leaveRoom();\r\n    onLeave();\r\n  };\r\n\r\n  const handleSendMessage = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (chatMessage.trim()) {\r\n      sendMessage(chatMessage);\r\n      setChatMessage('');\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-screen bg-gray-900\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\r\n          <p className=\"mt-4 text-white\">Joining room...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!microphoneGranted) {\r\n    return (\r\n      <MicrophonePermissionScreen\r\n        onPermissionGranted={handleMicrophonePermissionGranted}\r\n        onCancel={handleMicrophonePermissionCancelled}\r\n        roomName={currentRoom?.name || `Room ${roomId}`}\r\n      />\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-screen bg-gray-900\">\r\n        <div className=\"text-center\">\r\n          <p className=\"text-red-400 mb-4\">{error}</p>\r\n          <button\r\n            onClick={() => {\r\n              setError(null);\r\n              joinRoom(roomId);\r\n            }}\r\n            className=\"bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-lg mr-4\"\r\n          >\r\n            Retry\r\n          </button>\r\n          <button\r\n            onClick={handleLeave}\r\n            className=\"bg-gray-600 hover:bg-gray-700 text-white px-6 py-3 rounded-lg\"\r\n          >\r\n            Leave Room\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"h-screen flex flex-col bg-gray-900\">\r\n      {/* Header */}\r\n      <div className=\"bg-gray-800 p-4 flex items-center justify-between\">\r\n        <div className=\"flex items-center gap-4\">\r\n          <button\r\n            onClick={handleLeave}\r\n            className=\"text-gray-300 hover:text-white p-2 rounded-lg hover:bg-gray-700\"\r\n          >\r\n            <ArrowLeftIcon className=\"w-6 h-6\" />\r\n          </button>\r\n          <div>\r\n            <h1 className=\"text-xl font-bold text-white\">\r\n              {currentRoom?.name || `Room ${roomId}`}\r\n            </h1>\r\n            <p className=\"text-gray-400 text-sm\">\r\n              {participants.length} participant{participants.length !== 1 ? 's' : ''}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"flex items-center gap-4\">\r\n          <button\r\n            onClick={toggleMute}\r\n            className={`p-3 rounded-full transition-colors relative ${\r\n              isMuted \r\n                ? 'bg-red-600 hover:bg-red-700 text-white' \r\n                : isSpeaking\r\n                ? 'bg-green-600 hover:bg-green-700 text-white animate-pulse'\r\n                : 'bg-green-600 hover:bg-green-700 text-white'\r\n            }`}\r\n          >\r\n            <MicrophoneIcon className={`w-6 h-6 ${isMuted ? 'opacity-50' : ''}`} />\r\n            {isSpeaking && !isMuted && (\r\n              <div className=\"absolute -top-1 -right-1 w-3 h-3 bg-green-400 rounded-full animate-pulse\"></div>\r\n            )}\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Main Content */}\r\n      <div className=\"flex-1 flex\">\r\n        {/* Participants */}\r\n        <div className=\"w-1/3 bg-gray-800 p-4\">\r\n          <h2 className=\"text-lg font-semibold text-white mb-4\">Participants</h2>\r\n          <div className=\"space-y-2\">\r\n            {participants.map((participant) => (\r\n              <div\r\n                key={participant.id}\r\n                className={`flex items-center gap-3 p-3 rounded-lg transition-colors ${\r\n                  participant.isSpeaking \r\n                    ? 'bg-green-700 border border-green-500' \r\n                    : 'bg-gray-700'\r\n                }`}\r\n              >\r\n                <div className={`w-3 h-3 rounded-full transition-colors ${\r\n                  participant.isSpeaking ? 'bg-green-500 animate-pulse' : 'bg-gray-500'\r\n                }`}></div>\r\n                <span className=\"text-white font-medium\">{participant.name}</span>\r\n                {participant.isMuted && (\r\n                  <MicrophoneIcon className=\"w-4 h-4 text-red-400 opacity-50\" />\r\n                )}\r\n                {participant.isSpeaking && (\r\n                  <div className=\"ml-auto\">\r\n                    <div className=\"w-2 h-2 bg-green-400 rounded-full animate-pulse\"></div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Chat */}\r\n        <div className=\"flex-1 flex flex-col\">\r\n          {/* Messages */}\r\n          <div className=\"flex-1 p-4 overflow-y-auto\">\r\n            <div className=\"space-y-4\">\r\n              {messages.map((message) => (\r\n                <div key={message.id} className=\"flex gap-3\">\r\n                  <div className=\"w-8 h-8 bg-blue-600 rounded-full flex items-center justify-center text-white text-sm font-semibold\">\r\n                    {message.userName.charAt(0).toUpperCase()}\r\n                  </div>\r\n                  <div className=\"flex-1\">\r\n                    <div className=\"flex items-center gap-2 mb-1\">\r\n                      <span className=\"text-white font-semibold\">{message.userName}</span>\r\n                      <span className=\"text-gray-400 text-sm\">\r\n                        {new Date(message.timestamp).toLocaleTimeString()}\r\n                      </span>\r\n                    </div>\r\n                    <p className=\"text-gray-300\">{message.message}</p>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Message Input */}\r\n          <div className=\"p-4 border-t border-gray-700\">\r\n            <form onSubmit={handleSendMessage} className=\"flex gap-3\">\r\n              <input\r\n                type=\"text\"\r\n                value={chatMessage}\r\n                onChange={(e) => setChatMessage(e.target.value)}\r\n                placeholder=\"Type a message...\"\r\n                className=\"flex-1 bg-gray-700 text-white px-4 py-2 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-600\"\r\n              />\r\n              <button\r\n                type=\"submit\"\r\n                disabled={!chatMessage.trim()}\r\n                className=\"bg-blue-600 hover:bg-blue-700 disabled:bg-gray-600 disabled:cursor-not-allowed text-white px-6 py-2 rounded-lg transition-colors\"\r\n              >\r\n                Send\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport Head from 'next/head';\r\nimport DashboardLayout from '@/components/layout/DashboardLayout';\r\nimport VoiceChatRoom from '@/components/voiceChat/VoiceChatRoom';\r\n\r\nexport default function VerbfyTalkRoom() {\r\n  const router = useRouter();\r\n  const { roomId } = router.query as { roomId?: string };\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isValidRoomId, setIsValidRoomId] = useState(false);\r\n\r\n  // Validate roomId when router is ready\r\n  useEffect(() => {\r\n    if (router.isReady) {\r\n      if (roomId && typeof roomId === 'string' && roomId.trim().length > 0) {\r\n        // Basic validation: check if roomId looks like a valid MongoDB ObjectId\r\n        const isValidFormat = /^[0-9a-fA-F]{24}$/.test(roomId);\r\n        setIsValidRoomId(isValidFormat);\r\n      } else {\r\n        setIsValidRoomId(false);\r\n      }\r\n      setIsLoading(false);\r\n    }\r\n  }, [router.isReady, roomId]);\r\n\r\n  const handleLeaveRoom = () => {\r\n    router.push('/verbfy-talk');\r\n  };\r\n\r\n  // Show loading state while router is initializing\r\n  if (isLoading) {\r\n    return (\r\n      <DashboardLayout title=\"VerbfyTalk\">\r\n        <div className=\"flex items-center justify-center min-h-screen\">\r\n          <div className=\"text-center\">\r\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\r\n            <p className=\"text-gray-600\">Loading room...</p>\r\n          </div>\r\n        </div>\r\n      </DashboardLayout>\r\n    );\r\n  }\r\n\r\n  // Show error if roomId is invalid or missing\r\n  if (!roomId || !isValidRoomId) {\r\n    return (\r\n      <DashboardLayout title=\"VerbfyTalk\">\r\n        <div className=\"flex items-center justify-center min-h-screen\">\r\n          <div className=\"text-center\">\r\n            <h1 className=\"text-2xl font-bold text-gray-900 mb-4\">Room Not Found</h1>\r\n            <p className=\"text-gray-600 mb-6\">\r\n              {!roomId \r\n                ? 'No room ID provided.' \r\n                : 'The room ID format is invalid or the room does not exist.'\r\n              }\r\n            </p>\r\n            <button\r\n              onClick={() => router.push('/verbfy-talk')}\r\n              className=\"bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-lg font-medium transition-colors\"\r\n            >\r\n              Back to Rooms\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </DashboardLayout>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>VerbfyTalk Room - {roomId}</title>\r\n        <meta name=\"description\" content=\"Join the conversation in VerbfyTalk\" />\r\n      </Head>\r\n      \r\n      <DashboardLayout title={`VerbfyTalk Room: ${roomId}`}>\r\n        <ErrorBoundary fallback={<RoomErrorFallback onLeave={handleLeaveRoom} />}>\r\n          <VoiceChatRoom roomId={roomId} onLeave={handleLeaveRoom} />\r\n        </ErrorBoundary>\r\n      </DashboardLayout>\r\n    </>\r\n  );\r\n}\r\n\r\n// Error Boundary Component\r\nclass ErrorBoundary extends React.Component<\r\n  { children: React.ReactNode; fallback: React.ReactNode },\r\n  { hasError: boolean; error?: Error }\r\n> {\r\n  constructor(props: { children: React.ReactNode; fallback: React.ReactNode }) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(error: Error) {\r\n    return { hasError: true, error };\r\n  }\r\n\r\n  componentDidCatch(error: Error, errorInfo: React.ErrorInfo) {\r\n    console.error('VerbfyTalk Room Error:', error, errorInfo);\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return this.props.fallback;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\n// Error Fallback Component\r\nfunction RoomErrorFallback({ onLeave }: { onLeave: () => void }) {\r\n  return (\r\n    <div className=\"flex items-center justify-center min-h-screen\">\r\n      <div className=\"text-center\">\r\n        <h1 className=\"text-2xl font-bold text-red-600 mb-4\">Room Error</h1>\r\n        <p className=\"text-gray-600 mb-6\">\r\n          Something went wrong while loading the room. Please try again.\r\n        </p>\r\n        <button\r\n          onClick={onLeave}\r\n          className=\"bg-blue-600 hover:bg-blue-700 text-white px-6 py-3 rounded-lg font-medium transition-colors\"\r\n        >\r\n          Back to Rooms\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Static generation paths - return empty array to disable static generation\r\nexport async function getStaticPaths() {\r\n  // Since rooms are dynamic and user-specific, we don't pre-generate any paths\r\n  // This prevents build-time errors and allows dynamic routing\r\n  return {\r\n    paths: [],\r\n    fallback: 'blocking' // This allows dynamic routes to be generated on-demand\r\n  };\r\n}\r\n\r\n// Static props - return empty props to prevent build-time data fetching\r\nexport async function getStaticProps() {\r\n  // No static props needed for this dynamic page\r\n  return {\r\n    props: {},\r\n    revalidate: 60 // Revalidate every 60 seconds if using ISR\r\n  };\r\n}\r\n"],"names":["window","__NEXT_P","push","__webpack_require__","useVerbfyTalk","user","useAuth","token","tokenStorage","getToken","isConnected","setIsConnected","useState","currentRoom","setCurrentRoom","participants","setParticipants","messages","setMessages","isLoading","setIsLoading","error","setError","isMuted","setIsMuted","isSpeaking","socketRef","useRef","localStreamRef","peerConnectionsRef","Map","WEBRTC_CONFIG","iceServers","urls","useEffect","newSocket","io","concat","process","env","NEXT_PUBLIC_BACKEND_URL","auth","transports","upgrade","rememberUpgrade","timeout","forceNew","reconnection","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","autoConnect","withCredentials","current","on","console","log","reason","room","name","map","p","id","userId","_id","isSpeaker","setTimeout","length","forEach","participant","createPeerConnection","data","message","prev","participantId","filter","peerConnection","get","close","delete","handleOffer","from","offer","handleAnswer","answer","handleICECandidate","candidate","disconnect","joinRoom","useCallback","roomId","password","connected","response","fetch","method","headers","credentials","body","JSON","stringify","ok","errorData","json","result","emit","Error","setMicrophoneStream","stream","leaveRoom","getTracks","track","stop","pc","clear","sendMessage","trim","toggleMute","audioTrack","getAudioTracks","enabled","RTCPeerConnection","set","addTrack","onicecandidate","event","to","ontrack","createOffer","setLocalDescription","setRemoteDescription","createAnswer","remoteDescription","addIceCandidate","MicrophonePermissionManager","getInstance","instance","initializePermissionState","permissionState","isSupported","navigator","mediaDevices","getUserMedia","checkPermissionStatus","canRequest","permission","permissions","query","isGranted","state","isDenied","lastChecked","Date","now","addEventListener","warn","getMicrophoneDevices","devices","enumerateDevices","device","kind","deviceId","label","slice","groupId","requestMicrophonePermission","constraints","success","defaultConstraints","audio","echoCancellation","noiseSuppression","autoGainControl","sampleRate","channelCount","latency","video","finalConstraints","isPrompted","currentStream","undefined","errorMessage","getDetailedErrorMessage","errorMessages","NotAllowedError","NotFoundError","NotSupportedError","NotReadableError","AbortError","SecurityError","InvalidStateError","TypeError","UnknownError","testMicrophoneQuality","audioContext","AudioContext","webkitAudioContext","source","createMediaStreamSource","analyser","createAnalyser","dataArray","Uint8Array","frequencyBinCount","connect","fftSize","Promise","samples","totalVolume","hasAudioSamples","testInterval","setInterval","getByteFrequencyData","average","reduce","sum","value","quality","clearInterval","avgVolume","audioRatio","resolve","isWorking","hasAudio","volumeLevel","stopMicrophone","getPermissionState","isMicrophoneActive","some","readyState","getBrowserCompatibility","permissionsAPI","webRTC","webkitRTCPeerConnection","https","location","protocol","hostname","resetPermissionState","constructor","microphonePermissionManager","useMicrophonePermission","setPermissionState","setDevices","currentDevice","setCurrentDevice","setCurrentStream","isActive","setIsActive","setQuality","qualityTestIntervalRef","browserCompatibility","updatePermissionState","newState","refreshDevices","deviceList","find","d","getSettings","requestPermission","startQualityMonitoring","testQuality","qualityResult","clearError","interval","handleTrackEnd","handleTrackMute","handleTrackUnmute","removeEventListener","MicrophonePermissionScreen","param","onPermissionGranted","onCancel","roomName","isRequesting","setIsRequesting","showAdvanced","setShowAdvanced","selectedDevice","setSelectedDevice","handleRequestPermission","exact","handleRetry","handleTestQuality","jsx_runtime","jsx","div","className","jsxs","ArrowPathIcon","CheckCircleIcon","XCircleIcon","MicrophoneIcon","ExclamationTriangleIcon","h2","qualityColors","excellent","good","poor","none","span","Math","round","button","onClick","select","onChange","e","target","option","h4","VoiceChatRoom","onLeave","microphoneGranted","setMicrophoneGranted","chatMessage","setChatMessage","catch","handleLeave","ArrowLeftIcon","h1","userName","charAt","toUpperCase","timestamp","toLocaleTimeString","form","onSubmit","preventDefault","input","type","placeholder","disabled","VerbfyTalkRoom","router","useRouter","isValidRoomId","setIsValidRoomId","isReady","test","handleLeaveRoom","DashboardLayout","title","Fragment","Head","meta","content","ErrorBoundary","fallback","RoomErrorFallback","React","getDerivedStateFromError","hasError","componentDidCatch","errorInfo","render","props","children"],"sourceRoot":""}