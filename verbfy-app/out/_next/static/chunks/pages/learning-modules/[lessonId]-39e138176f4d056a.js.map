{"version":3,"file":"static/chunks/pages/learning-modules/[lessonId]-39e138176f4d056a.js","mappings":"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","sources":["webpack://_N_E/?1abf","webpack://_N_E/./src/features/learningModules/view/StudentLearningInterface.tsx","webpack://_N_E/./pages/learning-modules/[lessonId].tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/learning-modules/[lessonId]\",\n      function () {\n        return require(\"private-next-pages/learning-modules/[lessonId].tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/learning-modules/[lessonId]\"])\n      });\n    }\n  ","import React, { useState, useEffect } from 'react';\r\nimport { useRouter } from 'next/router';\r\nimport { VerbfyLesson, LessonAttempt } from '@/types/verbfyLessons';\r\nimport { verbfyLessonsAPI } from '@/lib/api';\r\nimport { useAuthContext } from '@/context/AuthContext';\r\n\r\ninterface StudentLearningInterfaceProps {\r\n  lessonId: string;\r\n  onComplete?: (result: any) => void;\r\n}\r\n\r\nexport const StudentLearningInterface: React.FC<StudentLearningInterfaceProps> = ({\r\n  lessonId,\r\n  onComplete\r\n}) => {\r\n  const router = useRouter();\r\n  const { user } = useAuthContext();\r\n  const [lesson, setLesson] = useState<VerbfyLesson | null>(null);\r\n  const [currentStep, setCurrentStep] = useState(0);\r\n  const [currentExercise, setCurrentExercise] = useState(0);\r\n  const [answers, setAnswers] = useState<{[key: string]: any}>({});\r\n  const [timeSpent, setTimeSpent] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [attemptId, setAttemptId] = useState<string | null>(null);\r\n  const [showInstructions, setShowInstructions] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (lessonId) {\r\n      fetchLesson();\r\n    }\r\n  }, [lessonId]);\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setTimeSpent(prev => prev + 1);\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  const fetchLesson = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await (verbfyLessonsAPI as any).getLesson?.(lessonId);\r\n      if (response) {\r\n        // Support both API shapes used in tests\r\n        const normalized: VerbfyLesson = (response as any).lesson ? {\r\n          _id: (response as any).lesson.id || lessonId,\r\n          title: (response as any).lesson.title,\r\n          description: (response as any).lesson.description || '',\r\n          lessonType: (response as any).lesson.type || 'VerbfyGrammar',\r\n          cefrLevel: (response as any).lesson.cefrLevel || 'A1',\r\n          difficulty: (response as any).lesson.difficulty || 'Beginner',\r\n          category: '',\r\n          estimatedDuration: (response as any).lesson.estimatedDuration || 0,\r\n          content: {\r\n            instructions: (response as any).lesson.instructions || '',\r\n            materials: (response as any).lesson.materials || [],\r\n            exercises: (response as any).lesson.exercises || [],\r\n          },\r\n          learningObjectives: [],\r\n          tags: [],\r\n          isActive: true,\r\n          isPremium: false,\r\n          createdBy: { _id: '', name: '' },\r\n          averageRating: 0,\r\n          totalRatings: 0,\r\n          completionRate: 0,\r\n          averageCompletionTime: 0,\r\n          createdAt: new Date().toISOString(),\r\n          updatedAt: new Date().toISOString(),\r\n        } : (response as any);\r\n        setLesson(normalized);\r\n      }\r\n      const startResponse = await (verbfyLessonsAPI as any).startLesson?.(lessonId);\r\n      setAttemptId(startResponse?.attemptId || lessonId);\r\n    } catch (error) {\r\n      console.error('Error fetching lesson:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleAnswer = (answer: any) => {\r\n    const key = `${currentExercise}`;\r\n    setAnswers(prev => ({\r\n      ...prev,\r\n      [key]: answer\r\n    }));\r\n  };\r\n\r\n  const handleNext = () => {\r\n    if (currentExercise < (lesson?.content?.exercises?.length || 0) - 1) {\r\n      setCurrentExercise(currentExercise + 1);\r\n    } else {\r\n      handleSubmit();\r\n    }\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    if (currentExercise > 0) {\r\n      setCurrentExercise(currentExercise - 1);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!attemptId || !lesson) return;\r\n\r\n    try {\r\n      setSubmitting(true);\r\n      const formattedAnswers = Object.entries(answers).map(([key, answer]) => ({\r\n        questionIndex: parseInt(key),\r\n        studentAnswer: answer,\r\n        timeSpent: 0\r\n      }));\r\n      const result = await (verbfyLessonsAPI as any).submitLesson?.(attemptId, {\r\n        answers: formattedAnswers,\r\n        timeSpent\r\n      });\r\n      if (onComplete) {\r\n        onComplete(result);\r\n      } else {\r\n        router.push(`/verbfy-lessons/${lessonId}/results`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error submitting lesson:', error);\r\n    } finally {\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const formatTime = (seconds: number) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const secs = seconds % 60;\r\n    return `${minutes}:${secs.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  const getProgress = () => {\r\n    if (!lesson?.content?.exercises) return 0;\r\n    const totalExercises = lesson.content.exercises.length;\r\n    const answeredExercises = Object.keys(answers).length;\r\n    return (answeredExercises / totalExercises) * 100;\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\r\n          <p className=\"text-gray-600\">Loading lesson...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!lesson) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-screen\">\r\n        <div className=\"text-center\">\r\n          <p className=\"text-red-600\">Lesson not found</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 py-8\">\r\n      <div className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        {/* Header */}\r\n        <div className=\"bg-white rounded-lg shadow-md p-6 mb-6\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <h1 className=\"text-xl font-semibold text-gray-900\">{lesson.title}</h1>\r\n              <p className=\"text-gray-600 mt-1\">Follow the instructions and complete the exercises</p>\r\n            </div>\r\n            <div className=\"text-sm text-gray-500\">\r\n              <span>Time spent: {formatTime(timeSpent)}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Content */}\r\n        <div className=\"bg-white rounded-lg shadow-md p-6\">\r\n          {showInstructions ? (\r\n            <div>\r\n              <h2 className=\"text-lg font-semibold text-gray-900 mb-2\">Instructions</h2>\r\n              <p className=\"text-gray-700 mb-4\">{lesson.content?.instructions || 'Read the instructions carefully.'}</p>\r\n              <button\r\n                onClick={() => setShowInstructions(false)}\r\n                className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\r\n              >\r\n                Start Lesson\r\n              </button>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <h2 className=\"text-2xl font-bold text-gray-900 mb-2\">{lesson.title}</h2>\r\n              {/* Exercise content would go here */}\r\n              <div className=\"mt-6 flex justify-between\">\r\n                <button\r\n                  onClick={handlePrevious}\r\n                  disabled={currentExercise === 0}\r\n                  className=\"px-4 py-2 bg-gray-200 rounded-md hover:bg-gray-300 disabled:opacity-50\"\r\n                >\r\n                  Previous\r\n                </button>\r\n                <button\r\n                  onClick={handleNext}\r\n                  className=\"px-4 py-2 bg-green-600 text-white rounded-md hover:bg-green-700\"\r\n                >\r\n                  {currentExercise < (lesson.content?.exercises?.length || 0) - 1 ? 'Next' : 'Submit'}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}; ","import React from 'react';\r\nimport Head from 'next/head';\r\nimport { StudentLearningInterface } from '../../src/features/learningModules/view/StudentLearningInterface';\r\nimport { useAuthContext } from '@/context/AuthContext';\r\nimport { useRouter } from 'next/router';\r\nimport { useEffect } from 'react';\r\n\r\nexport default function TakeLessonPage() {\r\n  const { user, loading } = useAuthContext();\r\n  const router = useRouter();\r\n  const { lessonId } = router.query;\r\n\r\n  useEffect(() => {\r\n    if (!loading && !user) {\r\n      router.push('/login');\r\n    }\r\n  }, [user, loading, router]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\r\n        <div className=\"text-center\">\r\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto mb-4\"></div>\r\n          <p className=\"text-gray-600\">Loading...</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!user || typeof lessonId !== 'string') {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>Take Lesson - Verbfy</title>\r\n        <meta name=\"description\" content=\"Start your Verbfy learning lesson\" />\r\n      </Head>\r\n\r\n      <StudentLearningInterface\r\n        lessonId={lessonId}\r\n        onComplete={(result: any) => {\r\n          console.log('Lesson completed:', result);\r\n          // The interface will handle navigation to results\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n} "],"names":["window","__NEXT_P","push","__webpack_require__","StudentLearningInterface","lesson","lessonId","onComplete","param","router","useRouter","user","useAuthContext","setLesson","useState","currentStep","setCurrentStep","currentExercise","setCurrentExercise","answers","setAnswers","timeSpent","setTimeSpent","loading","setLoading","submitting","setSubmitting","attemptId","setAttemptId","showInstructions","setShowInstructions","useEffect","fetchLesson","timer","setInterval","prev","clearInterval","_verbfyLessonsAPI_getLesson","_verbfyLessonsAPI_startLesson","response","api","J0","getLesson","call","verbfyLessonsAPI","normalized","_id","id","title","description","lessonType","type","cefrLevel","difficulty","category","estimatedDuration","content","instructions","materials","exercises","learningObjectives","tags","isActive","isPremium","createdBy","name","averageRating","totalRatings","completionRate","averageCompletionTime","createdAt","Date","toISOString","updatedAt","startResponse","startLesson","error","console","handleSubmit","_verbfyLessonsAPI_submitLesson","formattedAnswers","Object","entries","map","key","answer","questionIndex","parseInt","studentAnswer","result","submitLesson","concat","jsx_runtime","jsx","div","className","jsxs","p","h1","span","secs","Math","floor","seconds","toString","padStart","h2","button","onClick","disabled","length","TakeLessonPage","query","Fragment","Head","meta","log"],"sourceRoot":""}