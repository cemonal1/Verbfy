{"version":3,"file":"static/chunks/pages/admin-b6be38590d4ad942.js","mappings":"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","sources":["webpack://_N_E/?a37b","webpack://_N_E/./src/components/admin/AdminSidebar.tsx","webpack://_N_E/./src/types/admin.ts","webpack://_N_E/./pages/admin/index.tsx","webpack://_N_E/./src/hooks/useAuth.ts"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/admin\",\n      function () {\n        return require(\"private-next-pages/admin/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/admin\"])\n      });\n    }\n  ","import React from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport { \n  HomeIcon, \n  UsersIcon, \n  DocumentTextIcon, \n  CreditCardIcon, \n  ClockIcon,\n  ChartBarIcon\n} from '@heroicons/react/24/outline';\n\ninterface AdminSidebarProps {\n  className?: string;\n}\n\nconst AdminSidebar: React.FC<AdminSidebarProps> = ({ className = '' }) => {\n  const router = useRouter();\n  const currentPath = router.pathname;\n\n  const navigation = [\n    {\n      name: 'Dashboard',\n      href: '/admin',\n      icon: HomeIcon,\n      current: currentPath === '/admin'\n    },\n    {\n      name: 'Users',\n      href: '/admin/users',\n      icon: UsersIcon,\n      current: currentPath === '/admin/users'\n    },\n    {\n      name: 'Materials',\n      href: '/admin/materials',\n      icon: DocumentTextIcon,\n      current: currentPath === '/admin/materials'\n    },\n    // Payments section hidden (region unsupported)\n    {\n      name: 'Logs',\n      href: '/admin/logs',\n      icon: ClockIcon,\n      current: currentPath === '/admin/logs'\n    },\n    {\n      name: 'Analytics',\n      href: '/analytics',\n      icon: ChartBarIcon,\n      current: currentPath === '/analytics'\n    }\n  ];\n\n  return (\n    <div className={`bg-white shadow-sm border-r border-gray-200 ${className}`}>\n      <div className=\"p-4\">\n        <h2 className=\"text-lg font-semibold text-gray-900 mb-4\">Admin Panel</h2>\n        <nav className=\"space-y-1\">\n          {navigation.map((item) => {\n            const Icon = item.icon;\n            return (\n              <Link\n                key={item.name}\n                href={item.href}\n                className={`\n                  group flex items-center px-3 py-2 text-sm font-medium rounded-md transition-colors\n                  ${item.current\n                    ? 'bg-blue-50 text-blue-700 border-r-2 border-blue-700'\n                    : 'text-gray-600 hover:bg-gray-50 hover:text-gray-900'\n                  }\n                `}\n              >\n                <Icon\n                  className={`\n                    mr-3 h-5 w-5 flex-shrink-0\n                    ${item.current\n                      ? 'text-blue-700'\n                      : 'text-gray-400 group-hover:text-gray-500'\n                    }\n                  `}\n                  aria-hidden=\"true\"\n                />\n                {item.name}\n              </Link>\n            );\n          })}\n        </nav>\n      </div>\n      \n      {/* Admin Info */}\n      <div className=\"absolute bottom-0 left-0 right-0 p-4 border-t border-gray-200\">\n        <div className=\"flex items-center\">\n          <div className=\"flex-shrink-0\">\n            <div className=\"h-8 w-8 rounded-full bg-blue-600 flex items-center justify-center\">\n              <span className=\"text-sm font-medium text-white\">A</span>\n            </div>\n          </div>\n          <div className=\"ml-3\">\n            <p className=\"text-sm font-medium text-gray-700\">Admin</p>\n            <p className=\"text-xs text-gray-500\">Platform Administrator</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AdminSidebar; ","// Admin User Management Types\nexport interface AdminUser {\n  _id: string;\n  name: string;\n  email: string;\n  role: 'student' | 'teacher' | 'admin';\n  status: 'active' | 'inactive' | 'suspended';\n  createdAt: string;\n  lastLoginAt?: string;\n  profilePicture?: string;\n}\n\nexport interface UserFilters {\n  role?: 'student' | 'teacher' | 'admin';\n  status?: 'active' | 'inactive' | 'suspended';\n  search?: string;\n}\n\n// Admin Material Moderation Types\nexport interface AdminMaterial {\n  _id: string;\n  title: string;\n  description?: string;\n  type: 'pdf' | 'image' | 'video' | 'audio' | 'document';\n  status: 'pending' | 'approved' | 'rejected';\n  uploaderId: {\n    _id: string;\n    name: string;\n    email: string;\n  };\n  createdAt: string;\n  moderatedAt?: string;\n  moderatedBy?: string;\n  moderationNote?: string;\n  fileSize: number;\n  downloadCount: number;\n}\n\nexport interface MaterialFilters {\n  status?: 'pending' | 'approved' | 'rejected';\n  type?: 'pdf' | 'image' | 'video' | 'audio' | 'document';\n  search?: string;\n}\n\n// Admin Payment Management Types\nexport interface AdminPayment {\n  _id: string;\n  teacher: {\n    _id: string;\n    name: string;\n    email: string;\n  };\n  student: {\n    _id: string;\n    name: string;\n    email: string;\n  };\n  status: 'pending' | 'completed' | 'cancelled' | 'refunded';\n  price: number;\n  isPaid: boolean;\n  createdAt: string;\n  refundedAt?: string;\n  refundedBy?: string;\n  refundReason?: string;\n  lessonType?: string;\n  lessonLevel?: string;\n}\n\nexport interface PaymentFilters {\n  userId?: string;\n  status?: 'pending' | 'completed' | 'cancelled' | 'refunded';\n  startDate?: string;\n  endDate?: string;\n}\n\n// Admin Logs Types\nexport interface AdminLog {\n  _id: string;\n  type: 'user_activity' | 'material_upload' | 'lesson_booking' | 'payment' | 'system';\n  action: string;\n  user: string;\n  details: string;\n  createdAt: string;\n  email?: string;\n}\n\nexport interface LogFilters {\n  type?: 'user_activity' | 'material_upload' | 'lesson_booking' | 'payment' | 'system';\n  startDate?: string;\n  endDate?: string;\n}\n\n// Admin Analytics Types\nexport interface AdminOverview {\n  stats: {\n    totalUsers: number;\n    totalTeachers: number;\n    totalStudents: number;\n    totalMaterials: number;\n    totalReservations: number;\n    totalRevenue: number;\n    userGrowth: number;\n    revenueGrowth: number;\n  };\n  recent: {\n    users: AdminUser[];\n    materials: AdminMaterial[];\n    payments: AdminPayment[];\n  };\n}\n\n// API Response Types\nexport interface AdminUsersResponse {\n  success: boolean;\n  data: {\n    users: AdminUser[];\n    pagination: {\n      page: number;\n      limit: number;\n      total: number;\n      pages: number;\n    };\n  };\n  message: string;\n}\n\nexport interface AdminMaterialsResponse {\n  success: boolean;\n  data: {\n    materials: AdminMaterial[];\n    pagination: {\n      page: number;\n      limit: number;\n      total: number;\n      pages: number;\n    };\n  };\n  message: string;\n}\n\nexport interface AdminPaymentsResponse {\n  success: boolean;\n  data: {\n    payments: AdminPayment[];\n    pagination: {\n      page: number;\n      limit: number;\n      total: number;\n      pages: number;\n    };\n  };\n  message: string;\n}\n\nexport interface AdminLogsResponse {\n  success: boolean;\n  data: {\n    logs: AdminLog[];\n    pagination: {\n      page: number;\n      limit: number;\n      total: number;\n      pages: number;\n    };\n  };\n  message: string;\n}\n\nexport interface AdminOverviewResponse {\n  success: boolean;\n  data: AdminOverview;\n  message: string;\n}\n\n// Action Types\nexport interface UpdateUserRoleData {\n  role: 'student' | 'teacher' | 'admin';\n}\n\nexport interface UpdateUserStatusData {\n  status: 'active' | 'inactive' | 'suspended';\n}\n\nexport interface ApproveMaterialData {\n  approved: boolean;\n  reason?: string;\n}\n\nexport interface RefundPaymentData {\n  reason?: string;\n}\n\n// Utility Functions\nexport const formatCurrency = (amount: number): string => {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD'\n  }).format(amount);\n};\n\nexport const formatDate = (date: string): string => {\n  return new Date(date).toLocaleDateString('en-US', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n};\n\nexport const formatFileSize = (bytes: number): string => {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];\n};\n\nexport const getStatusColor = (status: string): string => {\n  switch (status) {\n    case 'active':\n    case 'approved':\n    case 'completed':\n      return 'text-green-600 bg-green-100';\n    case 'pending':\n      return 'text-yellow-600 bg-yellow-100';\n    case 'inactive':\n    case 'rejected':\n    case 'cancelled':\n      return 'text-red-600 bg-red-100';\n    case 'suspended':\n    case 'refunded':\n      return 'text-gray-600 bg-gray-100';\n    default:\n      return 'text-gray-600 bg-gray-100';\n  }\n};\n\nexport const getRoleColor = (role: string): string => {\n  switch (role) {\n    case 'admin':\n      return 'text-purple-600 bg-purple-100';\n    case 'teacher':\n      return 'text-blue-600 bg-blue-100';\n    case 'student':\n      return 'text-green-600 bg-green-100';\n    default:\n      return 'text-gray-600 bg-gray-100';\n  }\n}; ","import React, { useEffect } from 'react';\nimport Link from 'next/link';\nimport { useRoleGuard } from '../../src/hooks/useAuth';\nimport { useAdmin } from '../../src/context/AdminContext';\nimport AdminSidebar from '../../src/components/admin/AdminSidebar';\nimport { \n  UsersIcon, \n  AcademicCapIcon, \n  UserGroupIcon, \n  DocumentTextIcon,\n  CurrencyDollarIcon,\n  ClockIcon,\n  ArrowTrendingUpIcon,\n  ArrowTrendingDownIcon\n} from '@heroicons/react/24/outline';\nimport { formatCurrency, formatDate } from '../../src/types/admin';\n\nexport default function AdminDashboard() {\n  useRoleGuard(['admin']);\n\n  const { state, loadOverview } = useAdmin();\n  const { overview, overviewLoading } = state;\n\n  useEffect(() => {\n    loadOverview();\n  }, [loadOverview]);\n\n  const stats = [\n    {\n      name: 'Total Users',\n      value: overview?.stats.totalUsers || 0,\n      icon: UsersIcon,\n      change: overview?.stats.userGrowth || 0,\n      changeType: 'percentage'\n    },\n    {\n      name: 'Teachers',\n      value: overview?.stats.totalTeachers || 0,\n      icon: AcademicCapIcon,\n      change: 0,\n      changeType: 'number'\n    },\n    {\n      name: 'Students',\n      value: overview?.stats.totalStudents || 0,\n      icon: UserGroupIcon,\n      change: 0,\n      changeType: 'number'\n    },\n    {\n      name: 'Materials',\n      value: overview?.stats.totalMaterials || 0,\n      icon: DocumentTextIcon,\n      change: 0,\n      changeType: 'number'\n    },\n    {\n      name: 'Total Revenue',\n      value: formatCurrency(overview?.stats.totalRevenue || 0),\n      icon: CurrencyDollarIcon,\n      change: overview?.stats.revenueGrowth || 0,\n      changeType: 'percentage'\n    },\n    {\n      name: 'Lessons',\n      value: overview?.stats.totalReservations || 0,\n      icon: ClockIcon,\n      change: 0,\n      changeType: 'number'\n    }\n  ];\n\n  if (overviewLoading) {\n    return (\n      <div className=\"flex h-screen bg-gray-50\">\n        <AdminSidebar className=\"w-64\" />\n        <div className=\"flex-1 p-8\">\n          <div className=\"animate-pulse\">\n            <div className=\"h-8 bg-gray-200 rounded w-1/4 mb-8\"></div>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8\">\n              {[...Array(6)].map((_, i) => (\n                <div key={i} className=\"bg-white p-6 rounded-lg shadow\">\n                  <div className=\"h-4 bg-gray-200 rounded w-1/2 mb-4\"></div>\n                  <div className=\"h-8 bg-gray-200 rounded w-1/3\"></div>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"flex h-screen bg-gray-50\">\n      <AdminSidebar className=\"w-64\" />\n      \n      <div className=\"flex-1 overflow-auto\">\n        <div className=\"p-8\">\n          {/* Header */}\n          <div className=\"mb-8\">\n            <h1 className=\"text-3xl font-bold text-gray-900\">Admin Dashboard</h1>\n            <p className=\"text-gray-600 mt-2\">Platform overview and management</p>\n          </div>\n\n          {/* Stats Grid */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8\">\n            {stats.map((stat) => {\n              const Icon = stat.icon;\n              const isPositive = stat.change >= 0;\n              \n              return (\n                <div key={stat.name} className=\"bg-white p-6 rounded-lg shadow-sm border border-gray-200\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-sm font-medium text-gray-600\">{stat.name}</p>\n                      <p className=\"text-2xl font-bold text-gray-900 mt-1\">{stat.value}</p>\n                    </div>\n                    <div className=\"p-3 bg-blue-50 rounded-lg\">\n                      <Icon className=\"h-6 w-6 text-blue-600\" />\n                    </div>\n                  </div>\n                  \n                  {stat.change !== 0 && (\n                    <div className=\"mt-4 flex items-center\">\n                      {isPositive ? (\n                        <ArrowTrendingUpIcon className=\"h-4 w-4 text-green-500 mr-1\" />\n                      ) : (\n                        <ArrowTrendingDownIcon className=\"h-4 w-4 text-red-500 mr-1\" />\n                      )}\n                      <span className={`text-sm font-medium ${\n                        isPositive ? 'text-green-600' : 'text-red-600'\n                      }`}>\n                        {isPositive ? '+' : ''}{stat.change}\n                        {stat.changeType === 'percentage' ? '%' : ''}\n                      </span>\n                      <span className=\"text-sm text-gray-500 ml-1\">from last month</span>\n                    </div>\n                  )}\n                </div>\n              );\n            })}\n          </div>\n\n          {/* Recent Activity */}\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n            {/* Recent Users */}\n            <div className=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n              <div className=\"p-6 border-b border-gray-200\">\n                <h3 className=\"text-lg font-semibold text-gray-900\">Recent Users</h3>\n              </div>\n              <div className=\"p-6\">\n                {overview?.recent.users && overview.recent.users.length > 0 ? (\n                  <div className=\"space-y-4\">\n                    {overview.recent.users.map((user) => (\n                      <div key={user._id} className=\"flex items-center justify-between\">\n                        <div className=\"flex items-center\">\n                          <div className=\"h-8 w-8 rounded-full bg-gray-200 flex items-center justify-center\">\n                            <span className=\"text-sm font-medium text-gray-600\">\n                              {user.name.charAt(0).toUpperCase()}\n                            </span>\n                          </div>\n                          <div className=\"ml-3\">\n                            <p className=\"text-sm font-medium text-gray-900\">{user.name}</p>\n                            <p className=\"text-sm text-gray-500\">{user.email}</p>\n                          </div>\n                        </div>\n                        <div className=\"flex items-center space-x-2\">\n                          <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${\n                            user.role === 'admin' ? 'bg-purple-100 text-purple-800' :\n                            user.role === 'teacher' ? 'bg-blue-100 text-blue-800' :\n                            'bg-green-100 text-green-800'\n                          }`}>\n                            {user.role}\n                          </span>\n                          <span className=\"text-xs text-gray-500\">\n                            {formatDate(user.createdAt)}\n                          </span>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                ) : (\n                  <p className=\"text-gray-500 text-center py-4\">No recent users</p>\n                )}\n              </div>\n            </div>\n\n            {/* Recent Materials */}\n            <div className=\"bg-white rounded-lg shadow-sm border border-gray-200\">\n              <div className=\"p-6 border-b border-gray-200\">\n                <h3 className=\"text-lg font-semibold text-gray-900\">Recent Materials</h3>\n              </div>\n              <div className=\"p-6\">\n                {overview?.recent.materials && overview.recent.materials.length > 0 ? (\n                  <div className=\"space-y-4\">\n                    {overview.recent.materials.map((material) => (\n                      <div key={material._id} className=\"flex items-center justify-between\">\n                        <div className=\"flex items-center\">\n                          <div className=\"h-8 w-8 rounded bg-blue-100 flex items-center justify-center\">\n                            <DocumentTextIcon className=\"h-4 w-4 text-blue-600\" />\n                          </div>\n                          <div className=\"ml-3\">\n                            <p className=\"text-sm font-medium text-gray-900\">{material.title}</p>\n                            <p className=\"text-sm text-gray-500\">by {material.uploaderId.name}</p>\n                          </div>\n                        </div>\n                        <div className=\"flex items-center space-x-2\">\n                          <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${\n                            material.status === 'approved' ? 'bg-green-100 text-green-800' :\n                            material.status === 'rejected' ? 'bg-red-100 text-red-800' :\n                            'bg-yellow-100 text-yellow-800'\n                          }`}>\n                            {material.status}\n                          </span>\n                          <span className=\"text-xs text-gray-500\">\n                            {formatDate(material.createdAt)}\n                          </span>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                ) : (\n                  <p className=\"text-gray-500 text-center py-4\">No recent materials</p>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n} ","import { useAuth as useAuthContext, useRoleGuard as useRoleGuardFromContext } from '../context/AuthContext';\n\n// Re-export the main auth hook\nexport { useAuthContext as useAuth };\n\n// Role-based access hook\nexport function useRoleGuard(allowedRoles: ('student' | 'teacher' | 'admin')[]) {\n  return useRoleGuardFromContext(allowedRoles);\n}\n\n// Hook to check if user has specific role\nexport function useHasRole(role: 'student' | 'teacher' | 'admin') {\n  const { user } = useAuthContext();\n  return user?.role === role;\n}\n\n// Hook to check if user has any of the specified roles\nexport function useHasAnyRole(roles: ('student' | 'teacher' | 'admin')[]) {\n  const { user } = useAuthContext();\n  return user ? roles.includes(user.role) : false;\n}\n\n// Hook to check if user is authenticated\nexport function useIsAuthenticated() {\n  const { isAuthenticated } = useAuthContext();\n  return isAuthenticated;\n}\n\n// Hook to get current user role\nexport function useUserRole() {\n  const { user } = useAuthContext();\n  return user?.role;\n}\n\n// Hook to check if user can access materials (upload)\nexport function useCanUploadMaterials() {\n  const { user } = useAuthContext();\n  return user?.role === 'teacher' || user?.role === 'admin';\n}\n\n// Hook to check if user can manage materials (delete)\nexport function useCanManageMaterials() {\n  const { user } = useAuthContext();\n  return user?.role === 'teacher' || user?.role === 'admin';\n}\n\n// Hook to check if user is admin\nexport function useIsAdmin() {\n  const { user } = useAuthContext();\n  return user?.role === 'admin';\n}\n\n// Hook to check if user is teacher\nexport function useIsTeacher() {\n  const { user } = useAuthContext();\n  return user?.role === 'teacher';\n}\n\n// Hook to check if user is student\nexport function useIsStudent() {\n  const { user } = useAuthContext();\n  return user?.role === 'student';\n}\n\n// Hook to get user permissions\nexport function useUserPermissions() {\n  const { user } = useAuthContext();\n  \n  if (!user) return null;\n\n  const permissions = {\n    canUploadMaterials: user.role === 'teacher' || user.role === 'admin',\n    canManageMaterials: user.role === 'teacher' || user.role === 'admin',\n    canViewAnalytics: user.role === 'admin',\n    canManageUsers: user.role === 'admin',\n    canViewEarnings: user.role === 'teacher' || user.role === 'admin',\n    canBookLessons: user.role === 'student',\n    canTeachLessons: user.role === 'teacher',\n    canAccessAdminPanel: user.role === 'admin',\n  };\n\n  return permissions;\n}\n\n// Hook to check if user can access a specific feature\nexport function useCanAccess(feature: string) {\n  const permissions = useUserPermissions();\n  \n  if (!permissions) return false;\n\n  const featurePermissions: Record<string, boolean> = {\n    'materials.upload': permissions.canUploadMaterials,\n    'materials.manage': permissions.canManageMaterials,\n    'analytics.view': permissions.canViewAnalytics,\n    'users.manage': permissions.canManageUsers,\n    'earnings.view': permissions.canViewEarnings,\n    'lessons.book': permissions.canBookLessons,\n    'lessons.teach': permissions.canTeachLessons,\n    'admin.panel': permissions.canAccessAdminPanel,\n  };\n\n  return featurePermissions[feature] || false;\n}\n\n// Hook to get user dashboard URL\nexport function useDashboardUrl() {\n  const { user } = useAuthContext();\n  \n  if (!user) return '/login';\n  \n  switch (user.role) {\n    case 'student':\n      return '/dashboard/student';\n    case 'teacher':\n      return '/dashboard/teacher';\n    case 'admin':\n      return '/dashboard/admin';\n    default:\n      return '/login';\n  }\n}\n\n// Hook to check if user should be redirected\nexport function useShouldRedirect() {\n  const { user, isAuthenticated, isLoading } = useAuthContext();\n  \n  if (isLoading) return { shouldRedirect: false, redirectTo: null };\n  \n  if (!isAuthenticated) {\n    return { shouldRedirect: true, redirectTo: '/login' };\n  }\n  \n  if (user) {\n    const currentPath = typeof window !== 'undefined' ? window.location.pathname : '';\n    \n    // Check if user is on the correct dashboard\n    const expectedDashboard = `/dashboard/${user.role}`;\n    if (currentPath.startsWith('/dashboard') && currentPath !== expectedDashboard) {\n      return { shouldRedirect: true, redirectTo: expectedDashboard };\n    }\n  }\n  \n  return { shouldRedirect: false, redirectTo: null };\n} "],"names":["window","__NEXT_P","push","__webpack_require__","admin_AdminSidebar","className","param","currentPath","router","useRouter","pathname","navigation","name","href","icon","HomeIcon","current","UsersIcon","DocumentTextIcon","ClockIcon","ChartBarIcon","jsx_runtime","jsxs","div","concat","jsx","h2","nav","map","Icon","item","Link","aria-hidden","span","p","formatCurrency","Intl","NumberFormat","style","currency","format","amount","formatDate","Date","date","toLocaleDateString","year","month","day","hour","minute","AdminDashboard","useRoleGuard","state","loadOverview","useAdmin","overview","overviewLoading","useEffect","stats","value","totalUsers","change","userGrowth","changeType","totalTeachers","AcademicCapIcon","totalStudents","UserGroupIcon","totalMaterials","totalRevenue","CurrencyDollarIcon","revenueGrowth","totalReservations","AdminSidebar","Array","_","i","h1","stat","isPositive","ArrowTrendingUpIcon","ArrowTrendingDownIcon","h3","recent","users","length","user","charAt","toUpperCase","email","role","createdAt","_id","materials","material","title","uploaderId","status","allowedRoles","useRoleGuardFromContext","useCanUploadMaterials","useAuthContext","useCanManageMaterials"],"sourceRoot":""}