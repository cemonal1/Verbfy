{"version":3,"file":"static/chunks/pages/study-groups-d86c3247c697669f.js","mappings":"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","sources":["webpack://_N_E/?d1d7","webpack://_N_E/./pages/study-groups/index.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/study-groups\",\n      function () {\n        return require(\"private-next-pages/study-groups/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/study-groups\"])\n      });\n    }\n  ","import React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\nimport DashboardLayout from '@/components/layout/DashboardLayout';\nimport { useAuthContext } from '@/context/AuthContext';\nimport { useToast } from '@/components/common/Toast';\n\nexport default function StudyGroupsPage() {\n  const router = useRouter();\n  const { user } = useAuthContext();\n  const { success, error } = useToast();\n  \n  const [groups, setGroups] = useState<any>(null);\n  const [loading, setLoading] = useState(true);\n  const [activeTab, setActiveTab] = useState<'my-groups' | 'discover' | 'create'>('my-groups');\n  const [showCreateGroup, setShowCreateGroup] = useState(false);\n  const [newGroup, setNewGroup] = useState({\n    name: '',\n    description: '',\n    maxMembers: 10,\n    level: 'B1',\n    isPrivate: false,\n    password: ''\n  });\n\n  useEffect(() => {\n    loadStudyGroups();\n  }, []);\n\n  const loadStudyGroups = async () => {\n    try {\n      setLoading(true);\n      // This would need to be implemented in the API\n      // const response = await fetch('/api/study-groups');\n      // setGroups(response.groups);\n      \n      // Simulated data for demonstration\n      setGroups({\n        myGroups: [\n          {\n            id: 1,\n            name: 'Grammar Masters',\n            description: 'Advanced grammar practice and discussion group',\n            level: 'B2',\n            memberCount: 8,\n            maxMembers: 12,\n            isPrivate: false,\n            isOwner: true,\n            lastActivity: '2 hours ago',\n            nextSession: '2024-01-20T18:00:00Z',\n            members: [\n              { id: 1, name: 'Sarah Johnson', avatar: '👩‍🎓', role: 'owner', level: 'B2' },\n              { id: 2, name: 'Mike Chen', avatar: '👨‍🎓', role: 'member', level: 'B1' },\n              { id: 3, name: 'Emma Davis', avatar: '👩‍🎓', role: 'member', level: 'B2' }\n            ],\n            recentMessages: [\n              { id: 1, user: 'Sarah Johnson', message: 'Great session today!', time: '2 hours ago' },\n              { id: 2, user: 'Mike Chen', message: 'When is our next meeting?', time: '1 hour ago' }\n            ]\n          },\n          {\n            id: 2,\n            name: 'Speaking Practice',\n            description: 'Daily speaking practice and conversation',\n            level: 'B1',\n            memberCount: 5,\n            maxMembers: 8,\n            isPrivate: true,\n            isOwner: false,\n            lastActivity: '1 day ago',\n            nextSession: '2024-01-21T19:00:00Z',\n            members: [\n              { id: 1, name: 'Lisa Wang', avatar: '👩‍🎓', role: 'owner', level: 'B2' },\n              { id: 2, name: 'Alex Thompson', avatar: '👨‍🎓', role: 'member', level: 'B1' }\n            ],\n            recentMessages: [\n              { id: 1, user: 'Lisa Wang', message: 'Tomorrow\\'s topic: Travel experiences', time: '1 day ago' }\n            ]\n          }\n        ],\n        discoverGroups: [\n          {\n            id: 3,\n            name: 'Vocabulary Builders',\n            description: 'Learn new words and expand your vocabulary together',\n            level: 'A2',\n            memberCount: 15,\n            maxMembers: 20,\n            isPrivate: false,\n            isOwner: false,\n            lastActivity: '30 minutes ago',\n            tags: ['vocabulary', 'beginner', 'daily']\n          },\n          {\n            id: 4,\n            name: 'Writing Workshop',\n            description: 'Improve your writing skills with peer feedback',\n            level: 'B1',\n            memberCount: 6,\n            maxMembers: 10,\n            isPrivate: false,\n            isOwner: false,\n            lastActivity: '3 hours ago',\n            tags: ['writing', 'feedback', 'intermediate']\n          },\n          {\n            id: 5,\n            name: 'Test Prep Squad',\n            description: 'Prepare for CEFR tests together',\n            level: 'B2',\n            memberCount: 12,\n            maxMembers: 15,\n            isPrivate: false,\n            isOwner: false,\n            lastActivity: '1 hour ago',\n            tags: ['test-prep', 'cefr', 'advanced']\n          }\n        ],\n        recommendedGroups: [\n          {\n            id: 6,\n            name: 'Reading Club',\n            description: 'Read and discuss English literature',\n            level: 'B1',\n            memberCount: 8,\n            maxMembers: 12,\n            isPrivate: false,\n            isOwner: false,\n            lastActivity: '4 hours ago',\n            tags: ['reading', 'literature', 'discussion']\n          }\n        ]\n      });\n    } catch (err) {\n      error('Failed to load study groups');\n      console.error('Error loading study groups:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleCreateGroup = async () => {\n    try {\n      // This would need to be implemented in the API\n      // await fetch('/api/study-groups', { method: 'POST', body: JSON.stringify(newGroup) });\n      success('Study group created successfully!');\n      setShowCreateGroup(false);\n      setNewGroup({ name: '', description: '', maxMembers: 10, level: 'B1', isPrivate: false, password: '' });\n      loadStudyGroups(); // Reload to get updated data\n    } catch (err) {\n      error('Failed to create study group');\n      console.error('Error creating study group:', err);\n    }\n  };\n\n  const handleJoinGroup = async (groupId: number) => {\n    try {\n      // This would need to be implemented in the API\n      // await fetch(`/api/study-groups/${groupId}/join`, { method: 'POST' });\n      success('Joined study group successfully!');\n      loadStudyGroups(); // Reload to get updated data\n    } catch (err) {\n      error('Failed to join study group');\n      console.error('Error joining study group:', err);\n    }\n  };\n\n  const handleLeaveGroup = async (groupId: number) => {\n    try {\n      // This would need to be implemented in the API\n      // await fetch(`/api/study-groups/${groupId}/leave`, { method: 'POST' });\n      success('Left study group successfully!');\n      loadStudyGroups(); // Reload to get updated data\n    } catch (err) {\n      error('Failed to leave study group');\n      console.error('Error leaving study group:', err);\n    }\n  };\n\n  const formatDate = (dateString: string) => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('en-US', { \n      weekday: 'short', \n      month: 'short', \n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  const getLevelColor = (level: string) => {\n    const colors = {\n      'A1': 'bg-red-100 text-red-800',\n      'A2': 'bg-orange-100 text-orange-800',\n      'B1': 'bg-yellow-100 text-yellow-800',\n      'B2': 'bg-green-100 text-green-800',\n      'C1': 'bg-blue-100 text-blue-800',\n      'C2': 'bg-purple-100 text-purple-800'\n    };\n    return colors[level as keyof typeof colors] || 'bg-gray-100 text-gray-800';\n  };\n\n  if (loading) {\n    return (\n      <DashboardLayout allowedRoles={['student']}>\n        <div className=\"flex items-center justify-center h-64\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600\"></div>\n        </div>\n      </DashboardLayout>\n    );\n  }\n\n  if (!groups) {\n    return (\n      <DashboardLayout allowedRoles={['student']}>\n        <div className=\"text-center py-12\">\n          <h2 className=\"text-xl font-semibold text-gray-900 mb-2\">No study groups available</h2>\n          <p className=\"text-gray-600 mb-4\">Create or join a study group to start learning together.</p>\n          <button\n            onClick={() => setShowCreateGroup(true)}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\"\n          >\n            Create Group\n          </button>\n        </div>\n      </DashboardLayout>\n    );\n  }\n\n  return (\n    <DashboardLayout allowedRoles={['student']}>\n      <Head>\n        <title>Study Groups - Verbfy</title>\n      </Head>\n\n      <div className=\"p-6 max-w-7xl mx-auto\">\n        {/* Header */}\n        <div className=\"mb-8\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Study Groups</h1>\n              <p className=\"text-gray-600\">\n                Learn together with peers and practice English in a collaborative environment\n              </p>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <button\n                onClick={() => setShowCreateGroup(true)}\n                className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\"\n              >\n                Create Group\n              </button>\n              <button\n                onClick={() => router.push('/personalized-curriculum')}\n                className=\"px-4 py-2 text-gray-600 border border-gray-300 rounded-md hover:bg-gray-50 transition-colors\"\n              >\n                Back to Curriculum\n              </button>\n            </div>\n          </div>\n        </div>\n\n        {/* Stats Cards */}\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-8\">\n          <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">My Groups</p>\n                <p className=\"text-2xl font-bold text-gray-900\">{groups.myGroups.length}</p>\n              </div>\n              <div className=\"w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center\">\n                <span className=\"text-blue-600 text-xl\">👥</span>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">Total Members</p>\n                <p className=\"text-2xl font-bold text-gray-900\">\n                  {groups.myGroups.reduce((total: number, group: any) => total + group.memberCount, 0)}\n                </p>\n              </div>\n              <div className=\"w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center\">\n                <span className=\"text-green-600 text-xl\">👨‍🎓</span>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">Active Sessions</p>\n                <p className=\"text-2xl font-bold text-gray-900\">\n                  {groups.myGroups.filter((g: any) => new Date(g.nextSession) > new Date()).length}\n                </p>\n              </div>\n              <div className=\"w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center\">\n                <span className=\"text-purple-600 text-xl\">🎯</span>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">Groups Owned</p>\n                <p className=\"text-2xl font-bold text-gray-900\">\n                  {groups.myGroups.filter((g: any) => g.isOwner).length}\n                </p>\n              </div>\n              <div className=\"w-12 h-12 bg-yellow-100 rounded-lg flex items-center justify-center\">\n                <span className=\"text-yellow-600 text-xl\">👑</span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Tabs */}\n        <div className=\"mb-6\">\n          <div className=\"border-b border-gray-200\">\n            <nav className=\"-mb-px flex space-x-8\">\n              {[\n                { id: 'my-groups', label: 'My Groups', count: groups.myGroups.length },\n                { id: 'discover', label: 'Discover', count: groups.discoverGroups.length },\n                { id: 'create', label: 'Create Group', count: 0 }\n              ].map((tab) => (\n                <button\n                  key={tab.id}\n                  onClick={() => setActiveTab(tab.id as any)}\n                  className={`py-2 px-1 border-b-2 font-medium text-sm flex items-center space-x-2 ${\n                    activeTab === tab.id\n                      ? 'border-blue-500 text-blue-600'\n                      : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n                  }`}\n                >\n                  <span>{tab.label}</span>\n                  {tab.count > 0 && (\n                    <span className=\"bg-gray-100 text-gray-600 px-2 py-1 rounded-full text-xs\">\n                      {tab.count}\n                    </span>\n                  )}\n                </button>\n              ))}\n            </nav>\n          </div>\n        </div>\n\n        {/* Tab Content */}\n        {activeTab === 'my-groups' && (\n          <div className=\"space-y-6\">\n            {groups.myGroups.map((group: any) => (\n              <div key={group.id} className=\"bg-white rounded-lg shadow-sm border p-6\">\n                <div className=\"flex items-start justify-between mb-4\">\n                  <div className=\"flex-1\">\n                    <div className=\"flex items-center space-x-3 mb-2\">\n                      <h3 className=\"text-xl font-semibold text-gray-900\">{group.name}</h3>\n                      <span className={`px-2 py-1 text-xs font-medium rounded-full ${getLevelColor(group.level)}`}>\n                        {group.level}\n                      </span>\n                      {group.isPrivate && (\n                        <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-gray-100 text-gray-800\">\n                          🔒 Private\n                        </span>\n                      )}\n                      {group.isOwner && (\n                        <span className=\"px-2 py-1 text-xs font-medium rounded-full bg-yellow-100 text-yellow-800\">\n                          👑 Owner\n                        </span>\n                      )}\n                    </div>\n                    <p className=\"text-gray-600 mb-3\">{group.description}</p>\n                    \n                    <div className=\"flex items-center space-x-6 text-sm text-gray-500\">\n                      <span>👥 {group.memberCount}/{group.maxMembers} members</span>\n                      <span>🕒 Last activity: {group.lastActivity}</span>\n                      {group.nextSession && (\n                        <span>📅 Next session: {formatDate(group.nextSession)}</span>\n                      )}\n                    </div>\n                  </div>\n                  \n                  <div className=\"flex items-center space-x-2\">\n                    <button\n                      onClick={() => router.push(`/study-groups/${group.id}`)}\n                      className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\"\n                    >\n                      View Group\n                    </button>\n                    {!group.isOwner && (\n                      <button\n                        onClick={() => handleLeaveGroup(group.id)}\n                        className=\"px-4 py-2 text-red-600 border border-red-300 rounded-md hover:bg-red-50 transition-colors\"\n                      >\n                        Leave\n                      </button>\n                    )}\n                  </div>\n                </div>\n\n                {/* Members */}\n                <div className=\"mb-4\">\n                  <h4 className=\"text-sm font-medium text-gray-900 mb-2\">Members</h4>\n                  <div className=\"flex items-center space-x-2\">\n                    {group.members.slice(0, 5).map((member: any) => (\n                      <div key={member.id} className=\"flex items-center space-x-1\">\n                        <span className=\"text-lg\">{member.avatar}</span>\n                        <span className=\"text-xs text-gray-600\">{member.name}</span>\n                      </div>\n                    ))}\n                    {group.members.length > 5 && (\n                      <span className=\"text-xs text-gray-500\">+{group.members.length - 5} more</span>\n                    )}\n                  </div>\n                </div>\n\n                {/* Recent Messages */}\n                {group.recentMessages.length > 0 && (\n                  <div>\n                    <h4 className=\"text-sm font-medium text-gray-900 mb-2\">Recent Messages</h4>\n                    <div className=\"space-y-1\">\n                      {group.recentMessages.slice(0, 2).map((message: any) => (\n                        <div key={message.id} className=\"text-sm text-gray-600\">\n                          <span className=\"font-medium\">{message.user}:</span> {message.message}\n                          <span className=\"text-gray-400 ml-2\">{message.time}</span>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                )}\n              </div>\n            ))}\n          </div>\n        )}\n\n        {activeTab === 'discover' && (\n          <div className=\"space-y-6\">\n            {/* Recommended Groups */}\n            {groups.recommendedGroups.length > 0 && (\n              <div className=\"mb-8\">\n                <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Recommended for You</h3>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                  {groups.recommendedGroups.map((group: any) => (\n                    <div key={group.id} className=\"bg-white rounded-lg shadow-sm border p-4\">\n                      <div className=\"flex items-center justify-between mb-2\">\n                        <h4 className=\"font-medium text-gray-900\">{group.name}</h4>\n                        <span className={`px-2 py-1 text-xs font-medium rounded-full ${getLevelColor(group.level)}`}>\n                          {group.level}\n                        </span>\n                      </div>\n                      <p className=\"text-sm text-gray-600 mb-3\">{group.description}</p>\n                      <div className=\"flex items-center justify-between text-xs text-gray-500 mb-3\">\n                        <span>👥 {group.memberCount}/{group.maxMembers}</span>\n                        <span>🕒 {group.lastActivity}</span>\n                      </div>\n                      <div className=\"flex flex-wrap gap-1 mb-3\">\n                        {group.tags.map((tag: string, index: number) => (\n                          <span key={index} className=\"px-2 py-1 text-xs bg-gray-100 text-gray-600 rounded-full\">\n                            {tag}\n                          </span>\n                        ))}\n                      </div>\n                      <button\n                        onClick={() => handleJoinGroup(group.id)}\n                        className=\"w-full px-3 py-2 bg-blue-600 text-white text-sm rounded-md hover:bg-blue-700 transition-colors\"\n                      >\n                        Join Group\n                      </button>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            {/* All Discoverable Groups */}\n            <div>\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">All Groups</h3>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                {groups.discoverGroups.map((group: any) => (\n                  <div key={group.id} className=\"bg-white rounded-lg shadow-sm border p-4\">\n                    <div className=\"flex items-center justify-between mb-2\">\n                      <h4 className=\"font-medium text-gray-900\">{group.name}</h4>\n                      <span className={`px-2 py-1 text-xs font-medium rounded-full ${getLevelColor(group.level)}`}>\n                        {group.level}\n                      </span>\n                    </div>\n                    <p className=\"text-sm text-gray-600 mb-3\">{group.description}</p>\n                    <div className=\"flex items-center justify-between text-xs text-gray-500 mb-3\">\n                      <span>👥 {group.memberCount}/{group.maxMembers}</span>\n                      <span>🕒 {group.lastActivity}</span>\n                    </div>\n                    <div className=\"flex flex-wrap gap-1 mb-3\">\n                      {group.tags.map((tag: string, index: number) => (\n                        <span key={index} className=\"px-2 py-1 text-xs bg-gray-100 text-gray-600 rounded-full\">\n                          {tag}\n                        </span>\n                      ))}\n                    </div>\n                    <button\n                      onClick={() => handleJoinGroup(group.id)}\n                      className=\"w-full px-3 py-2 bg-blue-600 text-white text-sm rounded-md hover:bg-blue-700 transition-colors\"\n                    >\n                      Join Group\n                    </button>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'create' && (\n          <div className=\"bg-white rounded-lg shadow-sm border p-6\">\n            <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Create a New Study Group</h3>\n            <p className=\"text-gray-600 mb-6\">\n              Create a study group to learn together with other students. You can make it public or private.\n            </p>\n            \n            <button\n              onClick={() => setShowCreateGroup(true)}\n              className=\"px-6 py-3 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors font-medium\"\n            >\n              Create Study Group\n            </button>\n          </div>\n        )}\n\n        {/* Create Group Modal */}\n        {showCreateGroup && (\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\n            <div className=\"bg-white rounded-lg p-6 max-w-md w-full mx-4\">\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Create Study Group</h3>\n              \n              <div className=\"space-y-4\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Group Name</label>\n                  <input\n                    type=\"text\"\n                    value={newGroup.name}\n                    onChange={(e) => setNewGroup({ ...newGroup, name: e.target.value })}\n                    placeholder=\"Enter group name\"\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Description</label>\n                  <textarea\n                    value={newGroup.description}\n                    onChange={(e) => setNewGroup({ ...newGroup, description: e.target.value })}\n                    placeholder=\"Describe your study group\"\n                    rows={3}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  />\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">CEFR Level</label>\n                  <select\n                    value={newGroup.level}\n                    onChange={(e) => setNewGroup({ ...newGroup, level: e.target.value })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  >\n                    <option value=\"A1\">A1 - Beginner</option>\n                    <option value=\"A2\">A2 - Elementary</option>\n                    <option value=\"B1\">B1 - Intermediate</option>\n                    <option value=\"B2\">B2 - Upper Intermediate</option>\n                    <option value=\"C1\">C1 - Advanced</option>\n                    <option value=\"C2\">C2 - Mastery</option>\n                  </select>\n                </div>\n                \n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-1\">Maximum Members</label>\n                  <select\n                    value={newGroup.maxMembers}\n                    onChange={(e) => setNewGroup({ ...newGroup, maxMembers: parseInt(e.target.value) })}\n                    className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                  >\n                    <option value={5}>5 members</option>\n                    <option value={10}>10 members</option>\n                    <option value={15}>15 members</option>\n                    <option value={20}>20 members</option>\n                  </select>\n                </div>\n                \n                <div className=\"flex items-center space-x-2\">\n                  <input\n                    type=\"checkbox\"\n                    id=\"isPrivate\"\n                    checked={newGroup.isPrivate}\n                    onChange={(e) => setNewGroup({ ...newGroup, isPrivate: e.target.checked })}\n                    className=\"rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n                  />\n                  <label htmlFor=\"isPrivate\" className=\"text-sm font-medium text-gray-700\">\n                    Make this group private\n                  </label>\n                </div>\n                \n                {newGroup.isPrivate && (\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-1\">Password</label>\n                    <input\n                      type=\"password\"\n                      value={newGroup.password}\n                      onChange={(e) => setNewGroup({ ...newGroup, password: e.target.value })}\n                      placeholder=\"Enter group password\"\n                      className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500\"\n                    />\n                  </div>\n                )}\n              </div>\n              \n              <div className=\"flex space-x-3 mt-6\">\n                <button\n                  onClick={() => setShowCreateGroup(false)}\n                  className=\"flex-1 px-4 py-2 text-gray-600 border border-gray-300 rounded-md hover:bg-gray-50 transition-colors\"\n                >\n                  Cancel\n                </button>\n                <button\n                  onClick={handleCreateGroup}\n                  className=\"flex-1 px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\"\n                >\n                  Create Group\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </DashboardLayout>\n  );\n} "],"names":["window","__NEXT_P","push","__webpack_require__","StudyGroupsPage","router","useRouter","user","useAuthContext","success","error","useToast","groups","setGroups","useState","loading","setLoading","activeTab","setActiveTab","showCreateGroup","setShowCreateGroup","newGroup","setNewGroup","name","description","maxMembers","level","isPrivate","password","useEffect","loadStudyGroups","myGroups","id","memberCount","isOwner","lastActivity","nextSession","members","avatar","role","recentMessages","message","time","discoverGroups","tags","recommendedGroups","err","console","handleCreateGroup","handleJoinGroup","groupId","handleLeaveGroup","formatDate","date","Date","dateString","toLocaleDateString","weekday","month","day","hour","minute","getLevelColor","colors","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","DashboardLayout","allowedRoles","div","className","jsxs","Head","title","h1","p","button","onClick","length","span","reduce","total","group","filter","g","nav","label","count","map","tab","concat","h3","h4","slice","member","tag","index","input","type","value","onChange","e","target","placeholder","textarea","rows","select","option","parseInt","checked","htmlFor","h2"],"sourceRoot":""}