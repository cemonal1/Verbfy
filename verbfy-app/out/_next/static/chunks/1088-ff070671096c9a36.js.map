{"version":3,"file":"static/chunks/1088-ff070671096c9a36.js","mappings":"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","sources":["webpack://_N_E/./src/components/notification/NotificationBadge.tsx","webpack://_N_E/./src/types/notifications.ts","webpack://_N_E/./src/components/notification/NotificationPanel.tsx","webpack://_N_E/./src/components/layout/DashboardLayout.tsx","webpack://_N_E/./src/components/shared/BrandLogo.tsx"],"sourcesContent":["import React from 'react';\nimport { useNotifications } from '../../context/NotificationContext';\n\ninterface NotificationBadgeProps {\n  onClick?: () => void;\n  className?: string;\n  showCount?: boolean;\n}\n\nexport default function NotificationBadge({ \n  onClick, \n  className = '', \n  showCount = true \n}: NotificationBadgeProps) {\n  const { state } = useNotifications();\n  const { unreadCount } = state;\n\n  return (\n    <button\n      onClick={onClick}\n      className={`relative inline-flex items-center justify-center p-2 text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-white transition-colors ${className}`}\n      aria-label={`${unreadCount} unread notifications`}\n    >\n      {/* Bell Icon */}\n      <svg\n        className=\"w-6 h-6\"\n        fill=\"none\"\n        stroke=\"currentColor\"\n        viewBox=\"0 0 24 24\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <path\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeWidth={2}\n          d=\"M15 17h5l-5 5v-5zM10.5 3.75a6 6 0 0 1 6 6v4.5l2.25 2.25a2.25 2.25 0 0 1-2.25 2.25h-13.5a2.25 2.25 0 0 1-2.25-2.25L6 14.25V9.75a6 6 0 0 1 6-6z\"\n        />\n      </svg>\n\n      {/* Unread Badge */}\n      {unreadCount > 0 && (\n        <span className=\"absolute -top-1 -right-1 inline-flex items-center justify-center px-2 py-1 text-xs font-bold leading-none text-white transform translate-x-1/2 -translate-y-1/2 bg-red-500 rounded-full min-w-[20px] h-5\">\n          {showCount && unreadCount > 99 ? '99+' : unreadCount}\n        </span>\n      )}\n\n      {/* Pulse animation for new notifications */}\n      {unreadCount > 0 && (\n        <span className=\"absolute -top-1 -right-1 inline-flex items-center justify-center w-5 h-5\">\n          <span className=\"animate-ping absolute inline-flex h-full w-full rounded-full bg-red-400 opacity-75\"></span>\n          <span className=\"relative inline-flex rounded-full h-3 w-3 bg-red-500\"></span>\n        </span>\n      )}\n    </button>\n  );\n} ","export interface Notification {\n  _id: string;\n  recipient: {\n    _id: string;\n    name: string;\n    email: string;\n  };\n  type: 'message' | 'reservation' | 'material' | 'admin' | 'lesson' | 'payment' | 'system';\n  title: string;\n  body: string;\n  link?: string;\n  isRead: boolean;\n  readAt?: string;\n  meta?: {\n    senderId?: string;\n    lessonId?: string;\n    materialId?: string;\n    reservationId?: string;\n    amount?: number;\n    [key: string]: any;\n  };\n  createdAt: string;\n  updatedAt: string;\n  timeAgo?: string;\n}\n\nexport interface NotificationFilters {\n  type?: string;\n  isRead?: boolean;\n  page?: number;\n  limit?: number;\n}\n\nexport interface NotificationResponse {\n  success: boolean;\n  data: {\n    notifications: Notification[];\n    pagination: {\n      page: number;\n      limit: number;\n      total: number;\n      pages: number;\n    };\n    unreadCount: number;\n  };\n  message: string;\n}\n\nexport interface UnreadCountResponse {\n  success: boolean;\n  data: {\n    unreadCount: number;\n  };\n  message: string;\n}\n\nexport interface NotificationState {\n  notifications: Notification[];\n  unreadCount: number;\n  loading: boolean;\n  error: string | null;\n  pagination: {\n    page: number;\n    limit: number;\n    total: number;\n    pages: number;\n  };\n}\n\nexport interface NotificationAction {\n  type: 'SET_LOADING' | 'SET_ERROR' | 'SET_NOTIFICATIONS' | 'ADD_NOTIFICATION' | 'UPDATE_NOTIFICATION' | 'DELETE_NOTIFICATION' | 'MARK_AS_READ' | 'MARK_ALL_AS_READ' | 'SET_UNREAD_COUNT';\n  payload?: any;\n}\n\nexport interface NotificationContextType {\n  state: NotificationState;\n  fetchNotifications: (filters?: NotificationFilters) => Promise<void>;\n  markAsRead: (id: string) => Promise<void>;\n  markAllAsRead: () => Promise<void>;\n  deleteNotification: (id: string) => Promise<void>;\n  addNotification: (notification: Notification) => void;\n  getUnreadCount: () => Promise<void>;\n}\n\n// Notification type configurations\nexport const NOTIFICATION_TYPES = {\n  message: {\n    label: 'Message',\n    icon: '💬',\n    color: 'bg-blue-500',\n    textColor: 'text-blue-600'\n  },\n  reservation: {\n    label: 'Reservation',\n    icon: '📅',\n    color: 'bg-green-500',\n    textColor: 'text-green-600'\n  },\n  material: {\n    label: 'Material',\n    icon: '📚',\n    color: 'bg-purple-500',\n    textColor: 'text-purple-600'\n  },\n  admin: {\n    label: 'Admin',\n    icon: '⚙️',\n    color: 'bg-red-500',\n    textColor: 'text-red-600'\n  },\n  lesson: {\n    label: 'Lesson',\n    icon: '🎓',\n    color: 'bg-yellow-500',\n    textColor: 'text-yellow-600'\n  },\n  payment: {\n    label: 'Payment',\n    icon: '💰',\n    color: 'bg-emerald-500',\n    textColor: 'text-emerald-600'\n  },\n  system: {\n    label: 'System',\n    icon: '🔔',\n    color: 'bg-gray-500',\n    textColor: 'text-gray-600'\n  }\n} as const;\n\nexport const getNotificationConfig = (type: Notification['type']) => {\n  return NOTIFICATION_TYPES[type] || NOTIFICATION_TYPES.system;\n}; ","import React, { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport { useNotifications } from '../../context/NotificationContext';\nimport { Notification, getNotificationConfig } from '../../types/notifications';\n\ninterface NotificationPanelProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nexport default function NotificationPanel({ isOpen, onClose }: NotificationPanelProps) {\n  const router = useRouter();\n  const { state, fetchNotifications, markAsRead, markAllAsRead, deleteNotification } = useNotifications();\n  const { notifications, loading, pagination, unreadCount } = state;\n  \n  const [filter, setFilter] = useState<'all' | 'unread' | 'read'>('all');\n  const [typeFilter, setTypeFilter] = useState<string>('all');\n\n  // Load notifications when panel opens\n  useEffect(() => {\n    if (isOpen) {\n      const filters: any = {};\n      if (filter === 'unread') filters.isRead = false;\n      if (filter === 'read') filters.isRead = true;\n      if (typeFilter !== 'all') filters.type = typeFilter;\n      \n      fetchNotifications(filters);\n    }\n  }, [isOpen, filter, typeFilter]);\n\n  // Handle notification click\n  const handleNotificationClick = async (notification: Notification) => {\n    // Mark as read if unread\n    if (!notification.isRead) {\n      await markAsRead(notification._id);\n    }\n\n    // Navigate to link if provided\n    if (notification.link) {\n      router.push(notification.link);\n      onClose();\n    }\n  };\n\n  // Handle mark all as read\n  const handleMarkAllAsRead = async () => {\n    await markAllAsRead();\n  };\n\n  // Handle delete notification\n  const handleDeleteNotification = async (e: React.MouseEvent, id: string) => {\n    e.stopPropagation();\n    await deleteNotification(id);\n  };\n\n  // Format time ago\n  const formatTimeAgo = (dateString: string) => {\n    const now = new Date();\n    const date = new Date(dateString);\n    const diffInSeconds = Math.floor((now.getTime() - date.getTime()) / 1000);\n    \n    if (diffInSeconds < 60) return 'Just now';\n    if (diffInSeconds < 3600) return `${Math.floor(diffInSeconds / 60)}m ago`;\n    if (diffInSeconds < 86400) return `${Math.floor(diffInSeconds / 3600)}h ago`;\n    if (diffInSeconds < 2592000) return `${Math.floor(diffInSeconds / 86400)}d ago`;\n    return `${Math.floor(diffInSeconds / 2592000)}mo ago`;\n  };\n\n  // Filter notifications\n  const filteredNotifications = notifications.filter(notification => {\n    if (filter === 'unread' && notification.isRead) return false;\n    if (filter === 'read' && !notification.isRead) return false;\n    if (typeFilter !== 'all' && notification.type !== typeFilter) return false;\n    return true;\n  });\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"fixed inset-0 z-50 overflow-hidden\">\n      {/* Backdrop */}\n      <div \n        className=\"absolute inset-0 bg-black bg-opacity-50 transition-opacity\"\n        onClick={onClose}\n      />\n\n      {/* Panel */}\n      <div className=\"absolute right-0 top-0 h-full w-full max-w-md bg-white dark:bg-gray-800 shadow-xl transform transition-transform duration-300 ease-in-out\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-4 border-b border-gray-200 dark:border-gray-700\">\n          <div className=\"flex items-center space-x-3\">\n            <h2 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n              Notifications\n            </h2>\n            {unreadCount > 0 && (\n              <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200\">\n                {unreadCount}\n              </span>\n            )}\n          </div>\n          \n          <div className=\"flex items-center space-x-2\">\n            {unreadCount > 0 && (\n              <button\n                onClick={handleMarkAllAsRead}\n                className=\"text-sm text-blue-600 hover:text-blue-800 dark:text-blue-400 dark:hover:text-blue-300\"\n              >\n                Mark all read\n              </button>\n            )}\n            <button\n              onClick={onClose}\n              className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300\"\n            >\n              <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n              </svg>\n            </button>\n          </div>\n        </div>\n\n        {/* Filters */}\n        <div className=\"p-4 border-b border-gray-200 dark:border-gray-700 space-y-3\">\n          {/* Status Filter */}\n          <div className=\"flex space-x-2\">\n            {(['all', 'unread', 'read'] as const).map((status) => (\n              <button\n                key={status}\n                onClick={() => setFilter(status)}\n                className={`px-3 py-1 text-sm rounded-md transition-colors ${\n                  filter === status\n                    ? 'bg-blue-100 text-blue-700 dark:bg-blue-900 dark:text-blue-300'\n                    : 'text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-white'\n                }`}\n              >\n                {status.charAt(0).toUpperCase() + status.slice(1)}\n              </button>\n            ))}\n          </div>\n\n          {/* Type Filter */}\n          <select\n            value={typeFilter}\n            onChange={(e) => setTypeFilter(e.target.value)}\n            className=\"w-full px-3 py-2 text-sm border border-gray-300 dark:border-gray-600 rounded-md bg-white dark:bg-gray-700 text-gray-900 dark:text-white focus:ring-blue-500 focus:border-blue-500\"\n          >\n            <option value=\"all\">All Types</option>\n            <option value=\"message\">Messages</option>\n            <option value=\"reservation\">Reservations</option>\n            <option value=\"material\">Materials</option>\n            <option value=\"lesson\">Lessons</option>\n            <option value=\"payment\">Payments</option>\n            <option value=\"admin\">Admin</option>\n            <option value=\"system\">System</option>\n          </select>\n        </div>\n\n        {/* Notifications List */}\n        <div className=\"flex-1 overflow-y-auto\">\n          {loading ? (\n            <div className=\"p-4 space-y-4\">\n              {Array.from({ length: 5 }).map((_, index) => (\n                <div key={index} className=\"animate-pulse\">\n                  <div className=\"flex space-x-3\">\n                    <div className=\"w-8 h-8 bg-gray-200 dark:bg-gray-700 rounded-full\"></div>\n                    <div className=\"flex-1 space-y-2\">\n                      <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded w-3/4\"></div>\n                      <div className=\"h-3 bg-gray-200 dark:bg-gray-700 rounded w-1/2\"></div>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : filteredNotifications.length === 0 ? (\n            <div className=\"p-8 text-center\">\n              <div className=\"text-gray-400 text-6xl mb-4\">🔔</div>\n              <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\n                No notifications\n              </h3>\n              <p className=\"text-gray-600 dark:text-gray-400\">\n                {filter === 'all' ? 'You\\'re all caught up!' : 'No notifications match your filter.'}\n              </p>\n            </div>\n          ) : (\n            <div className=\"divide-y divide-gray-200 dark:divide-gray-700\">\n              {filteredNotifications.map((notification) => {\n                const config = getNotificationConfig(notification.type);\n                \n                return (\n                  <div\n                    key={notification._id}\n                    onClick={() => handleNotificationClick(notification)}\n                    className={`p-4 hover:bg-gray-50 dark:hover:bg-gray-700 cursor-pointer transition-colors ${\n                      !notification.isRead ? 'bg-blue-50 dark:bg-blue-900/20' : ''\n                    }`}\n                  >\n                    <div className=\"flex items-start space-x-3\">\n                      {/* Icon */}\n                      <div className={`flex-shrink-0 w-8 h-8 rounded-full ${config.color} flex items-center justify-center text-white text-sm`}>\n                        {config.icon}\n                      </div>\n\n                      {/* Content */}\n                      <div className=\"flex-1 min-w-0\">\n                        <div className=\"flex items-start justify-between\">\n                          <p className={`text-sm font-medium ${\n                            !notification.isRead \n                              ? 'text-gray-900 dark:text-white' \n                              : 'text-gray-600 dark:text-gray-400'\n                          }`}>\n                            {notification.title}\n                          </p>\n                          \n                          {/* Delete button */}\n                          <button\n                            onClick={(e) => handleDeleteNotification(e, notification._id)}\n                            className=\"flex-shrink-0 ml-2 text-gray-400 hover:text-red-500 transition-colors\"\n                            title=\"Delete notification\"\n                          >\n                            <svg className=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                            </svg>\n                          </button>\n                        </div>\n                        \n                        <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1 line-clamp-2\">\n                          {notification.body}\n                        </p>\n                        \n                        <div className=\"flex items-center justify-between mt-2\">\n                          <span className=\"text-xs text-gray-500 dark:text-gray-400\">\n                            {formatTimeAgo(notification.createdAt)}\n                          </span>\n                          \n                          {!notification.isRead && (\n                            <span className=\"inline-flex items-center px-2 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200\">\n                              New\n                            </span>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          )}\n        </div>\n\n        {/* Footer */}\n        {pagination.pages > 1 && (\n          <div className=\"p-4 border-t border-gray-200 dark:border-gray-700\">\n            <div className=\"flex items-center justify-between text-sm text-gray-600 dark:text-gray-400\">\n              <span>\n                Page {pagination.page} of {pagination.pages}\n              </span>\n              <span>\n                {pagination.total} total\n              </span>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n} ","import React, { useState, ReactNode } from 'react';\nimport Link from 'next/link';\nimport BrandLogo from '@/components/shared/BrandLogo';\nimport { useRouter } from 'next/router';\nimport { useAuth } from '../../context/AuthContext';\nimport { useToast } from '../common/Toast';\nimport NotificationBadge from '../notification/NotificationBadge';\nimport { NotificationProvider } from '@/context/NotificationContext';\nimport NotificationPanel from '../notification/NotificationPanel';\nimport { useI18n } from '@/lib/i18n';\n\ninterface DashboardLayoutProps {\n  children: ReactNode;\n  allowedRoles?: ('student' | 'teacher' | 'admin')[];\n  title?: string;\n}\n\nexport default function DashboardLayout({ \n  children, \n  allowedRoles = ['student', 'teacher', 'admin'],\n  title = 'Dashboard'\n}: DashboardLayoutProps) {\n  const { user, logout } = useAuth();\n  const { t, locale, setLocale } = useI18n();\n  const { success } = useToast();\n  const router = useRouter();\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n  const [notificationPanelOpen, setNotificationPanelOpen] = useState(false);\n\n  // Check if user has access\n  if (!user || !allowedRoles.includes(user.role)) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50 dark:bg-gray-900\">\n        <div className=\"text-center\">\n          <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-4\">\n            Access Denied\n          </h1>\n          <p className=\"text-gray-600 dark:text-gray-400 mb-6\">\n            You don't have permission to access this page.\n          </p>\n          <button\n            onClick={() => router.push('/dashboard')}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700 transition-colors\"\n          >\n            Go to Dashboard\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  // Navigation items based on user role\n  const getNavigationItems = () => {\n    const baseItems = [\n      {\n        name: t('nav.dashboard','Dashboard'),\n        href: '/dashboard',\n        icon: '🏠',\n        current: router.pathname === '/dashboard'\n      },\n        {\n          name: 'Placement',\n          href: '/placement',\n          icon: '🧭',\n          current: router.pathname.startsWith('/placement')\n        },\n        {\n          name: 'VerbfyGames',\n          href: '/verbfy-games',\n          icon: '🎮',\n          current: router.pathname.startsWith('/verbfy-games')\n        },\n      {\n        name: t('nav.profile','Profile'),\n        href: '/profile',\n        icon: '👤',\n        current: router.pathname === '/profile'\n      },\n      {\n        name: t('nav.verbfytalk','VerbfyTalk'),\n        href: '/verbfy-talk',\n        icon: '🎥',\n        current: router.pathname.startsWith('/verbfy-talk')\n      },\n      {\n        name: t('nav.freeMaterials','Free Materials'),\n        href: '/free-materials',\n        icon: '📚',\n        current: router.pathname.startsWith('/free-materials')\n      },\n      {\n        name: t('nav.verbfyLessons','Verbfy Lessons'),\n        href: '/verbfy-lessons',\n        icon: '📖',\n        current: router.pathname.startsWith('/verbfy-lessons')\n      },\n      {\n        name: t('nav.cefrTests','CEFR Tests'),\n        href: '/cefr-tests',\n        icon: '📝',\n        current: router.pathname.startsWith('/cefr-tests')\n      },\n      {\n        name: t('nav.curriculum','Personalized Curriculum'),\n        href: '/personalized-curriculum',\n        icon: '🎯',\n        current: router.pathname.startsWith('/personalized-curriculum')\n      },\n      {\n        name: t('nav.aiLearning','AI Learning Assistant'),\n        href: '/ai-learning',\n        icon: '🤖',\n        current: router.pathname.startsWith('/ai-learning')\n      },\n      {\n        name: t('nav.adaptive','Adaptive Learning'),\n        href: '/adaptive-learning',\n        icon: '🎯',\n        current: router.pathname.startsWith('/adaptive-learning')\n      },\n      {\n        name: t('nav.aiContent','AI Content Generation'),\n        href: '/ai-content-generation',\n        icon: '✨',\n        current: router.pathname.startsWith('/ai-content-generation')\n      },\n      {\n        name: t('nav.chat','Chat'),\n        href: '/chat',\n        icon: '💬',\n        current: router.pathname.startsWith('/chat')\n      },\n      {\n        name: t('nav.materials','Materials'),\n        href: '/materials',\n        icon: '📁',\n        current: router.pathname.startsWith('/materials')\n      },\n      {\n        name: t('nav.payments','Payments'),\n        href: '/payment',\n        icon: '💳',\n        current: router.pathname.startsWith('/payment')\n      }\n    ];\n\n    // Add role-specific items\n    if (user.role === 'student') {\n      baseItems.splice(1, 0, {\n        name: t('student.myLessons','My Lessons'),\n        href: '/lessons',\n        icon: '📖',\n        current: router.pathname === '/lessons'\n      });\n      baseItems.splice(2, 0, {\n        name: t('student.findTeachers','Find Teachers'),\n        href: '/teachers',\n        icon: '👨‍🏫',\n        current: router.pathname === '/teachers'\n      });\n    }\n\n    if (user.role === 'teacher') {\n      baseItems.splice(1, 0, {\n        name: t('teacher.myStudents','My Students'),\n        href: '/students',\n        icon: '👥',\n        current: router.pathname === '/students'\n      });\n      baseItems.splice(2, 0, {\n        name: t('teacher.schedule','Schedule'),\n        href: '/schedule',\n        icon: '📅',\n        current: router.pathname === '/schedule'\n      });\n      baseItems.splice(3, 0, {\n        name: t('teacher.earnings','Earnings'),\n        href: '/earnings',\n        icon: '💰',\n        current: router.pathname === '/earnings'\n      });\n      baseItems.splice(4, 0, {\n        name: t('teacher.analyticsAdvanced','Advanced Analytics'),\n        href: '/teacher/analytics-advanced',\n        icon: '📊',\n        current: router.pathname === '/teacher/analytics-advanced'\n      });\n    }\n\n    if (user.role === 'admin') {\n      baseItems.splice(1, 0, {\n        name: t('admin.users','Users'),\n        href: '/admin/users',\n        icon: '👥',\n        current: router.pathname === '/admin/users'\n      });\n      baseItems.splice(2, 0, {\n        name: t('admin.analytics','Analytics'),\n        href: '/admin/analytics',\n        icon: '📊',\n        current: router.pathname === '/admin/analytics'\n      });\n      baseItems.splice(3, 0, {\n        name: t('admin.settings','Settings'),\n        href: '/admin/settings',\n        icon: '⚙️',\n        current: router.pathname === '/admin/settings'\n      });\n    }\n\n    return baseItems;\n  };\n\n  const navigationItems = getNavigationItems();\n\n  // Handle logout\n  const handleLogout = async () => {\n    try {\n      await logout();\n      success('Logged out successfully');\n    } catch (error) {\n      console.error('Logout error:', error);\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 overflow-x-hidden\">\n      <NotificationProvider>\n      {/* Mobile sidebar overlay */}\n      {sidebarOpen && (\n        <div \n          className=\"fixed inset-0 z-40 bg-gray-600 bg-opacity-75 lg:hidden\"\n          onClick={() => setSidebarOpen(false)}\n        />\n      )}\n\n      {/* Sidebar */}\n      <div className={`\n        fixed inset-y-0 left-0 z-50 w-64 bg-white dark:bg-gray-800 shadow-lg transform transition-transform duration-300 ease-in-out lg:translate-x-0 lg:static lg:inset-0\n        ${sidebarOpen ? 'translate-x-0' : '-translate-x-full'}\n      `}>\n        {/* Logo */}\n        <div className=\"flex items-center justify-between h-16 px-6 border-b border-gray-200 dark:border-gray-700\">\n          <BrandLogo size={44} withTitle />\n          <button\n            onClick={() => setSidebarOpen(false)}\n            className=\"lg:hidden p-2 rounded-md text-gray-400 hover:text-gray-600 dark:hover:text-gray-300\"\n          >\n            <svg className=\"w-6 h-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n            </svg>\n          </button>\n        </div>\n\n        {/* Navigation */}\n        <nav className=\"mt-4 px-3\">\n          <div className=\"space-y-1\">\n            {navigationItems.map((item) => (\n              <Link\n                key={item.name}\n                href={item.href}\n                className={`\n                  group flex items-center px-3 py-2 text-sm font-medium rounded-md transition-colors\n                  ${item.current\n                    ? 'bg-blue-100 text-blue-700 dark:bg-blue-900 dark:text-blue-200'\n                    : 'text-gray-700 hover:bg-gray-100 hover:text-gray-900 dark:text-gray-300 dark:hover:bg-gray-700 dark:hover:text-white'\n                  }\n                `}\n                onClick={() => setSidebarOpen(false)}\n              >\n                <span className=\"mr-3 text-lg\" aria-hidden>{item.icon}</span>\n                <span>{item.name}</span>\n              </Link>\n            ))}\n          </div>\n        </nav>\n\n        {/* User info */}\n        <div className=\"absolute bottom-0 left-0 right-0 p-4 border-t border-gray-200 dark:border-gray-700\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"flex-shrink-0\">\n              <div className=\"w-8 h-8 bg-blue-100 dark:bg-blue-900 rounded-full flex items-center justify-center\">\n                <span className=\"text-sm font-medium text-blue-600 dark:text-blue-400\">\n                  {user.name.charAt(0).toUpperCase()}\n                </span>\n              </div>\n            </div>\n            <div className=\"flex-1 min-w-0\">\n              <p className=\"text-sm font-medium text-gray-900 dark:text-white truncate\">\n                {user.name}\n              </p>\n              <p className=\"text-xs text-gray-500 dark:text-gray-400 capitalize\">\n                {user.role}\n              </p>\n            </div>\n            <button\n              onClick={handleLogout}\n              className=\"flex-shrink-0 p-1 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300\"\n              title=\"Logout\"\n            >\n              <svg className=\"w-5 h-5\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\" />\n              </svg>\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Main content */}\n      <div className=\"lg:pl-64 min-h-screen\">\n        {/* Top bar */}\n        <div className=\"sticky top-0 z-30 bg-white/80 backdrop-blur dark:bg-gray-800/80 shadow-sm border-b border-gray-200 dark:border-gray-700\">\n          <div className=\"flex items-center justify-between h-14 px-4 sm:px-6 lg:px-8\">\n            {/* Mobile menu button */}\n            <button\n              onClick={() => setSidebarOpen(true)}\n              className=\"lg:hidden p-2 rounded-md text-gray-400 hover:text-gray-600 dark:hover:text-gray-300\"\n              aria-label=\"Open sidebar\"\n            >\n              <svg className=\"w-6 h-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\n              </svg>\n            </button>\n\n            {/* Page title */}\n            <div className=\"flex-1 lg:flex-none\">\n              <h1 className=\"text-base sm:text-lg font-semibold text-gray-900 dark:text-white\">\n                {title}\n              </h1>\n              <p className=\"hidden sm:block text-[11px] text-gray-500 dark:text-gray-400 -mt-0.5\">Verbing Up Your Language Skills!</p>\n            </div>\n\n            {/* Right side actions */}\n            <div className=\"flex items-center space-x-2 sm:space-x-4\">\n              {/* Language toggle */}\n              <button\n                onClick={() => setLocale(locale === 'en' ? 'tr' : 'en')}\n                className=\"px-2 py-1 text-xs rounded-md border border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-200 hover:bg-gray-50 dark:hover:bg-gray-700\"\n                aria-label=\"Toggle language\"\n                title={locale === 'en' ? 'Türkçe' : 'English'}\n              >\n                {locale === 'en' ? 'TR' : 'EN'}\n              </button>\n              <NotificationBadge \n                onClick={() => setNotificationPanelOpen(true)}\n                className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300\"\n              />\n            </div>\n          </div>\n        </div>\n\n        {/* Page content */}\n        <main className=\"flex-1\">\n          <div className=\"pt-4 pb-6 sm:py-6\">\n            <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n              {children}\n            </div>\n          </div>\n        </main>\n      </div>\n\n      {/* Notification Panel */}\n      <NotificationPanel \n        isOpen={notificationPanelOpen}\n        onClose={() => setNotificationPanelOpen(false)}\n      />\n      </NotificationProvider>\n    </div>\n  );\n} ","import React from 'react';\nimport Link from 'next/link';\nimport Image from 'next/image';\n\ninterface BrandLogoProps {\n  size?: number; // width/height in px\n  withTitle?: boolean;\n  href?: string;\n  className?: string;\n  titleClassName?: string;\n}\n\nexport default function BrandLogo({\n  size = 40,\n  withTitle = true,\n  href = '/',\n  className = '',\n  titleClassName = 'text-2xl font-extrabold text-gray-900 dark:text-white'\n}: BrandLogoProps) {\n  return (\n    <Link href={href} className={`flex items-center space-x-2 ${className}`} aria-label=\"Verbfy Home\">\n      <Image\n        src=\"/logo.png\"\n        alt=\"Verbfy logo\"\n        width={size}\n        height={size}\n        priority\n      />\n      {withTitle && <span className={titleClassName}>Verbfy</span>}\n    </Link>\n  );\n}\n\n\n"],"names":["NotificationBadge","param","onClick","className","showCount","state","useNotifications","unreadCount","jsx_runtime","jsxs","button","concat","aria-label","jsx","svg","fill","stroke","viewBox","xmlns","path","strokeLinecap","strokeLinejoin","strokeWidth","d","span","NOTIFICATION_TYPES","message","label","icon","color","textColor","reservation","material","admin","lesson","payment","system","getNotificationConfig","type","NotificationPanel","isOpen","onClose","router","useRouter","fetchNotifications","markAsRead","markAllAsRead","deleteNotification","notifications","loading","pagination","filter","setFilter","useState","typeFilter","setTypeFilter","useEffect","filters","isRead","handleNotificationClick","notification","_id","link","push","handleMarkAllAsRead","handleDeleteNotification","e","id","stopPropagation","formatTimeAgo","now","Date","date","dateString","diffInSeconds","Math","floor","getTime","filteredNotifications","div","h2","map","status","charAt","toUpperCase","slice","select","value","onChange","target","option","Array","from","length","_","index","h3","p","config","title","body","createdAt","pages","page","total","DashboardLayout","children","allowedRoles","user","logout","useAuth","t","locale","setLocale","useI18n","success","useToast","sidebarOpen","setSidebarOpen","notificationPanelOpen","setNotificationPanelOpen","includes","role","h1","navigationItems","getNavigationItems","baseItems","name","href","current","pathname","startsWith","splice","handleLogout","error","console","NotificationProvider","BrandLogo","size","withTitle","nav","Link","item","aria-hidden","main","titleClassName","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","Image","src","alt","width","height","priority"],"sourceRoot":""}