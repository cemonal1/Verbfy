# =================================================================
# VERBFY PRODUCTION ENVIRONMENT CONFIGURATION
# =================================================================
# Copy this file to .env in your production deployment
# Replace all placeholder values with actual production values
# Ensure all secrets are cryptographically secure

# =================================================================
# DATABASE CONFIGURATION
# =================================================================
MONGO_URI=mongodb+srv://production-user:production-password@production-cluster.mongodb.net/verbfy-prod?retryWrites=true&w=majority

# =================================================================
# JWT CONFIGURATION (CRITICAL - GENERATE SECURE SECRETS)
# =================================================================
# Use: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
JWT_SECRET=REPLACE_WITH_SECURE_64_CHAR_HEX_STRING
JWT_REFRESH_SECRET=REPLACE_WITH_DIFFERENT_SECURE_64_CHAR_HEX_STRING

# =================================================================
# SERVER CONFIGURATION
# =================================================================
PORT=5000
NODE_ENV=production

# =================================================================
# FRONTEND/BACKEND URLS
# =================================================================
FRONTEND_URL=https://verbfy.com
BACKEND_URL=https://api.verbfy.com

# =================================================================
# LIVEKIT CONFIGURATION (CHOOSE ONE OPTION)
# =================================================================

# Option 1: LiveKit Cloud (Recommended for production)
LIVEKIT_CLOUD_API_KEY=your-production-cloud-api-key
LIVEKIT_CLOUD_API_SECRET=your-production-cloud-api-secret
LIVEKIT_CLOUD_URL=wss://your-production-project.livekit.cloud

# Option 2: Self-hosted LiveKit (Advanced users)
# LIVEKIT_SELF_API_KEY=your-self-hosted-api-key
# LIVEKIT_SELF_API_SECRET=your-self-hosted-api-secret
# LIVEKIT_SELF_URL=wss://livekit.your-domain.com

# =================================================================
# OAUTH PROVIDERS (OPTIONAL)
# =================================================================
GOOGLE_CLIENT_ID=your-google-oauth-client-id
GOOGLE_CLIENT_SECRET=your-google-oauth-client-secret
MS_CLIENT_ID=your-microsoft-oauth-client-id
MS_CLIENT_SECRET=your-microsoft-oauth-client-secret
APPLE_CLIENT_ID=your-apple-oauth-client-id
APPLE_CLIENT_SECRET=your-apple-oauth-client-secret

# =================================================================
# PAYMENT CONFIGURATION (STRIPE)
# =================================================================
STRIPE_SECRET_KEY=sk_live_your_production_stripe_secret_key
STRIPE_PUBLISHABLE_KEY=pk_live_your_production_stripe_publishable_key
STRIPE_WEBHOOK_SECRET=whsec_your_production_webhook_secret

# =================================================================
# EMAIL CONFIGURATION (REQUIRED FOR PASSWORD RESET)
# =================================================================
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=noreply@verbfy.com
SMTP_PASS=your-app-specific-password
SMTP_FROM="Verbfy <noreply@verbfy.com>"

# =================================================================
# AWS S3 CONFIGURATION (FOR FILE UPLOADS)
# =================================================================
AWS_REGION=us-east-1
S3_BUCKET=verbfy-production-uploads
AWS_ACCESS_KEY_ID=your-production-aws-access-key
AWS_SECRET_ACCESS_KEY=your-production-aws-secret-key

# =================================================================
# SECURITY & MONITORING
# =================================================================
SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id
ALLOWED_FRAME_SRC=https://trusted-domain.com
IDEMPOTENCY_TTL_MINUTES=30

# =================================================================
# PRODUCTION SECURITY NOTES
# =================================================================
# 1. Never commit this file with real values to version control
# 2. Use environment variable injection in your deployment system
# 3. Rotate secrets regularly
# 4. Enable 2FA on all service accounts
# 5. Use least-privilege access policies
# 6. Monitor all logs and set up alerts