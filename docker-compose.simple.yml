version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: verbfy-mongodb
    restart: unless-stopped
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - verbfy-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: verbfy-redis
    restart: unless-stopped
    command: redis-server --requirepass password
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - verbfy-network

  # Backend API
  verbfy-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        NODE_ENV: production
    container_name: verbfy-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      MONGO_URI: mongodb://mongodb:27017/verbfy
      REDIS_URL: redis://:password@redis:6379
    env_file:
      - ./backend/.env.production
    ports:
      - "5001:5000"
    depends_on:
      - mongodb
      - redis
    networks:
      - verbfy-network

  # Frontend App
  verbfy-frontend:
    build:
      context: ./verbfy-app
      dockerfile: Dockerfile
    container_name: verbfy-frontend
    restart: unless-stopped
    env_file:
      - ./verbfy-app/.env.production
    ports:
      - "3001:3000"
    depends_on:
      - verbfy-backend
    networks:
      - verbfy-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: verbfy-nginx
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./nginx/logs:/var/log/nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - verbfy-backend
      - verbfy-frontend
    networks:
      - verbfy-network

volumes:
  mongodb_data:
  redis_data:

networks:
  verbfy-network:
    driver: bridge