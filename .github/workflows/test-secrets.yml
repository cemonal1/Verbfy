# Test workflow to validate secrets configuration
# This workflow can be run manually to test if secrets are properly configured
# without triggering a full deployment
#
# IMPORTANT: VS Code GitHub Actions extension warnings about "Context access might be invalid"
# are NORMAL and EXPECTED for secrets that are only defined in the repository settings.
# These warnings do not indicate actual problems with the workflow.
# To reduce these warnings in VS Code, see .vscode/settings.json configuration.

name: Test Secrets Configuration

on:
  workflow_dispatch:
    inputs:
      check_optional:
        description: 'Also check optional secrets'
        required: false
        default: false
        type: boolean

jobs:
  test-secrets:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Test required secrets
        run: |
          echo "üîç Testing required secrets configuration..."
          
          # List of required secrets
          REQUIRED_SECRETS=(
            "MONGO_URI"
            "JWT_SECRET" 
            "JWT_REFRESH_SECRET"
            "FRONTEND_URL"
            "BACKEND_URL"
            "NEXT_PUBLIC_API_URL"
            "NEXT_PUBLIC_BACKEND_URL"
            "PRODUCTION_HOST"
            "PRODUCTION_USER"
            "PRODUCTION_SSH_KEY"
          )
          
          MISSING_SECRETS=()
          CONFIGURED_SECRETS=()
          
          for secret in "${REQUIRED_SECRETS[@]}"; do
            if [[ -z "${!secret:-}" ]]; then
              MISSING_SECRETS+=("$secret")
            else
              CONFIGURED_SECRETS+=("$secret")
            fi
          done
          
          echo ""
          echo "‚úÖ Configured required secrets (${#CONFIGURED_SECRETS[@]}):"
          for secret in "${CONFIGURED_SECRETS[@]}"; do
            echo "  ‚úì $secret"
          done
          
          if [[ ${#MISSING_SECRETS[@]} -gt 0 ]]; then
            echo ""
            echo "‚ùå Missing required secrets (${#MISSING_SECRETS[@]}):"
            for secret in "${MISSING_SECRETS[@]}"; do
              echo "  ‚úó $secret"
            done
            echo ""
            echo "Please configure these secrets in GitHub repository settings."
            echo "See GITHUB_SECRETS_SETUP.md for detailed instructions."
            exit 1
          fi
          
          echo ""
          echo "üéâ All required secrets are properly configured!"
        env:
          # Required secrets for production deployment
          MONGO_URI: ${{ secrets.MONGO_URI }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_REFRESH_SECRET: ${{ secrets.JWT_REFRESH_SECRET }}
          FRONTEND_URL: ${{ secrets.FRONTEND_URL }}
          BACKEND_URL: ${{ secrets.BACKEND_URL }}
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
          NEXT_PUBLIC_BACKEND_URL: ${{ secrets.NEXT_PUBLIC_BACKEND_URL }}
          PRODUCTION_HOST: ${{ secrets.PRODUCTION_HOST }}
          PRODUCTION_USER: ${{ secrets.PRODUCTION_USER }}
          PRODUCTION_SSH_KEY: ${{ secrets.PRODUCTION_SSH_KEY }}

      - name: Test optional secrets
        if: ${{ github.event.inputs.check_optional == 'true' }}
        run: |
          echo "üîç Testing optional secrets configuration..."
          
          # List of optional secrets
          OPTIONAL_SECRETS=(
            "PRODUCTION_PORT"
            "LIVEKIT_CLOUD_API_KEY"
            "LIVEKIT_CLOUD_API_SECRET"
            "LIVEKIT_CLOUD_URL"
            "NEXT_PUBLIC_LIVEKIT_URL"
            "NEXT_PUBLIC_LIVEKIT_CLOUD_URL"
            "GOOGLE_CLIENT_ID"
            "GOOGLE_CLIENT_SECRET"
            "MS_CLIENT_ID"
            "MS_CLIENT_SECRET"
            "STRIPE_SECRET_KEY"
            "STRIPE_PUBLISHABLE_KEY"
            "STRIPE_WEBHOOK_SECRET"
            "NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY"
            "SMTP_HOST"
            "SMTP_PORT"
            "SMTP_USER"
            "SMTP_PASS"
            "SMTP_FROM"
            "AWS_REGION"
            "S3_BUCKET"
            "AWS_ACCESS_KEY_ID"
            "AWS_SECRET_ACCESS_KEY"
            "SENTRY_DSN"
            "NEXT_PUBLIC_GA_MEASUREMENT_ID"
            "SLACK_WEBHOOK_URL"
          )
          
          CONFIGURED_OPTIONAL=()
          MISSING_OPTIONAL=()
          
          for secret in "${OPTIONAL_SECRETS[@]}"; do
            if [[ -n "${!secret:-}" ]]; then
              CONFIGURED_OPTIONAL+=("$secret")
            else
              MISSING_OPTIONAL+=("$secret")
            fi
          done
          
          echo ""
          echo "‚úÖ Configured optional secrets (${#CONFIGURED_OPTIONAL[@]}):"
          for secret in "${CONFIGURED_OPTIONAL[@]}"; do
            echo "  ‚úì $secret"
          done
          
          echo ""
          echo "‚ö™ Missing optional secrets (${#MISSING_OPTIONAL[@]}):"
          for secret in "${MISSING_OPTIONAL[@]}"; do
            echo "  ‚óã $secret"
          done
          
          echo ""
          echo "‚ÑπÔ∏è  Optional secrets can be added as needed for specific features."
        env:
          # Optional secrets for additional features
          PRODUCTION_PORT: ${{ secrets.PRODUCTION_PORT }}
          LIVEKIT_CLOUD_API_KEY: ${{ secrets.LIVEKIT_CLOUD_API_KEY }}
          LIVEKIT_CLOUD_API_SECRET: ${{ secrets.LIVEKIT_CLOUD_API_SECRET }}
          LIVEKIT_CLOUD_URL: ${{ secrets.LIVEKIT_CLOUD_URL }}
          NEXT_PUBLIC_LIVEKIT_URL: ${{ secrets.NEXT_PUBLIC_LIVEKIT_URL }}
          NEXT_PUBLIC_LIVEKIT_CLOUD_URL: ${{ secrets.NEXT_PUBLIC_LIVEKIT_CLOUD_URL }}
          GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          MS_CLIENT_ID: ${{ secrets.MS_CLIENT_ID }}
          MS_CLIENT_SECRET: ${{ secrets.MS_CLIENT_SECRET }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
          STRIPE_PUBLISHABLE_KEY: ${{ secrets.STRIPE_PUBLISHABLE_KEY }}
          STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
          NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY }}
          SMTP_HOST: ${{ secrets.SMTP_HOST }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASS: ${{ secrets.SMTP_PASS }}
          SMTP_FROM: ${{ secrets.SMTP_FROM }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          S3_BUCKET: ${{ secrets.S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          NEXT_PUBLIC_GA_MEASUREMENT_ID: ${{ secrets.NEXT_PUBLIC_GA_MEASUREMENT_ID }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Summary
        run: |
          echo "üéØ Summary:"
          echo "==========="
          echo "‚úÖ Required secrets validation completed"
          echo "üìñ See GITHUB_SECRETS_SETUP.md for configuration guide"
          echo "üöÄ Ready for production deployment!"